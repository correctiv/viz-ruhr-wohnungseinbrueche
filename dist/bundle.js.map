{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 61d87dff1a259230437e","webpack:///./~/riot/riot.js","webpack:///./src/scripts/lib/d3.js","webpack:///./src/components/cities/render_city.js","webpack:///./src/components/app.tag","webpack:///./src/components/cities/cities.tag","webpack:///./src/components/cities/city.tag","webpack:///./src/components/infobox/infobox.tag","webpack:///./src/components/legend/legend.tag","webpack:///./src/components/map/map.tag","webpack:///./src/components/map/render_map.js","webpack:///./src/scripts/hilight.js","webpack:///./src/scripts/index.js","webpack:///./src/scripts/load_data.js","webpack:///./src/scripts/riot-setup.js","webpack:///./src/scripts/setup_responsiveness.js","webpack:///./~/d3-array/build/d3-array.js","webpack:///./~/d3-geo/build/d3-geo.js","webpack:///./~/d3-selection/build/d3-selection.js","webpack:///./src/config.json","webpack:///./src/data/nrw_landkreise_simplify200.topo.json","webpack:///./src/data/wed.json","webpack:///./~/topojson/dist/topojson.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","riot","global","factory","this","isBoolAttr","value","RE_BOOL_ATTRS","test","isFunction","T_FUNCTION","isObject","T_OBJECT","isUndefined","T_UNDEF","isString","T_STRING","isBlank","isArray","Array","isWritable","obj","key","descriptor","Object","getOwnPropertyDescriptor","writable","isReservedName","RE_RESERVED_NAMES","$$","selector","ctx","prototype","slice","document","querySelectorAll","$","querySelector","createFrag","createDocumentFragment","createDOMPlaceholder","createTextNode","mkEl","name","createElement","setInnerHTML","container","html","innerHTML","doc","DOMParser","parseFromString","node","ownerDocument","importNode","documentElement","appendChild","toggleVisibility","dom","show","style","display","remAttr","removeAttribute","styleObjectToString","keys","reduce","acc","prop","getAttr","getAttribute","setAttr","val","xlink","XLINK_REGEX","exec","setAttributeNS","XLINK_NS","setAttribute","safeInsert","root","curr","next","insertBefore","parentNode","walkAttrs","fn","RE_HTML_ATTRS","toLowerCase","walkNodes","context","res","firstChild","nextSibling","each","list","len","length","i","contains","array","item","indexOf","toCamel","str","replace","_","toUpperCase","startsWith","defineProperty","el","options","extend","enumerable","configurable","src","args","arguments","handleEvent","handler","e","ptag","__","parent","currentTarget","target","srcElement","which","charCode","keyCode","preventUpdate","getImmediateCustomParentTag","isMounted","update","setEventHandler","tag","eventName","cb","bind","RE_EVENTS_PREFIX","listeners","push","RIOT_EVENTS_KEY","removeEventListener","addEventListener","updateDataIs","expr","tagName","conf","isVirtual","head","ref","unmount","impl","__TAG_IMPL","hasImpl","initChildTag","attrs","a","mount","makeReplaceVirtual","onUnmount","delName","opts","dataIs","tags","_tags","arrayishRemove","normalizeAttrName","attrName","ATTRS_PREFIX","CASE_SENSITIVE_ATTRIBUTES","updateExpression","hasValue","isObj","attr","isToggle","SHOW_DIRECTIVE","HIDE_DIRECTIVE","isStyleAttr","isClassAttr","_riot_id","tmpl","create","JSON","stringify","isAttrRemoved","bool","isRtag","wasParsedOnce","hidden","IE_VERSION","nodeValue","updateAllExpressions","expressions","mkitem","base","pos","unmountRedundant","items","j","remove","apply","splice","moveNestedTags","this$1","moveChildTag","move","nextTag","moveVirtual","insert","makeVirtual","append","_each","LOOP_DIRECTIVE","hasKeys","mustReorder","LOOP_NO_REORDER_DIRECTIVE","getTagName","placeholder","child","getTag","ifExpr","CONDITIONAL_DIRECTIVE","oldItems","isLoop","isAnonymous","loopKeys","removeChild","frag","isObject$$1","map","filter","doReorder","oldPos","isNew","mustAppend","mustCreate","Tag$1","cloneNode","index","arrayishAdd","t","parseExpressions","mustIncludeRoot","tree","children","tagImpl","type","nodeType","hasExpr","IfExpr","init","IS_DIRECTIVE","attributes","parentElement","outerHTML","parseAttributes","REF_DIRECTIVES","RefExpr","specialTags","select","trim","selectedIndex","tname","rootEls","childElementCount","replaceYield","reHasYield","reYieldSrc","text","reYieldDest","def","reYieldAll","mkdom","match","GENERIC","tblTags","Tag$2","css","onCreate","tag$1","class","constructor","mountTo","styleManager","inject","add","tag2$1","mount$1","pushTagsTo","riotTag","elem","allTags","selectTags","split","nodeList","_el","mixin$1","mix","g","mixins_id","store","globals","mixins","Error","update$1","__TAGS_CACHE","unregister$1","updateOpts","instAttrs","skipAnonymous","settings$1","skipAnonymousTags","cleanUpData","implAttrs","propsInSyncWithParent","observable$1","_tag","virts","tail","__uid","data","nextOpts","canTrigger","shouldUpdate","inheritFrom","trigger","instance","props","propsBlacklist","proto","getPrototypeOf","concat","getOwnPropertyNames","hasGetterSetter","get","set","hasOwnProperty","isPrototypeOf","k","v","globalMixin","GLOBAL_MIXIN","mixin","one","mustKeepRoot","tagIndex","forEach","unmountAll","off","mustSync","newPos","skipDataIs","namedTag","o","ensureArray","dest","isArr","hasIndex","oldIndex","implClass","_innerHTML","replaceChild","sib","styleNode","cssTextProp","WIN","window","undefined","RE_SPECIAL_TAGS","RE_SPECIAL_TAGS_NO_OPTION","viewbox","documentMode","check","freeze","byName","remainder","needsInject","newNode","userNode","getElementsByTagName","styleSheet","join","cssText","brackets","UNDEF","_loopback","re","_rewrite","bp","_cache","RegExp","source","REGLOB","_create","pair","DEFAULT","_pairs","arr","UNSUPPORTED","NEED_ESCAPE","S_QBLOCKS","_brackets","reOrIdx","_regex","_reset","cachedBrackets","_setSettings","b","_settings","R_MLCOMMS","R_STRINGS","FINDBRACES","(","[","{","_bp","unescapeStr","s","isexpr","parts","skipBraces","ch","ix","recch","lastIndex","start","settings","_tmpl","_logErr","err","riotData","errorHandler","console","error","_getTmpl","Function","qstr","RE_DQUOTE","_parseExpr","RE_QBMARK","asText","mm","lv","ir","RE_BREND","RE_QBLOCK","div","CH_IDEXPR","cnt","RE_CSNAME","jsb","rightContext","_wrapExpr","tb","JS_VARNAME","mvar","JS_CONTEXT","JS_NOPROPS","clearCache","String","fromCharCode","version","callbacks","defineProperties","on","event","fns","arguments$1","arglen","misc","stub","pristine","current","attrValue","rawValue","hasExp","old","customParent","tagOrDom","refs","tr","th","td","col","version$1","core","Tag","tag2","unregister","util","vdom","Tag$$1","tag$$1","tag2$$1","mount$$1","mixin$$1","update$$1","unregister$$1","version$$1","observable","riot$1","_d3Selection","_d3Geo","geoPath","geoMercator","_interopRequireWildcard","__esModule","newObj","default","_d","d3","_ref","selection","feature","width","height","path","projection","fitSize","selectAll","enter","f","color","_this","breakpoint","STATE","control","EVT","breakpointChange","active","updateSelectedCity","emptyInfobox","getFeatures","compare","features","properties","BEZ","sort","_interopRequireDefault","_render_city","_render_city2","selectCity","updateInfobox","renderMapSymbol","close","closeInfobox","getColor","step","colors","steps","_render_map","_render_map2","_hilight","_hilight2","mapMouseover","mapHilight","d","hilight","hilighted","classed","config","topoLayerName","_load_data","_load_data2","_topojson","topojson","geoSource","wedData","objects","n","GEN","x","AGS","name_short","bez","C","BP","small","medium","large","getBreakpoint","w","innerWidth","clientWidth","find","ascendingComparator","ascending","tickIncrement","stop","count","Math","max","power","floor","log","LN10","pow","e10","e5","e2","tickStep","step0","abs","step1","NaN","bisector","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","pairs","cross","values0","values1","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","delta","mean","sum","isNaN","deviation","sqrt","extent","min","constant","identity","range","ceil","ticks","reverse","isFinite","sturges","LN2","histogram","xz","domain","x0","x1","tz","threshold","shift","pop","bin","bins","thresholds","quantile","value1","freedmanDiaconis","scott","median","numbers","merge","arrays","merged","permute","indexes","permutes","scan","xi","xj","shuffle","random","transpose","matrix","row","zip","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","d3Array","Adder","reset","adder","bv","av","acos","pi","asin","halfPi","haversin","sin","noop","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","point","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","atan2","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","l","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","lambda2","sign$$1","lambdai","degrees","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon","rangeCompare","rangeContains","range$$1","centroidPoint","centroidPointCartesian","y","z","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","y0","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","radius","direction","t0","t1","cosRadius","sinRadius","circleRadius","Intersection","points","other","entry","link","clipExtent","y1","visible","interpolate","from","to","a1","corner","comparePoint","compareIntersection","ca","activeStream","polygonInside","winding","polygon","a0","ring","b0","b1","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","ao","ob","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","dy","graticuleY","dx","graticule","lines","DX","X","DY","Y","precision","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","object","h","clip","scale","translate","geoStream","boundsStream$1","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","rotate","center","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r","r0","sy0","r0y","sign","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","temp","valueOf","epsilon2","PI","exp","streamObjectType","Feature","FeatureCollection","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","deltaMax","Infinity","centroid","circle","line","ax","ay","bx","by","pointEqual","subject","p1","isSubject","point0","sinPhi1","point1","absDelta","arc","intersection","phiArc","containsObjectType","cy1","sy1","kx0","ky0","kx1","ky1","B","A","areaSum$1","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","_circle","contextStream","projectionStream","measure","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","v0","v00","point2","smallRadius","code","intersect","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","q","polar","meridian","q1","transform","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$1","sx","sy","reflectX","reflectY","orthographic","stereographic","transverseMercator","geoArea","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","creatorInherit","uri","namespaceURI","xhtml","createElementNS","creatorFixed","fullname","space","local","Local","nextId","toString","filterContextListener","listener","group","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames","typenames","onRemove","typename","__on","capture","onAdd","wrap","filterEvents","customEvent","that","sourceEvent","none","empty","EnterNode","datum","_next","_parent","bindIndex","exit","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","attrRemove","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","htmlConstant","htmlFunction","raise","lower","previousSibling","constantNull","dispatchEvent","params","defaultView","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","namespaces","svg","xml","xmlns","namespace","prefix","creator","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","top","clientTop","mouse","changedTouches","selection_select","subgroups","subnode","subgroup","selectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","selection_data","enterGroup","updateGroup","exitGroup","previous","_exit","selection_exit","selection_merge","groups0","groups1","m0","m1","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","order","selection_call","callback","selection_nodes","nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","getAttributeNS","selection_style","getComputedStyle","getPropertyValue","selection_property","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","before","selection_remove","selection_datum","property","selection_dispatch","dispatch","touch","touches","identifier","geoFile","cities","arcs","nrw_landkreise_simplify200","crs","05111","c16","ca16","q16","hz16","05112","05113","05114","05116","05117","05119","05120","05122","05124","05154","05158","05162","05166","05170","05314","05315","05316","05334","05358","05362","05366","05370","05374","05378","05382","05512","05513","05515","05554","05558","05562","05566","05570","05711","05754","05758","05762","05766","05770","05774","05911","05913","05914","05915","05916","05954","05958","05962","05966","05970","05974","05978","feature$1","topology","bbox","transformPoint","meshArcs","object$$1","extractArcs","stitch","extract0","geomsByArc","geom","extract1","extract2","extract3","geoms","planarRingArea","mergeArcs","extract","polygonsByArc","polygons","neighbors","ki","rotateArray","end","offset","reverse$1","geomifyObject","input","geomifyFeatureCollection","geomifyFeature","geomifyGeometry","output","hashArc","equalArc","arcA","arcB","ia","ja","ib","jb","filterTrue","filterIdentity","filterNotNull","planarTriangleArea","triangle","planarRingArea$1","copy","quantile$1","halfArea","sphericalRingArea","interior","sphericalTriangleArea","bboxPoint","bboxGeometry","ends","dp","flush","fragmentByEnd","fragmentByStart","stitchedArcs","fragments","emptyIndex","fg","unshift","gf","mesh","indexesByArc","geometryType","ij","ik","untransform","round","quantize","quantizePoint","quantizeGeometry","quantizeArc","box","inputs","outputs","boundGeometry","boundGeometryType","boundPoint","boundLine","boundMultiLine","hashset","hash","equal","mask","collisions","has","hashmap","keyType","keyEmpty","valueType","matchKey","keystore","valstore","maybeSet","missingValue","equalPoint","pointA","pointB","buffer","ArrayBuffer","floats","Float64Array","uints","Uint32Array","hashPoint","sequence","previousIndex","currentIndex","nextIndex","visitedByIndex","leftIndex","leftByIndex","rightIndex","rightByIndex","junctionCount","junctionByIndex","indexByPoint","hashIndex","equalIndex","Int32Array","rings","Int8Array","junctionByPoint","cut","junctions","lineMid","0","1","ringMid","ringFixed","dedup","dedupLine","startPoint","endPoint","startArcs","startArc","endArcs","endArc","arcsByEnd","equalLine","reverseEqualLine","dedupRing","equalRing","reverseEqualRing","findMinimumOffset","ka","kb","minimum","minimumPoint","arcCount","extractGeometry","extractGeometryType","extractLine","extractRing","extractMultiRing","prequantize","quantizePoints","px","py","quantizeLine","quantizeRing","quantizePolygon","quantizeGeometryType","quantization","indexGeometry","geometry$$1","indexGeometryType","indexArcs","indexByArc","indexMultiArcs","prune","pruneGeometry","pruneArcs","pruneMultiArcs","pruneArc","newIndex","oldReverse","newIndexByOldIndex","newArcIndex","newArcs","oldArcs","oldObjects","newObjects","filterGeometry","filterRings","filterExteriorRing","filterInteriorRing","filterAttached","testGeometry","testArcs","ringIndex","uniqueRing","uniqueRingByArc","filterWeight","minWeight","weight","Number","MIN_VALUE","filterAttachedWeight","newHeap","up","down","heap","removed","presimplify","triangles","maxWeight","simplify"],"mappings":"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IACAC,OAAA,KAEA+4B,QACA/4B,OAAA,IACAD,MAAA,OpBgqPM,SAAU1gB,EAAQD,GqB3rPxBC,EAAAD,SACA+P,KAAA,WACA6ppL,OACA,qBACA,sBAEAC,WACA,kBACA,oBAGA3Z,SACA41B,4BACA9pC,KAAA,qBACAi0B,aAEA4V,OAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,iBACAlC,IAAA,WAIA23B,OAEA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,YACAlC,IAAA,WAIA23B,OAEA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,OACAlC,IAAA,sBAIA23B,OAEA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,uBACAlC,IAAA,WAIA23B,QAEA,GACA,KACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,GACA,KACA,GACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,qBACAlC,IAAA,WAIA23B,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,QACAlC,IAAA,WAIA23B,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,QACAlC,IAAA,sBAIA23B,OAEA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,GACA,KACA,GACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,mBACAlC,IAAA,WAIA23B,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,aACAlC,IAAA,sBAIA23B,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,SACAlC,IAAA,sBAIA23B,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,KACA,GACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,WACAlC,IAAA,sBAIA23B,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,QACAlC,IAAA,WAIA23B,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,UACAlC,IAAA,WAIA23B,OAEA,IACA,IACA,IACA,IACA,IACA,KACA,GACA,KACA,GACA,KACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,QACAlC,IAAA,WAIA23B,QAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,kBACAlC,IAAA,sBAIA23B,QAEA,IACA,KACA,IACA,KACA,IACA,KACA,GACA,KACA,GACA,KACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,SACAlC,IAAA,WAIA23B,QAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,sBACAlC,IAAA,WAIA23B,OAEA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,OACAlC,IAAA,sBAIA23B,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,QACAlC,IAAA,WAIA23B,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,WACAlC,IAAA,WAIA23B,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,aACAlC,IAAA,WAIA23B,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,UACAlC,IAAA,sBAIA23B,QAGA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,QAKA,OAIA7pC,KAAA,eACAiS,YACAqC,IAAA,QACAF,IAAA,sBACAlC,IAAA,WAIA23B,QAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,oBACAlC,IAAA,WAIA23B,OAEA,IACA,IACA,IACA,KACA,IACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,KACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,EACA,KACA,EACA,IACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,OACAlC,IAAA,WAIA23B,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,WACAlC,IAAA,sBAIA23B,OAEA,KACA,GACA,KACA,GACA,KACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,6BACAlC,IAAA,WAIA23B,OAEA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,GACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,KACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,OACAlC,IAAA,WAIA23B,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,UACAlC,IAAA,sBAIA23B,OAEA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,YACAlC,IAAA,WAIA23B,OAEA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,OACAlC,IAAA,sBAIA23B,OAEA,KACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,KACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,mBACAlC,IAAA,WAIA23B,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,GACA,KACA,GACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,SACAlC,IAAA,WAIA23B,OAEA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,EACA,KACA,EACA,KACA,EACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,WACAlC,IAAA,WAIA23B,QAEA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,KACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,YACAlC,IAAA,WAIA23B,QAEA,GACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,KACA,GACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,gBACAlC,IAAA,sBAIA23B,QAEA,GACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,GACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,QACAlC,IAAA,sBAIA23B,QAEA,IACA,KACA,IACA,IACA,KACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,aACAlC,IAAA,sBAIA23B,QAEA,GACA,KACA,GACA,KACA,GACA,IACA,KACA,GACA,IACA,IACA,KACA,GACA,KACA,GACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,mBACAlC,IAAA,WAIA23B,OAEA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,YACAlC,IAAA,sBAIA23B,OAEA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,YACAlC,IAAA,sBAIA23B,QAEA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,GACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,YACAlC,IAAA,sBAIA23B,OAEA,KACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,YACAlC,IAAA,WAIA23B,OAEA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,QACAlC,IAAA,WAIA23B,QAEA,GACA,KACA,GACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,UACAlC,IAAA,sBAIA23B,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,aACAlC,IAAA,sBAIA23B,QAEA,IACA,KACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,WACAlC,IAAA,sBAIA23B,QAEA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,QACAlC,IAAA,sBAIA23B,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,UACAlC,IAAA,WAIA23B,QAEA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,kBACAlC,IAAA,WAIA23B,QAEA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,IACA,KACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,YACAlC,IAAA,WAIA23B,QAEA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,sBACAlC,IAAA,sBAIA23B,QAEA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,IACA,KACA,GACA,IACA,IACA,IACA,KACA,GACA,KACA,GACA,KACA,IACA,KACA,IACA,IACA,KACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,MAGA7pC,KAAA,UACAiS,YACAqC,IAAA,QACAF,IAAA,oBACAlC,IAAA,aAMA63B,KACA/pC,KAAA,OACAiS,YACA9e,KAAA,oCrBosPM,SAAUjD,EAAQD,GsBzqoBxBC,EAAAD,SACA+5C,SACAC,IAAA,KACAC,KAAA,IACAC,IAAA,IACAC,KAAA,IACA75C,EAAA,KAEA85C,SACAJ,IAAA,KACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEA+5C,SACAL,IAAA,KACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAg6C,SACAN,IAAA,IACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAi6C,SACAP,IAAA,IACAC,KAAA,GACAC,IAAA,GACAC,KAAA,IACA75C,EAAA,KAEAk6C,SACAR,IAAA,IACAC,KAAA,IACAC,IAAA,GACAC,KAAA,IACA75C,EAAA,KAEAm6C,SACAT,IAAA,IACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAo6C,SACAV,IAAA,IACAC,KAAA,GACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAq6C,SACAX,IAAA,IACAC,KAAA,GACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAs6C,SACAZ,IAAA,KACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAu6C,SACAb,IAAA,IACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAw6C,SACAd,IAAA,KACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAy6C,SACAf,IAAA,KACAC,KAAA,IACAC,IAAA,GACAC,KAAA,IACA75C,EAAA,KAEA06C,SACAhB,IAAA,IACAC,KAAA,GACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEA26C,SACAjB,IAAA,KACAC,KAAA,IACAC,IAAA,GACAC,KAAA,IACA75C,EAAA,KAEA46C,SACAlB,IAAA,IACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEA66C,SACAnB,IAAA,KACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEA86C,SACApB,IAAA,IACAC,KAAA,GACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEA+6C,SACArB,IAAA,KACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAg7C,SACAtB,IAAA,IACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAi7C,SACAvB,IAAA,KACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAk7C,SACAxB,IAAA,IACAC,KAAA,GACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAm7C,SACAzB,IAAA,IACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAo7C,SACA1B,IAAA,IACAC,KAAA,IACAC,IAAA,GACAC,KAAA,IACA75C,EAAA,KAEAq7C,SACA3B,IAAA,IACAC,KAAA,GACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAs7C,SACA5B,IAAA,KACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAu7C,SACA7B,IAAA,IACAC,KAAA,GACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAw7C,SACA9B,IAAA,IACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAy7C,SACA/B,IAAA,IACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEA07C,SACAhC,IAAA,IACAC,KAAA,IACAC,IAAA,GACAC,KAAA,IACA75C,EAAA,KAEA27C,SACAjC,IAAA,IACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEA47C,SACAlC,IAAA,KACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEA67C,SACAnC,IAAA,IACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEA87C,SACApC,IAAA,IACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEA+7C,SACArC,IAAA,IACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAg8C,SACAtC,IAAA,IACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAi8C,SACAvC,IAAA,IACAC,KAAA,GACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAk8C,SACAxC,IAAA,IACAC,KAAA,GACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAm8C,SACAzC,IAAA,IACAC,KAAA,GACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAo8C,SACA1C,IAAA,IACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAq8C,SACA3C,IAAA,IACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAs8C,SACA5C,IAAA,KACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAu8C,SACA7C,IAAA,KACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAw8C,SACA9C,IAAA,IACAC,KAAA,GACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEAy8C,SACA/C,IAAA,IACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEA08C,SACAhD,IAAA,IACAC,KAAA,IACAC,IAAA,KACAC,KAAA,IACA75C,EAAA,KAEA28C,SACAjD,IAAA,KACAC,KAAA,IACAC,IAAA,KACAC,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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(12);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {/* Riot v3.4.4, @license MIT */\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.riot = global.riot || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar __TAGS_CACHE = [];\n\tvar __TAG_IMPL = {};\n\tvar GLOBAL_MIXIN = '__global_mixin';\n\tvar ATTRS_PREFIX = 'riot-';\n\tvar REF_DIRECTIVES = ['ref', 'data-ref'];\n\tvar IS_DIRECTIVE = 'data-is';\n\tvar CONDITIONAL_DIRECTIVE = 'if';\n\tvar LOOP_DIRECTIVE = 'each';\n\tvar LOOP_NO_REORDER_DIRECTIVE = 'no-reorder';\n\tvar SHOW_DIRECTIVE = 'show';\n\tvar HIDE_DIRECTIVE = 'hide';\n\tvar RIOT_EVENTS_KEY = '__riot-events__';\n\tvar T_STRING = 'string';\n\tvar T_OBJECT = 'object';\n\tvar T_UNDEF  = 'undefined';\n\tvar T_FUNCTION = 'function';\n\tvar XLINK_NS = 'http://www.w3.org/1999/xlink';\n\tvar XLINK_REGEX = /^xlink:(\\w+)/;\n\tvar WIN = typeof window === T_UNDEF ? undefined : window;\n\tvar RE_SPECIAL_TAGS = /^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?|opt(?:ion|group))$/;\n\tvar RE_SPECIAL_TAGS_NO_OPTION = /^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?)$/;\n\tvar RE_EVENTS_PREFIX = /^on/;\n\tvar RE_RESERVED_NAMES = /^(?:_(?:item|id|parent)|update|root|(?:un)?mount|mixin|is(?:Mounted|Loop)|tags|refs|parent|opts|trigger|o(?:n|ff|ne))$/;\n\tvar RE_HTML_ATTRS = /([-\\w]+) ?= ?(?:\"([^\"]*)|'([^']*)|({[^}]*}))/g;\n\tvar CASE_SENSITIVE_ATTRIBUTES = { 'viewbox': 'viewBox' };\n\tvar RE_BOOL_ATTRS = /^(?:disabled|checked|readonly|required|allowfullscreen|auto(?:focus|play)|compact|controls|default|formnovalidate|hidden|ismap|itemscope|loop|multiple|muted|no(?:resize|shade|validate|wrap)?|open|reversed|seamless|selected|sortable|truespeed|typemustmatch)$/;\n\tvar IE_VERSION = (WIN && WIN.document || {}).documentMode | 0;\n\t\n\t/**\n\t * Check Check if the passed argument is undefined\n\t * @param   { String } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isBoolAttr(value) {\n\t  return RE_BOOL_ATTRS.test(value)\n\t}\n\t\n\t/**\n\t * Check if passed argument is a function\n\t * @param   { * } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isFunction(value) {\n\t  return typeof value === T_FUNCTION\n\t}\n\t\n\t/**\n\t * Check if passed argument is an object, exclude null\n\t * NOTE: use isObject(x) && !isArray(x) to excludes arrays.\n\t * @param   { * } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isObject(value) {\n\t  return value && typeof value === T_OBJECT // typeof null is 'object'\n\t}\n\t\n\t/**\n\t * Check if passed argument is undefined\n\t * @param   { * } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isUndefined(value) {\n\t  return typeof value === T_UNDEF\n\t}\n\t\n\t/**\n\t * Check if passed argument is a string\n\t * @param   { * } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isString(value) {\n\t  return typeof value === T_STRING\n\t}\n\t\n\t/**\n\t * Check if passed argument is empty. Different from falsy, because we dont consider 0 or false to be blank\n\t * @param { * } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isBlank(value) {\n\t  return isUndefined(value) || value === null || value === ''\n\t}\n\t\n\t/**\n\t * Check if passed argument is a kind of array\n\t * @param   { * } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isArray(value) {\n\t  return Array.isArray(value) || value instanceof Array\n\t}\n\t\n\t/**\n\t * Check whether object's property could be overridden\n\t * @param   { Object }  obj - source object\n\t * @param   { String }  key - object property\n\t * @returns { Boolean } -\n\t */\n\tfunction isWritable(obj, key) {\n\t  var descriptor = Object.getOwnPropertyDescriptor(obj, key);\n\t  return isUndefined(obj[key]) || descriptor && descriptor.writable\n\t}\n\t\n\t/**\n\t * Check if passed argument is a reserved name\n\t * @param   { String } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isReservedName(value) {\n\t  return RE_RESERVED_NAMES.test(value)\n\t}\n\t\n\tvar check = Object.freeze({\n\t\tisBoolAttr: isBoolAttr,\n\t\tisFunction: isFunction,\n\t\tisObject: isObject,\n\t\tisUndefined: isUndefined,\n\t\tisString: isString,\n\t\tisBlank: isBlank,\n\t\tisArray: isArray,\n\t\tisWritable: isWritable,\n\t\tisReservedName: isReservedName\n\t});\n\t\n\t/**\n\t * Shorter and fast way to select multiple nodes in the DOM\n\t * @param   { String } selector - DOM selector\n\t * @param   { Object } ctx - DOM node where the targets of our search will is located\n\t * @returns { Object } dom nodes found\n\t */\n\tfunction $$(selector, ctx) {\n\t  return Array.prototype.slice.call((ctx || document).querySelectorAll(selector))\n\t}\n\t\n\t/**\n\t * Shorter and fast way to select a single node in the DOM\n\t * @param   { String } selector - unique dom selector\n\t * @param   { Object } ctx - DOM node where the target of our search will is located\n\t * @returns { Object } dom node found\n\t */\n\tfunction $(selector, ctx) {\n\t  return (ctx || document).querySelector(selector)\n\t}\n\t\n\t/**\n\t * Create a document fragment\n\t * @returns { Object } document fragment\n\t */\n\tfunction createFrag() {\n\t  return document.createDocumentFragment()\n\t}\n\t\n\t/**\n\t * Create a document text node\n\t * @returns { Object } create a text node to use as placeholder\n\t */\n\tfunction createDOMPlaceholder() {\n\t  return document.createTextNode('')\n\t}\n\t\n\t/**\n\t * Create a generic DOM node\n\t * @param   { String } name - name of the DOM node we want to create\n\t * @returns { Object } DOM node just created\n\t */\n\tfunction mkEl(name) {\n\t  return document.createElement(name)\n\t}\n\t\n\t/**\n\t * Set the inner html of any DOM node SVGs included\n\t * @param { Object } container - DOM node where we'll inject new html\n\t * @param { String } html - html to inject\n\t */\n\t/* istanbul ignore next */\n\tfunction setInnerHTML(container, html) {\n\t  if (!isUndefined(container.innerHTML))\n\t    { container.innerHTML = html; }\n\t    // some browsers do not support innerHTML on the SVGs tags\n\t  else {\n\t    var doc = new DOMParser().parseFromString(html, 'application/xml');\n\t    var node = container.ownerDocument.importNode(doc.documentElement, true);\n\t    container.appendChild(node);\n\t  }\n\t}\n\t\n\t/**\n\t * Toggle the visibility of any DOM node\n\t * @param   { Object }  dom - DOM node we want to hide\n\t * @param   { Boolean } show - do we want to show it?\n\t */\n\t\n\tfunction toggleVisibility(dom, show) {\n\t  dom.style.display = show ? '' : 'none';\n\t  dom['hidden'] = show ? false : true;\n\t}\n\t\n\t/**\n\t * Remove any DOM attribute from a node\n\t * @param   { Object } dom - DOM node we want to update\n\t * @param   { String } name - name of the property we want to remove\n\t */\n\tfunction remAttr(dom, name) {\n\t  dom.removeAttribute(name);\n\t}\n\t\n\t/**\n\t * Convert a style object to a string\n\t * @param   { Object } style - style object we need to parse\n\t * @returns { String } resulting css string\n\t * @example\n\t * styleObjectToString({ color: 'red', height: '10px'}) // => 'color: red; height: 10px'\n\t */\n\tfunction styleObjectToString(style) {\n\t  return Object.keys(style).reduce(function (acc, prop) {\n\t    return (acc + \" \" + prop + \": \" + (style[prop]) + \";\")\n\t  }, '')\n\t}\n\t\n\t/**\n\t * Get the value of any DOM attribute on a node\n\t * @param   { Object } dom - DOM node we want to parse\n\t * @param   { String } name - name of the attribute we want to get\n\t * @returns { String | undefined } name of the node attribute whether it exists\n\t */\n\tfunction getAttr(dom, name) {\n\t  return dom.getAttribute(name)\n\t}\n\t\n\t/**\n\t * Set any DOM attribute\n\t * @param { Object } dom - DOM node we want to update\n\t * @param { String } name - name of the property we want to set\n\t * @param { String } val - value of the property we want to set\n\t */\n\tfunction setAttr(dom, name, val) {\n\t  var xlink = XLINK_REGEX.exec(name);\n\t  if (xlink && xlink[1])\n\t    { dom.setAttributeNS(XLINK_NS, xlink[1], val); }\n\t  else\n\t    { dom.setAttribute(name, val); }\n\t}\n\t\n\t/**\n\t * Insert safely a tag to fix #1962 #1649\n\t * @param   { HTMLElement } root - children container\n\t * @param   { HTMLElement } curr - node to insert\n\t * @param   { HTMLElement } next - node that should preceed the current node inserted\n\t */\n\tfunction safeInsert(root, curr, next) {\n\t  root.insertBefore(curr, next.parentNode && next);\n\t}\n\t\n\t/**\n\t * Minimize risk: only zero or one _space_ between attr & value\n\t * @param   { String }   html - html string we want to parse\n\t * @param   { Function } fn - callback function to apply on any attribute found\n\t */\n\tfunction walkAttrs(html, fn) {\n\t  if (!html)\n\t    { return }\n\t  var m;\n\t  while (m = RE_HTML_ATTRS.exec(html))\n\t    { fn(m[1].toLowerCase(), m[2] || m[3] || m[4]); }\n\t}\n\t\n\t/**\n\t * Walk down recursively all the children tags starting dom node\n\t * @param   { Object }   dom - starting node where we will start the recursion\n\t * @param   { Function } fn - callback to transform the child node just found\n\t * @param   { Object }   context - fn can optionally return an object, which is passed to children\n\t */\n\tfunction walkNodes(dom, fn, context) {\n\t  if (dom) {\n\t    var res = fn(dom, context);\n\t    var next;\n\t    // stop the recursion\n\t    if (res === false) { return }\n\t\n\t    dom = dom.firstChild;\n\t\n\t    while (dom) {\n\t      next = dom.nextSibling;\n\t      walkNodes(dom, fn, res);\n\t      dom = next;\n\t    }\n\t  }\n\t}\n\t\n\tvar dom = Object.freeze({\n\t\t$$: $$,\n\t\t$: $,\n\t\tcreateFrag: createFrag,\n\t\tcreateDOMPlaceholder: createDOMPlaceholder,\n\t\tmkEl: mkEl,\n\t\tsetInnerHTML: setInnerHTML,\n\t\ttoggleVisibility: toggleVisibility,\n\t\tremAttr: remAttr,\n\t\tstyleObjectToString: styleObjectToString,\n\t\tgetAttr: getAttr,\n\t\tsetAttr: setAttr,\n\t\tsafeInsert: safeInsert,\n\t\twalkAttrs: walkAttrs,\n\t\twalkNodes: walkNodes\n\t});\n\t\n\tvar styleNode;\n\tvar cssTextProp;\n\tvar byName = {};\n\tvar remainder = [];\n\tvar needsInject = false;\n\t\n\t// skip the following code on the server\n\tif (WIN) {\n\t  styleNode = (function () {\n\t    // create a new style element with the correct type\n\t    var newNode = mkEl('style');\n\t    setAttr(newNode, 'type', 'text/css');\n\t\n\t    // replace any user node or insert the new one into the head\n\t    var userNode = $('style[type=riot]');\n\t    /* istanbul ignore next */\n\t    if (userNode) {\n\t      if (userNode.id) { newNode.id = userNode.id; }\n\t      userNode.parentNode.replaceChild(newNode, userNode);\n\t    }\n\t    else { document.getElementsByTagName('head')[0].appendChild(newNode); }\n\t\n\t    return newNode\n\t  })();\n\t  cssTextProp = styleNode.styleSheet;\n\t}\n\t\n\t/**\n\t * Object that will be used to inject and manage the css of every tag instance\n\t */\n\tvar styleManager = {\n\t  styleNode: styleNode,\n\t  /**\n\t   * Save a tag style to be later injected into DOM\n\t   * @param { String } css - css string\n\t   * @param { String } name - if it's passed we will map the css to a tagname\n\t   */\n\t  add: function add(css, name) {\n\t    if (name) { byName[name] = css; }\n\t    else { remainder.push(css); }\n\t    needsInject = true;\n\t  },\n\t  /**\n\t   * Inject all previously saved tag styles into DOM\n\t   * innerHTML seems slow: http://jsperf.com/riot-insert-style\n\t   */\n\t  inject: function inject() {\n\t    if (!WIN || !needsInject) { return }\n\t    needsInject = false;\n\t    var style = Object.keys(byName)\n\t      .map(function(k) { return byName[k] })\n\t      .concat(remainder).join('\\n');\n\t    /* istanbul ignore next */\n\t    if (cssTextProp) { cssTextProp.cssText = style; }\n\t    else { styleNode.innerHTML = style; }\n\t  }\n\t};\n\t\n\t/**\n\t * The riot template engine\n\t * @version v3.0.3\n\t */\n\t/**\n\t * riot.util.brackets\n\t *\n\t * - `brackets    ` - Returns a string or regex based on its parameter\n\t * - `brackets.set` - Change the current riot brackets\n\t *\n\t * @module\n\t */\n\t\n\t/* global riot */\n\t\n\t/* istanbul ignore next */\n\tvar brackets = (function (UNDEF) {\n\t\n\t  var\n\t    REGLOB = 'g',\n\t\n\t    R_MLCOMMS = /\\/\\*[^*]*\\*+(?:[^*\\/][^*]*\\*+)*\\//g,\n\t\n\t    R_STRINGS = /\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|`[^`\\\\]*(?:\\\\[\\S\\s][^`\\\\]*)*`/g,\n\t\n\t    S_QBLOCKS = R_STRINGS.source + '|' +\n\t      /(?:\\breturn\\s+|(?:[$\\w\\)\\]]|\\+\\+|--)\\s*(\\/)(?![*\\/]))/.source + '|' +\n\t      /\\/(?=[^*\\/])[^[\\/\\\\]*(?:(?:\\[(?:\\\\.|[^\\]\\\\]*)*\\]|\\\\.)[^[\\/\\\\]*)*?(\\/)[gim]*/.source,\n\t\n\t    UNSUPPORTED = RegExp('[\\\\' + 'x00-\\\\x1F<>a-zA-Z0-9\\'\",;\\\\\\\\]'),\n\t\n\t    NEED_ESCAPE = /(?=[[\\]()*+?.^$|])/g,\n\t\n\t    FINDBRACES = {\n\t      '(': RegExp('([()])|'   + S_QBLOCKS, REGLOB),\n\t      '[': RegExp('([[\\\\]])|' + S_QBLOCKS, REGLOB),\n\t      '{': RegExp('([{}])|'   + S_QBLOCKS, REGLOB)\n\t    },\n\t\n\t    DEFAULT = '{ }';\n\t\n\t  var _pairs = [\n\t    '{', '}',\n\t    '{', '}',\n\t    /{[^}]*}/,\n\t    /\\\\([{}])/g,\n\t    /\\\\({)|{/g,\n\t    RegExp('\\\\\\\\(})|([[({])|(})|' + S_QBLOCKS, REGLOB),\n\t    DEFAULT,\n\t    /^\\s*{\\^?\\s*([$\\w]+)(?:\\s*,\\s*(\\S+))?\\s+in\\s+(\\S.*)\\s*}/,\n\t    /(^|[^\\\\]){=[\\S\\s]*?}/\n\t  ];\n\t\n\t  var\n\t    cachedBrackets = UNDEF,\n\t    _regex,\n\t    _cache = [],\n\t    _settings;\n\t\n\t  function _loopback (re) { return re }\n\t\n\t  function _rewrite (re, bp) {\n\t    if (!bp) { bp = _cache; }\n\t    return new RegExp(\n\t      re.source.replace(/{/g, bp[2]).replace(/}/g, bp[3]), re.global ? REGLOB : ''\n\t    )\n\t  }\n\t\n\t  function _create (pair) {\n\t    if (pair === DEFAULT) { return _pairs }\n\t\n\t    var arr = pair.split(' ');\n\t\n\t    if (arr.length !== 2 || UNSUPPORTED.test(pair)) {\n\t      throw new Error('Unsupported brackets \"' + pair + '\"')\n\t    }\n\t    arr = arr.concat(pair.replace(NEED_ESCAPE, '\\\\').split(' '));\n\t\n\t    arr[4] = _rewrite(arr[1].length > 1 ? /{[\\S\\s]*?}/ : _pairs[4], arr);\n\t    arr[5] = _rewrite(pair.length > 3 ? /\\\\({|})/g : _pairs[5], arr);\n\t    arr[6] = _rewrite(_pairs[6], arr);\n\t    arr[7] = RegExp('\\\\\\\\(' + arr[3] + ')|([[({])|(' + arr[3] + ')|' + S_QBLOCKS, REGLOB);\n\t    arr[8] = pair;\n\t    return arr\n\t  }\n\t\n\t  function _brackets (reOrIdx) {\n\t    return reOrIdx instanceof RegExp ? _regex(reOrIdx) : _cache[reOrIdx]\n\t  }\n\t\n\t  _brackets.split = function split (str, tmpl, _bp) {\n\t    // istanbul ignore next: _bp is for the compiler\n\t    if (!_bp) { _bp = _cache; }\n\t\n\t    var\n\t      parts = [],\n\t      match,\n\t      isexpr,\n\t      start,\n\t      pos,\n\t      re = _bp[6];\n\t\n\t    isexpr = start = re.lastIndex = 0;\n\t\n\t    while ((match = re.exec(str))) {\n\t\n\t      pos = match.index;\n\t\n\t      if (isexpr) {\n\t\n\t        if (match[2]) {\n\t          re.lastIndex = skipBraces(str, match[2], re.lastIndex);\n\t          continue\n\t        }\n\t        if (!match[3]) {\n\t          continue\n\t        }\n\t      }\n\t\n\t      if (!match[1]) {\n\t        unescapeStr(str.slice(start, pos));\n\t        start = re.lastIndex;\n\t        re = _bp[6 + (isexpr ^= 1)];\n\t        re.lastIndex = start;\n\t      }\n\t    }\n\t\n\t    if (str && start < str.length) {\n\t      unescapeStr(str.slice(start));\n\t    }\n\t\n\t    return parts\n\t\n\t    function unescapeStr (s) {\n\t      if (tmpl || isexpr) {\n\t        parts.push(s && s.replace(_bp[5], '$1'));\n\t      } else {\n\t        parts.push(s);\n\t      }\n\t    }\n\t\n\t    function skipBraces (s, ch, ix) {\n\t      var\n\t        match,\n\t        recch = FINDBRACES[ch];\n\t\n\t      recch.lastIndex = ix;\n\t      ix = 1;\n\t      while ((match = recch.exec(s))) {\n\t        if (match[1] &&\n\t          !(match[1] === ch ? ++ix : --ix)) { break }\n\t      }\n\t      return ix ? s.length : recch.lastIndex\n\t    }\n\t  };\n\t\n\t  _brackets.hasExpr = function hasExpr (str) {\n\t    return _cache[4].test(str)\n\t  };\n\t\n\t  _brackets.loopKeys = function loopKeys (expr) {\n\t    var m = expr.match(_cache[9]);\n\t\n\t    return m\n\t      ? { key: m[1], pos: m[2], val: _cache[0] + m[3].trim() + _cache[1] }\n\t      : { val: expr.trim() }\n\t  };\n\t\n\t  _brackets.array = function array (pair) {\n\t    return pair ? _create(pair) : _cache\n\t  };\n\t\n\t  function _reset (pair) {\n\t    if ((pair || (pair = DEFAULT)) !== _cache[8]) {\n\t      _cache = _create(pair);\n\t      _regex = pair === DEFAULT ? _loopback : _rewrite;\n\t      _cache[9] = _regex(_pairs[9]);\n\t    }\n\t    cachedBrackets = pair;\n\t  }\n\t\n\t  function _setSettings (o) {\n\t    var b;\n\t\n\t    o = o || {};\n\t    b = o.brackets;\n\t    Object.defineProperty(o, 'brackets', {\n\t      set: _reset,\n\t      get: function () { return cachedBrackets },\n\t      enumerable: true\n\t    });\n\t    _settings = o;\n\t    _reset(b);\n\t  }\n\t\n\t  Object.defineProperty(_brackets, 'settings', {\n\t    set: _setSettings,\n\t    get: function () { return _settings }\n\t  });\n\t\n\t  /* istanbul ignore next: in the browser riot is always in the scope */\n\t  _brackets.settings = typeof riot !== 'undefined' && riot.settings || {};\n\t  _brackets.set = _reset;\n\t\n\t  _brackets.R_STRINGS = R_STRINGS;\n\t  _brackets.R_MLCOMMS = R_MLCOMMS;\n\t  _brackets.S_QBLOCKS = S_QBLOCKS;\n\t\n\t  return _brackets\n\t\n\t})();\n\t\n\t/**\n\t * @module tmpl\n\t *\n\t * tmpl          - Root function, returns the template value, render with data\n\t * tmpl.hasExpr  - Test the existence of a expression inside a string\n\t * tmpl.loopKeys - Get the keys for an 'each' loop (used by `_each`)\n\t */\n\t\n\t/* istanbul ignore next */\n\tvar tmpl = (function () {\n\t\n\t  var _cache = {};\n\t\n\t  function _tmpl (str, data) {\n\t    if (!str) { return str }\n\t\n\t    return (_cache[str] || (_cache[str] = _create(str))).call(data, _logErr)\n\t  }\n\t\n\t  _tmpl.hasExpr = brackets.hasExpr;\n\t\n\t  _tmpl.loopKeys = brackets.loopKeys;\n\t\n\t  // istanbul ignore next\n\t  _tmpl.clearCache = function () { _cache = {}; };\n\t\n\t  _tmpl.errorHandler = null;\n\t\n\t  function _logErr (err, ctx) {\n\t\n\t    err.riotData = {\n\t      tagName: ctx && ctx.__ && ctx.__.tagName,\n\t      _riot_id: ctx && ctx._riot_id  //eslint-disable-line camelcase\n\t    };\n\t\n\t    if (_tmpl.errorHandler) { _tmpl.errorHandler(err); }\n\t    else if (\n\t      typeof console !== 'undefined' &&\n\t      typeof console.error === 'function'\n\t    ) {\n\t      if (err.riotData.tagName) {\n\t        console.error('Riot template error thrown in the <%s> tag', err.riotData.tagName);\n\t      }\n\t      console.error(err);\n\t    }\n\t  }\n\t\n\t  function _create (str) {\n\t    var expr = _getTmpl(str);\n\t\n\t    if (expr.slice(0, 11) !== 'try{return ') { expr = 'return ' + expr; }\n\t\n\t    return new Function('E', expr + ';')    // eslint-disable-line no-new-func\n\t  }\n\t\n\t  var\n\t    CH_IDEXPR = String.fromCharCode(0x2057),\n\t    RE_CSNAME = /^(?:(-?[_A-Za-z\\xA0-\\xFF][-\\w\\xA0-\\xFF]*)|\\u2057(\\d+)~):/,\n\t    RE_QBLOCK = RegExp(brackets.S_QBLOCKS, 'g'),\n\t    RE_DQUOTE = /\\u2057/g,\n\t    RE_QBMARK = /\\u2057(\\d+)~/g;\n\t\n\t  function _getTmpl (str) {\n\t    var\n\t      qstr = [],\n\t      expr,\n\t      parts = brackets.split(str.replace(RE_DQUOTE, '\"'), 1);\n\t\n\t    if (parts.length > 2 || parts[0]) {\n\t      var i, j, list = [];\n\t\n\t      for (i = j = 0; i < parts.length; ++i) {\n\t\n\t        expr = parts[i];\n\t\n\t        if (expr && (expr = i & 1\n\t\n\t            ? _parseExpr(expr, 1, qstr)\n\t\n\t            : '\"' + expr\n\t                .replace(/\\\\/g, '\\\\\\\\')\n\t                .replace(/\\r\\n?|\\n/g, '\\\\n')\n\t                .replace(/\"/g, '\\\\\"') +\n\t              '\"'\n\t\n\t          )) { list[j++] = expr; }\n\t\n\t      }\n\t\n\t      expr = j < 2 ? list[0]\n\t           : '[' + list.join(',') + '].join(\"\")';\n\t\n\t    } else {\n\t\n\t      expr = _parseExpr(parts[1], 0, qstr);\n\t    }\n\t\n\t    if (qstr[0]) {\n\t      expr = expr.replace(RE_QBMARK, function (_, pos) {\n\t        return qstr[pos]\n\t          .replace(/\\r/g, '\\\\r')\n\t          .replace(/\\n/g, '\\\\n')\n\t      });\n\t    }\n\t    return expr\n\t  }\n\t\n\t  var\n\t    RE_BREND = {\n\t      '(': /[()]/g,\n\t      '[': /[[\\]]/g,\n\t      '{': /[{}]/g\n\t    };\n\t\n\t  function _parseExpr (expr, asText, qstr) {\n\t\n\t    expr = expr\n\t          .replace(RE_QBLOCK, function (s, div) {\n\t            return s.length > 2 && !div ? CH_IDEXPR + (qstr.push(s) - 1) + '~' : s\n\t          })\n\t          .replace(/\\s+/g, ' ').trim()\n\t          .replace(/\\ ?([[\\({},?\\.:])\\ ?/g, '$1');\n\t\n\t    if (expr) {\n\t      var\n\t        list = [],\n\t        cnt = 0,\n\t        match;\n\t\n\t      while (expr &&\n\t            (match = expr.match(RE_CSNAME)) &&\n\t            !match.index\n\t        ) {\n\t        var\n\t          key,\n\t          jsb,\n\t          re = /,|([[{(])|$/g;\n\t\n\t        expr = RegExp.rightContext;\n\t        key  = match[2] ? qstr[match[2]].slice(1, -1).trim().replace(/\\s+/g, ' ') : match[1];\n\t\n\t        while (jsb = (match = re.exec(expr))[1]) { skipBraces(jsb, re); }\n\t\n\t        jsb  = expr.slice(0, match.index);\n\t        expr = RegExp.rightContext;\n\t\n\t        list[cnt++] = _wrapExpr(jsb, 1, key);\n\t      }\n\t\n\t      expr = !cnt ? _wrapExpr(expr, asText)\n\t           : cnt > 1 ? '[' + list.join(',') + '].join(\" \").trim()' : list[0];\n\t    }\n\t    return expr\n\t\n\t    function skipBraces (ch, re) {\n\t      var\n\t        mm,\n\t        lv = 1,\n\t        ir = RE_BREND[ch];\n\t\n\t      ir.lastIndex = re.lastIndex;\n\t      while (mm = ir.exec(expr)) {\n\t        if (mm[0] === ch) { ++lv; }\n\t        else if (!--lv) { break }\n\t      }\n\t      re.lastIndex = lv ? expr.length : ir.lastIndex;\n\t    }\n\t  }\n\t\n\t  // istanbul ignore next: not both\n\t  var // eslint-disable-next-line max-len\n\t    JS_CONTEXT = '\"in this?this:' + (typeof window !== 'object' ? 'global' : 'window') + ').',\n\t    JS_VARNAME = /[,{][\\$\\w]+(?=:)|(^ *|[^$\\w\\.{])(?!(?:typeof|true|false|null|undefined|in|instanceof|is(?:Finite|NaN)|void|NaN|new|Date|RegExp|Math)(?![$\\w]))([$_A-Za-z][$\\w]*)/g,\n\t    JS_NOPROPS = /^(?=(\\.[$\\w]+))\\1(?:[^.[(]|$)/;\n\t\n\t  function _wrapExpr (expr, asText, key) {\n\t    var tb;\n\t\n\t    expr = expr.replace(JS_VARNAME, function (match, p, mvar, pos, s) {\n\t      if (mvar) {\n\t        pos = tb ? 0 : pos + match.length;\n\t\n\t        if (mvar !== 'this' && mvar !== 'global' && mvar !== 'window') {\n\t          match = p + '(\"' + mvar + JS_CONTEXT + mvar;\n\t          if (pos) { tb = (s = s[pos]) === '.' || s === '(' || s === '['; }\n\t        } else if (pos) {\n\t          tb = !JS_NOPROPS.test(s.slice(pos));\n\t        }\n\t      }\n\t      return match\n\t    });\n\t\n\t    if (tb) {\n\t      expr = 'try{return ' + expr + '}catch(e){E(e,this)}';\n\t    }\n\t\n\t    if (key) {\n\t\n\t      expr = (tb\n\t          ? 'function(){' + expr + '}.call(this)' : '(' + expr + ')'\n\t        ) + '?\"' + key + '\":\"\"';\n\t\n\t    } else if (asText) {\n\t\n\t      expr = 'function(v){' + (tb\n\t          ? expr.replace('return ', 'v=') : 'v=(' + expr + ')'\n\t        ) + ';return v||v===0?v:\"\"}.call(this)';\n\t    }\n\t\n\t    return expr\n\t  }\n\t\n\t  _tmpl.version = brackets.version = 'v3.0.3';\n\t\n\t  return _tmpl\n\t\n\t})();\n\t\n\t/* istanbul ignore next */\n\tvar observable$1 = function(el) {\n\t\n\t  /**\n\t   * Extend the original object or create a new empty one\n\t   * @type { Object }\n\t   */\n\t\n\t  el = el || {};\n\t\n\t  /**\n\t   * Private variables\n\t   */\n\t  var callbacks = {},\n\t    slice = Array.prototype.slice;\n\t\n\t  /**\n\t   * Public Api\n\t   */\n\t\n\t  // extend the el object adding the observable methods\n\t  Object.defineProperties(el, {\n\t    /**\n\t     * Listen to the given `event` ands\n\t     * execute the `callback` each time an event is triggered.\n\t     * @param  { String } event - event id\n\t     * @param  { Function } fn - callback function\n\t     * @returns { Object } el\n\t     */\n\t    on: {\n\t      value: function(event, fn) {\n\t        if (typeof fn == 'function')\n\t          { (callbacks[event] = callbacks[event] || []).push(fn); }\n\t        return el\n\t      },\n\t      enumerable: false,\n\t      writable: false,\n\t      configurable: false\n\t    },\n\t\n\t    /**\n\t     * Removes the given `event` listeners\n\t     * @param   { String } event - event id\n\t     * @param   { Function } fn - callback function\n\t     * @returns { Object } el\n\t     */\n\t    off: {\n\t      value: function(event, fn) {\n\t        if (event == '*' && !fn) { callbacks = {}; }\n\t        else {\n\t          if (fn) {\n\t            var arr = callbacks[event];\n\t            for (var i = 0, cb; cb = arr && arr[i]; ++i) {\n\t              if (cb == fn) { arr.splice(i--, 1); }\n\t            }\n\t          } else { delete callbacks[event]; }\n\t        }\n\t        return el\n\t      },\n\t      enumerable: false,\n\t      writable: false,\n\t      configurable: false\n\t    },\n\t\n\t    /**\n\t     * Listen to the given `event` and\n\t     * execute the `callback` at most once\n\t     * @param   { String } event - event id\n\t     * @param   { Function } fn - callback function\n\t     * @returns { Object } el\n\t     */\n\t    one: {\n\t      value: function(event, fn) {\n\t        function on() {\n\t          el.off(event, on);\n\t          fn.apply(el, arguments);\n\t        }\n\t        return el.on(event, on)\n\t      },\n\t      enumerable: false,\n\t      writable: false,\n\t      configurable: false\n\t    },\n\t\n\t    /**\n\t     * Execute all callback functions that listen to\n\t     * the given `event`\n\t     * @param   { String } event - event id\n\t     * @returns { Object } el\n\t     */\n\t    trigger: {\n\t      value: function(event) {\n\t        var arguments$1 = arguments;\n\t\n\t\n\t        // getting the arguments\n\t        var arglen = arguments.length - 1,\n\t          args = new Array(arglen),\n\t          fns,\n\t          fn,\n\t          i;\n\t\n\t        for (i = 0; i < arglen; i++) {\n\t          args[i] = arguments$1[i + 1]; // skip first argument\n\t        }\n\t\n\t        fns = slice.call(callbacks[event] || [], 0);\n\t\n\t        for (i = 0; fn = fns[i]; ++i) {\n\t          fn.apply(el, args);\n\t        }\n\t\n\t        if (callbacks['*'] && event != '*')\n\t          { el.trigger.apply(el, ['*', event].concat(args)); }\n\t\n\t        return el\n\t      },\n\t      enumerable: false,\n\t      writable: false,\n\t      configurable: false\n\t    }\n\t  });\n\t\n\t  return el\n\t\n\t};\n\t\n\t/**\n\t * Specialized function for looping an array-like collection with `each={}`\n\t * @param   { Array } list - collection of items\n\t * @param   {Function} fn - callback function\n\t * @returns { Array } the array looped\n\t */\n\tfunction each(list, fn) {\n\t  var len = list ? list.length : 0;\n\t  var i = 0;\n\t  for (; i < len; ++i) {\n\t    fn(list[i], i);\n\t  }\n\t  return list\n\t}\n\t\n\t/**\n\t * Check whether an array contains an item\n\t * @param   { Array } array - target array\n\t * @param   { * } item - item to test\n\t * @returns { Boolean } -\n\t */\n\tfunction contains(array, item) {\n\t  return array.indexOf(item) !== -1\n\t}\n\t\n\t/**\n\t * Convert a string containing dashes to camel case\n\t * @param   { String } str - input string\n\t * @returns { String } my-string -> myString\n\t */\n\tfunction toCamel(str) {\n\t  return str.replace(/-(\\w)/g, function (_, c) { return c.toUpperCase(); })\n\t}\n\t\n\t/**\n\t * Faster String startsWith alternative\n\t * @param   { String } str - source string\n\t * @param   { String } value - test string\n\t * @returns { Boolean } -\n\t */\n\tfunction startsWith(str, value) {\n\t  return str.slice(0, value.length) === value\n\t}\n\t\n\t/**\n\t * Helper function to set an immutable property\n\t * @param   { Object } el - object where the new property will be set\n\t * @param   { String } key - object key where the new property will be stored\n\t * @param   { * } value - value of the new property\n\t * @param   { Object } options - set the propery overriding the default options\n\t * @returns { Object } - the initial object\n\t */\n\tfunction defineProperty(el, key, value, options) {\n\t  Object.defineProperty(el, key, extend({\n\t    value: value,\n\t    enumerable: false,\n\t    writable: false,\n\t    configurable: true\n\t  }, options));\n\t  return el\n\t}\n\t\n\t/**\n\t * Extend any object with other properties\n\t * @param   { Object } src - source object\n\t * @returns { Object } the resulting extended object\n\t *\n\t * var obj = { foo: 'baz' }\n\t * extend(obj, {bar: 'bar', foo: 'bar'})\n\t * console.log(obj) => {bar: 'bar', foo: 'bar'}\n\t *\n\t */\n\tfunction extend(src) {\n\t  var obj, args = arguments;\n\t  for (var i = 1; i < args.length; ++i) {\n\t    if (obj = args[i]) {\n\t      for (var key in obj) {\n\t        // check if this property of the source object could be overridden\n\t        if (isWritable(src, key))\n\t          { src[key] = obj[key]; }\n\t      }\n\t    }\n\t  }\n\t  return src\n\t}\n\t\n\tvar misc = Object.freeze({\n\t\teach: each,\n\t\tcontains: contains,\n\t\ttoCamel: toCamel,\n\t\tstartsWith: startsWith,\n\t\tdefineProperty: defineProperty,\n\t\textend: extend\n\t});\n\t\n\tvar settings$1 = extend(Object.create(brackets.settings), {\n\t  skipAnonymousTags: true\n\t});\n\t\n\t/**\n\t * Trigger DOM events\n\t * @param   { HTMLElement } dom - dom element target of the event\n\t * @param   { Function } handler - user function\n\t * @param   { Object } e - event object\n\t */\n\tfunction handleEvent(dom, handler, e) {\n\t  var ptag = this.__.parent,\n\t    item = this.__.item;\n\t\n\t  if (!item)\n\t    { while (ptag && !item) {\n\t      item = ptag.__.item;\n\t      ptag = ptag.__.parent;\n\t    } }\n\t\n\t  // override the event properties\n\t  /* istanbul ignore next */\n\t  if (isWritable(e, 'currentTarget')) { e.currentTarget = dom; }\n\t  /* istanbul ignore next */\n\t  if (isWritable(e, 'target')) { e.target = e.srcElement; }\n\t  /* istanbul ignore next */\n\t  if (isWritable(e, 'which')) { e.which = e.charCode || e.keyCode; }\n\t\n\t  e.item = item;\n\t\n\t  handler.call(this, e);\n\t\n\t  if (!e.preventUpdate) {\n\t    var p = getImmediateCustomParentTag(this);\n\t    // fixes #2083\n\t    if (p.isMounted) { p.update(); }\n\t  }\n\t}\n\t\n\t/**\n\t * Attach an event to a DOM node\n\t * @param { String } name - event name\n\t * @param { Function } handler - event callback\n\t * @param { Object } dom - dom node\n\t * @param { Tag } tag - tag instance\n\t */\n\tfunction setEventHandler(name, handler, dom, tag) {\n\t  var eventName,\n\t    cb = handleEvent.bind(tag, dom, handler);\n\t\n\t  // avoid to bind twice the same event\n\t  // possible fix for #2332\n\t  dom[name] = null;\n\t\n\t  // normalize event name\n\t  eventName = name.replace(RE_EVENTS_PREFIX, '');\n\t\n\t  // cache the listener into the listeners array\n\t  if (!contains(tag.__.listeners, dom)) { tag.__.listeners.push(dom); }\n\t  if (!dom[RIOT_EVENTS_KEY]) { dom[RIOT_EVENTS_KEY] = {}; }\n\t  if (dom[RIOT_EVENTS_KEY][name]) { dom.removeEventListener(eventName, dom[RIOT_EVENTS_KEY][name]); }\n\t\n\t  dom[RIOT_EVENTS_KEY][name] = cb;\n\t  dom.addEventListener(eventName, cb, false);\n\t}\n\t\n\t/**\n\t * Update dynamically created data-is tags with changing expressions\n\t * @param { Object } expr - expression tag and expression info\n\t * @param { Tag }    parent - parent for tag creation\n\t * @param { String } tagName - tag implementation we want to use\n\t */\n\tfunction updateDataIs(expr, parent, tagName) {\n\t  var conf, isVirtual, head, ref;\n\t\n\t  if (expr.tag && expr.tagName === tagName) {\n\t    expr.tag.update();\n\t    return\n\t  }\n\t\n\t  isVirtual = expr.dom.tagName === 'VIRTUAL';\n\t  // sync _parent to accommodate changing tagnames\n\t  if (expr.tag) {\n\t    // need placeholder before unmount\n\t    if(isVirtual) {\n\t      head = expr.tag.__.head;\n\t      ref = createDOMPlaceholder();\n\t      head.parentNode.insertBefore(ref, head);\n\t    }\n\t\n\t    expr.tag.unmount(true);\n\t  }\n\t\n\t  if (!isString(tagName)) { return }\n\t\n\t  expr.impl = __TAG_IMPL[tagName];\n\t  conf = {root: expr.dom, parent: parent, hasImpl: true, tagName: tagName};\n\t  expr.tag = initChildTag(expr.impl, conf, expr.dom.innerHTML, parent);\n\t  each(expr.attrs, function (a) { return setAttr(expr.tag.root, a.name, a.value); });\n\t  expr.tagName = tagName;\n\t  expr.tag.mount();\n\t  if (isVirtual)\n\t    { makeReplaceVirtual(expr.tag, ref || expr.tag.root); } // root exist first time, after use placeholder\n\t\n\t  // parent is the placeholder tag, not the dynamic tag so clean up\n\t  parent.__.onUnmount = function() {\n\t    var delName = expr.tag.opts.dataIs,\n\t      tags = expr.tag.parent.tags,\n\t      _tags = expr.tag.__.parent.tags;\n\t    arrayishRemove(tags, delName, expr.tag);\n\t    arrayishRemove(_tags, delName, expr.tag);\n\t    expr.tag.unmount();\n\t  };\n\t}\n\t\n\t/**\n\t * Nomalize any attribute removing the \"riot-\" prefix\n\t * @param   { String } attrName - original attribute name\n\t * @returns { String } valid html attribute name\n\t */\n\tfunction normalizeAttrName(attrName) {\n\t  if (!attrName) { return null }\n\t  attrName = attrName.replace(ATTRS_PREFIX, '');\n\t  if (CASE_SENSITIVE_ATTRIBUTES[attrName]) { attrName = CASE_SENSITIVE_ATTRIBUTES[attrName]; }\n\t  return attrName\n\t}\n\t\n\t/**\n\t * Update on single tag expression\n\t * @this Tag\n\t * @param { Object } expr - expression logic\n\t * @returns { undefined }\n\t */\n\tfunction updateExpression(expr) {\n\t  if (this.root && getAttr(this.root,'virtualized')) { return }\n\t\n\t  var dom = expr.dom,\n\t    // remove the riot- prefix\n\t    attrName = normalizeAttrName(expr.attr),\n\t    isToggle = contains([SHOW_DIRECTIVE, HIDE_DIRECTIVE], attrName),\n\t    isVirtual = expr.root && expr.root.tagName === 'VIRTUAL',\n\t    parent = dom && (expr.parent || dom.parentNode),\n\t    // detect the style attributes\n\t    isStyleAttr = attrName === 'style',\n\t    isClassAttr = attrName === 'class',\n\t    hasValue,\n\t    isObj,\n\t    value;\n\t\n\t  // if it's a tag we could totally skip the rest\n\t  if (expr._riot_id) {\n\t    if (expr.isMounted) {\n\t      expr.update();\n\t    // if it hasn't been mounted yet, do that now.\n\t    } else {\n\t      expr.mount();\n\t      if (isVirtual) {\n\t        makeReplaceVirtual(expr, expr.root);\n\t      }\n\t    }\n\t    return\n\t  }\n\t  // if this expression has the update method it means it can handle the DOM changes by itself\n\t  if (expr.update) { return expr.update() }\n\t\n\t  // ...it seems to be a simple expression so we try to calculat its value\n\t  value = tmpl(expr.expr, isToggle ? extend(Object.create(this.parent), this) : this);\n\t  hasValue = !isBlank(value);\n\t  isObj = isObject(value);\n\t\n\t  // convert the style/class objects to strings\n\t  if (isObj) {\n\t    isObj = !isClassAttr && !isStyleAttr;\n\t    if (isClassAttr) {\n\t      value = tmpl(JSON.stringify(value), this);\n\t    } else if (isStyleAttr) {\n\t      value = styleObjectToString(value);\n\t    }\n\t  }\n\t\n\t  // remove original attribute\n\t  if (expr.attr && (!expr.isAttrRemoved || !hasValue)) {\n\t    remAttr(dom, expr.attr);\n\t    expr.isAttrRemoved = true;\n\t  }\n\t\n\t  // for the boolean attributes we don't need the value\n\t  // we can convert it to checked=true to checked=checked\n\t  if (expr.bool) { value = value ? attrName : false; }\n\t  if (expr.isRtag) { return updateDataIs(expr, this, value) }\n\t  if (expr.wasParsedOnce && expr.value === value) { return }\n\t\n\t  // update the expression value\n\t  expr.value = value;\n\t  expr.wasParsedOnce = true;\n\t\n\t  // if the value is an object we can not do much more with it\n\t  if (isObj && !isToggle) { return }\n\t  // avoid to render undefined/null values\n\t  if (isBlank(value)) { value = ''; }\n\t\n\t  // textarea and text nodes have no attribute name\n\t  if (!attrName) {\n\t    // about #815 w/o replace: the browser converts the value to a string,\n\t    // the comparison by \"==\" does too, but not in the server\n\t    value += '';\n\t    // test for parent avoids error with invalid assignment to nodeValue\n\t    if (parent) {\n\t      // cache the parent node because somehow it will become null on IE\n\t      // on the next iteration\n\t      expr.parent = parent;\n\t      if (parent.tagName === 'TEXTAREA') {\n\t        parent.value = value;                    // #1113\n\t        if (!IE_VERSION) { dom.nodeValue = value; }  // #1625 IE throws here, nodeValue\n\t      }                                         // will be available on 'updated'\n\t      else { dom.nodeValue = value; }\n\t    }\n\t    return\n\t  }\n\t\n\t\n\t  // event handler\n\t  if (isFunction(value)) {\n\t    setEventHandler(attrName, value, dom, this);\n\t  // show / hide\n\t  } else if (isToggle) {\n\t    toggleVisibility(dom, attrName === HIDE_DIRECTIVE ? !value : value);\n\t  // handle attributes\n\t  } else {\n\t    if (expr.bool) {\n\t      dom[attrName] = value;\n\t    }\n\t\n\t    if (attrName === 'value' && dom.value !== value) {\n\t      dom.value = value;\n\t    }\n\t\n\t    if (hasValue && value !== false) {\n\t      setAttr(dom, attrName, value);\n\t    }\n\t\n\t    // make sure that in case of style changes\n\t    // the element stays hidden\n\t    if (isStyleAttr && dom.hidden) { toggleVisibility(dom, false); }\n\t  }\n\t}\n\t\n\t/**\n\t * Update all the expressions in a Tag instance\n\t * @this Tag\n\t * @param { Array } expressions - expression that must be re evaluated\n\t */\n\tfunction updateAllExpressions(expressions) {\n\t  each(expressions, updateExpression.bind(this));\n\t}\n\t\n\tvar IfExpr = {\n\t  init: function init(dom, tag, expr) {\n\t    remAttr(dom, CONDITIONAL_DIRECTIVE);\n\t    this.tag = tag;\n\t    this.expr = expr;\n\t    this.stub = document.createTextNode('');\n\t    this.pristine = dom;\n\t\n\t    var p = dom.parentNode;\n\t    p.insertBefore(this.stub, dom);\n\t    p.removeChild(dom);\n\t\n\t    return this\n\t  },\n\t  update: function update() {\n\t    this.value = tmpl(this.expr, this.tag);\n\t\n\t    if (this.value && !this.current) { // insert\n\t      this.current = this.pristine.cloneNode(true);\n\t      this.stub.parentNode.insertBefore(this.current, this.stub);\n\t      this.expressions = [];\n\t      parseExpressions.apply(this.tag, [this.current, this.expressions, true]);\n\t    } else if (!this.value && this.current) { // remove\n\t      unmountAll(this.expressions);\n\t      if (this.current._tag) {\n\t        this.current._tag.unmount();\n\t      } else if (this.current.parentNode) {\n\t        this.current.parentNode.removeChild(this.current);\n\t      }\n\t      this.current = null;\n\t      this.expressions = [];\n\t    }\n\t\n\t    if (this.value) { updateAllExpressions.call(this.tag, this.expressions); }\n\t  },\n\t  unmount: function unmount() {\n\t    unmountAll(this.expressions || []);\n\t    delete this.pristine;\n\t    delete this.parentNode;\n\t    delete this.stub;\n\t  }\n\t};\n\t\n\tvar RefExpr = {\n\t  init: function init(dom, parent, attrName, attrValue) {\n\t    this.dom = dom;\n\t    this.attr = attrName;\n\t    this.rawValue = attrValue;\n\t    this.parent = parent;\n\t    this.hasExp = tmpl.hasExpr(attrValue);\n\t    return this\n\t  },\n\t  update: function update() {\n\t    var old = this.value;\n\t    var customParent = this.parent && getImmediateCustomParentTag(this.parent);\n\t    // if the referenced element is a custom tag, then we set the tag itself, rather than DOM\n\t    var tagOrDom = this.tag || this.dom;\n\t\n\t    this.value = this.hasExp ? tmpl(this.rawValue, this.parent) : this.rawValue;\n\t\n\t    // the name changed, so we need to remove it from the old key (if present)\n\t    if (!isBlank(old) && customParent) { arrayishRemove(customParent.refs, old, tagOrDom); }\n\t    if (!isBlank(this.value)) {\n\t      // add it to the refs of parent tag (this behavior was changed >=3.0)\n\t      if (customParent) { arrayishAdd(\n\t        customParent.refs,\n\t        this.value,\n\t        tagOrDom,\n\t        // use an array if it's a looped node and the ref is not an expression\n\t        null,\n\t        this.parent.__.index\n\t      ); }\n\t    }\n\t\n\t    // if it's the first time we pass here let's remove the ref attribute\n\t    // #2329\n\t    if (!old) { remAttr(this.dom, this.attr); }\n\t  },\n\t  unmount: function unmount() {\n\t    var tagOrDom = this.tag || this.dom;\n\t    var customParent = this.parent && getImmediateCustomParentTag(this.parent);\n\t    if (!isBlank(this.value) && customParent)\n\t      { arrayishRemove(customParent.refs, this.value, tagOrDom); }\n\t    delete this.dom;\n\t    delete this.parent;\n\t  }\n\t};\n\t\n\t/**\n\t * Convert the item looped into an object used to extend the child tag properties\n\t * @param   { Object } expr - object containing the keys used to extend the children tags\n\t * @param   { * } key - value to assign to the new object returned\n\t * @param   { * } val - value containing the position of the item in the array\n\t * @param   { Object } base - prototype object for the new item\n\t * @returns { Object } - new object containing the values of the original item\n\t *\n\t * The variables 'key' and 'val' are arbitrary.\n\t * They depend on the collection type looped (Array, Object)\n\t * and on the expression used on the each tag\n\t *\n\t */\n\tfunction mkitem(expr, key, val, base) {\n\t  var item = base ? Object.create(base) : {};\n\t  item[expr.key] = key;\n\t  if (expr.pos) { item[expr.pos] = val; }\n\t  return item\n\t}\n\t\n\t/**\n\t * Unmount the redundant tags\n\t * @param   { Array } items - array containing the current items to loop\n\t * @param   { Array } tags - array containing all the children tags\n\t */\n\tfunction unmountRedundant(items, tags) {\n\t  var i = tags.length,\n\t    j = items.length;\n\t\n\t  while (i > j) {\n\t    i--;\n\t    remove.apply(tags[i], [tags, i]);\n\t  }\n\t}\n\t\n\t\n\t/**\n\t * Remove a child tag\n\t * @this Tag\n\t * @param   { Array } tags - tags collection\n\t * @param   { Number } i - index of the tag to remove\n\t */\n\tfunction remove(tags, i) {\n\t  tags.splice(i, 1);\n\t  this.unmount();\n\t  arrayishRemove(this.parent, this, this.__.tagName, true);\n\t}\n\t\n\t/**\n\t * Move the nested custom tags in non custom loop tags\n\t * @this Tag\n\t * @param   { Number } i - current position of the loop tag\n\t */\n\tfunction moveNestedTags(i) {\n\t  var this$1 = this;\n\t\n\t  each(Object.keys(this.tags), function (tagName) {\n\t    moveChildTag.apply(this$1.tags[tagName], [tagName, i]);\n\t  });\n\t}\n\t\n\t/**\n\t * Move a child tag\n\t * @this Tag\n\t * @param   { HTMLElement } root - dom node containing all the loop children\n\t * @param   { Tag } nextTag - instance of the next tag preceding the one we want to move\n\t * @param   { Boolean } isVirtual - is it a virtual tag?\n\t */\n\tfunction move(root, nextTag, isVirtual) {\n\t  if (isVirtual)\n\t    { moveVirtual.apply(this, [root, nextTag]); }\n\t  else\n\t    { safeInsert(root, this.root, nextTag.root); }\n\t}\n\t\n\t/**\n\t * Insert and mount a child tag\n\t * @this Tag\n\t * @param   { HTMLElement } root - dom node containing all the loop children\n\t * @param   { Tag } nextTag - instance of the next tag preceding the one we want to insert\n\t * @param   { Boolean } isVirtual - is it a virtual tag?\n\t */\n\tfunction insert(root, nextTag, isVirtual) {\n\t  if (isVirtual)\n\t    { makeVirtual.apply(this, [root, nextTag]); }\n\t  else\n\t    { safeInsert(root, this.root, nextTag.root); }\n\t}\n\t\n\t/**\n\t * Append a new tag into the DOM\n\t * @this Tag\n\t * @param   { HTMLElement } root - dom node containing all the loop children\n\t * @param   { Boolean } isVirtual - is it a virtual tag?\n\t */\n\tfunction append(root, isVirtual) {\n\t  if (isVirtual)\n\t    { makeVirtual.call(this, root); }\n\t  else\n\t    { root.appendChild(this.root); }\n\t}\n\t\n\t/**\n\t * Manage tags having the 'each'\n\t * @param   { HTMLElement } dom - DOM node we need to loop\n\t * @param   { Tag } parent - parent tag instance where the dom node is contained\n\t * @param   { String } expr - string contained in the 'each' attribute\n\t * @returns { Object } expression object for this each loop\n\t */\n\tfunction _each(dom, parent, expr) {\n\t\n\t  // remove the each property from the original tag\n\t  remAttr(dom, LOOP_DIRECTIVE);\n\t\n\t  var mustReorder = typeof getAttr(dom, LOOP_NO_REORDER_DIRECTIVE) !== T_STRING || remAttr(dom, LOOP_NO_REORDER_DIRECTIVE),\n\t    tagName = getTagName(dom),\n\t    impl = __TAG_IMPL[tagName],\n\t    parentNode = dom.parentNode,\n\t    placeholder = createDOMPlaceholder(),\n\t    child = getTag(dom),\n\t    ifExpr = getAttr(dom, CONDITIONAL_DIRECTIVE),\n\t    tags = [],\n\t    oldItems = [],\n\t    hasKeys,\n\t    isLoop = true,\n\t    isAnonymous = !__TAG_IMPL[tagName],\n\t    isVirtual = dom.tagName === 'VIRTUAL';\n\t\n\t  // parse the each expression\n\t  expr = tmpl.loopKeys(expr);\n\t  expr.isLoop = true;\n\t\n\t  if (ifExpr) { remAttr(dom, CONDITIONAL_DIRECTIVE); }\n\t\n\t  // insert a marked where the loop tags will be injected\n\t  parentNode.insertBefore(placeholder, dom);\n\t  parentNode.removeChild(dom);\n\t\n\t  expr.update = function updateEach() {\n\t    // get the new items collection\n\t    expr.value = tmpl(expr.val, parent);\n\t\n\t    var frag = createFrag(),\n\t      items = expr.value,\n\t      isObject$$1 = !isArray(items) && !isString(items),\n\t      root = placeholder.parentNode;\n\t\n\t    // if this DOM was removed the update here is useless\n\t    // this condition fixes also a weird async issue on IE in our unit test\n\t    if (!root) { return }\n\t\n\t    // object loop. any changes cause full redraw\n\t    if (isObject$$1) {\n\t      hasKeys = items || false;\n\t      items = hasKeys ?\n\t        Object.keys(items).map(function (key) {\n\t          return mkitem(expr, items[key], key)\n\t        }) : [];\n\t    } else {\n\t      hasKeys = false;\n\t    }\n\t\n\t    if (ifExpr) {\n\t      items = items.filter(function(item, i) {\n\t        if (expr.key && !isObject$$1)\n\t          { return !!tmpl(ifExpr, mkitem(expr, item, i, parent)) }\n\t\n\t        return !!tmpl(ifExpr, extend(Object.create(parent), item))\n\t      });\n\t    }\n\t\n\t    // loop all the new items\n\t    each(items, function(item, i) {\n\t      // reorder only if the items are objects\n\t      var\n\t        doReorder = mustReorder && typeof item === T_OBJECT && !hasKeys,\n\t        oldPos = oldItems.indexOf(item),\n\t        isNew = oldPos === -1,\n\t        pos = !isNew && doReorder ? oldPos : i,\n\t        // does a tag exist in this position?\n\t        tag = tags[pos],\n\t        mustAppend = i >= oldItems.length,\n\t        mustCreate =  doReorder && isNew || !doReorder && !tag;\n\t\n\t      item = !hasKeys && expr.key ? mkitem(expr, item, i) : item;\n\t\n\t      // new tag\n\t      if (mustCreate) {\n\t        tag = new Tag$1(impl, {\n\t          parent: parent,\n\t          isLoop: isLoop,\n\t          isAnonymous: isAnonymous,\n\t          tagName: tagName,\n\t          root: dom.cloneNode(isAnonymous),\n\t          item: item,\n\t          index: i,\n\t        }, dom.innerHTML);\n\t\n\t        // mount the tag\n\t        tag.mount();\n\t\n\t        if (mustAppend)\n\t          { append.apply(tag, [frag || root, isVirtual]); }\n\t        else\n\t          { insert.apply(tag, [root, tags[i], isVirtual]); }\n\t\n\t        if (!mustAppend) { oldItems.splice(i, 0, item); }\n\t        tags.splice(i, 0, tag);\n\t        if (child) { arrayishAdd(parent.tags, tagName, tag, true); }\n\t      } else if (pos !== i && doReorder) {\n\t        // move\n\t        if (contains(items, oldItems[pos])) {\n\t          move.apply(tag, [root, tags[i], isVirtual]);\n\t          // move the old tag instance\n\t          tags.splice(i, 0, tags.splice(pos, 1)[0]);\n\t          // move the old item\n\t          oldItems.splice(i, 0, oldItems.splice(pos, 1)[0]);\n\t        }\n\t\n\t        // update the position attribute if it exists\n\t        if (expr.pos) { tag[expr.pos] = i; }\n\t\n\t        // if the loop tags are not custom\n\t        // we need to move all their custom tags into the right position\n\t        if (!child && tag.tags) { moveNestedTags.call(tag, i); }\n\t      }\n\t\n\t      // cache the original item to use it in the events bound to this node\n\t      // and its children\n\t      tag.__.item = item;\n\t      tag.__.index = i;\n\t      tag.__.parent = parent;\n\t\n\t      if (!mustCreate) { tag.update(item); }\n\t    });\n\t\n\t    // remove the redundant tags\n\t    unmountRedundant(items, tags);\n\t\n\t    // clone the items array\n\t    oldItems = items.slice();\n\t\n\t    // this condition is weird u\n\t    root.insertBefore(frag, placeholder);\n\t  };\n\t\n\t  expr.unmount = function() {\n\t    each(tags, function(t) { t.unmount(); });\n\t  };\n\t\n\t  return expr\n\t}\n\t\n\t/**\n\t * Walk the tag DOM to detect the expressions to evaluate\n\t * @this Tag\n\t * @param   { HTMLElement } root - root tag where we will start digging the expressions\n\t * @param   { Array } expressions - empty array where the expressions will be added\n\t * @param   { Boolean } mustIncludeRoot - flag to decide whether the root must be parsed as well\n\t * @returns { Object } an object containing the root noode and the dom tree\n\t */\n\tfunction parseExpressions(root, expressions, mustIncludeRoot) {\n\t  var this$1 = this;\n\t\n\t  var tree = {parent: {children: expressions}};\n\t\n\t  walkNodes(root, function (dom, ctx) {\n\t    var type = dom.nodeType, parent = ctx.parent, attr, expr, tagImpl;\n\t    if (!mustIncludeRoot && dom === root) { return {parent: parent} }\n\t\n\t    // text node\n\t    if (type === 3 && dom.parentNode.tagName !== 'STYLE' && tmpl.hasExpr(dom.nodeValue))\n\t      { parent.children.push({dom: dom, expr: dom.nodeValue}); }\n\t\n\t    if (type !== 1) { return ctx } // not an element\n\t\n\t    var isVirtual = dom.tagName === 'VIRTUAL';\n\t\n\t    // loop. each does it's own thing (for now)\n\t    if (attr = getAttr(dom, LOOP_DIRECTIVE)) {\n\t      if(isVirtual) { setAttr(dom, 'loopVirtual', true); } // ignore here, handled in _each\n\t      parent.children.push(_each(dom, this$1, attr));\n\t      return false\n\t    }\n\t\n\t    // if-attrs become the new parent. Any following expressions (either on the current\n\t    // element, or below it) become children of this expression.\n\t    if (attr = getAttr(dom, CONDITIONAL_DIRECTIVE)) {\n\t      parent.children.push(Object.create(IfExpr).init(dom, this$1, attr));\n\t      return false\n\t    }\n\t\n\t    if (expr = getAttr(dom, IS_DIRECTIVE)) {\n\t      if (tmpl.hasExpr(expr)) {\n\t        parent.children.push({isRtag: true, expr: expr, dom: dom, attrs: [].slice.call(dom.attributes)});\n\t        return false\n\t      }\n\t    }\n\t\n\t    // if this is a tag, stop traversing here.\n\t    // we ignore the root, since parseExpressions is called while we're mounting that root\n\t    tagImpl = getTag(dom);\n\t    if(isVirtual) {\n\t      if(getAttr(dom, 'virtualized')) {dom.parentElement.removeChild(dom); } // tag created, remove from dom\n\t      if(!tagImpl && !getAttr(dom, 'virtualized') && !getAttr(dom, 'loopVirtual'))  // ok to create virtual tag\n\t        { tagImpl = { tmpl: dom.outerHTML }; }\n\t    }\n\t\n\t    if (tagImpl && (dom !== root || mustIncludeRoot)) {\n\t      if(isVirtual && !getAttr(dom, IS_DIRECTIVE)) { // handled in update\n\t        // can not remove attribute like directives\n\t        // so flag for removal after creation to prevent maximum stack error\n\t        setAttr(dom, 'virtualized', true);\n\t\n\t        var tag = new Tag$1({ tmpl: dom.outerHTML },\n\t          {root: dom, parent: this$1},\n\t          dom.innerHTML);\n\t        parent.children.push(tag); // no return, anonymous tag, keep parsing\n\t      } else {\n\t        var conf = {root: dom, parent: this$1, hasImpl: true};\n\t        parent.children.push(initChildTag(tagImpl, conf, dom.innerHTML, this$1));\n\t        return false\n\t      }\n\t    }\n\t\n\t    // attribute expressions\n\t    parseAttributes.apply(this$1, [dom, dom.attributes, function(attr, expr) {\n\t      if (!expr) { return }\n\t      parent.children.push(expr);\n\t    }]);\n\t\n\t    // whatever the parent is, all child elements get the same parent.\n\t    // If this element had an if-attr, that's the parent for all child elements\n\t    return {parent: parent}\n\t  }, tree);\n\t}\n\t\n\t/**\n\t * Calls `fn` for every attribute on an element. If that attr has an expression,\n\t * it is also passed to fn.\n\t * @this Tag\n\t * @param   { HTMLElement } dom - dom node to parse\n\t * @param   { Array } attrs - array of attributes\n\t * @param   { Function } fn - callback to exec on any iteration\n\t */\n\tfunction parseAttributes(dom, attrs, fn) {\n\t  var this$1 = this;\n\t\n\t  each(attrs, function (attr) {\n\t    var name = attr.name, bool = isBoolAttr(name), expr;\n\t\n\t    if (contains(REF_DIRECTIVES, name)) {\n\t      expr =  Object.create(RefExpr).init(dom, this$1, name, attr.value);\n\t    } else if (tmpl.hasExpr(attr.value)) {\n\t      expr = {dom: dom, expr: attr.value, attr: name, bool: bool};\n\t    }\n\t\n\t    fn(attr, expr);\n\t  });\n\t}\n\t\n\t/*\n\t  Includes hacks needed for the Internet Explorer version 9 and below\n\t  See: http://kangax.github.io/compat-table/es5/#ie8\n\t       http://codeplanet.io/dropping-ie8/\n\t*/\n\t\n\tvar reHasYield  = /<yield\\b/i;\n\tvar reYieldAll  = /<yield\\s*(?:\\/>|>([\\S\\s]*?)<\\/yield\\s*>|>)/ig;\n\tvar reYieldSrc  = /<yield\\s+to=['\"]([^'\">]*)['\"]\\s*>([\\S\\s]*?)<\\/yield\\s*>/ig;\n\tvar reYieldDest = /<yield\\s+from=['\"]?([-\\w]+)['\"]?\\s*(?:\\/>|>([\\S\\s]*?)<\\/yield\\s*>)/ig;\n\tvar rootEls = { tr: 'tbody', th: 'tr', td: 'tr', col: 'colgroup' };\n\tvar tblTags = IE_VERSION && IE_VERSION < 10 ? RE_SPECIAL_TAGS : RE_SPECIAL_TAGS_NO_OPTION;\n\tvar GENERIC = 'div';\n\t\n\t\n\t/*\n\t  Creates the root element for table or select child elements:\n\t  tr/th/td/thead/tfoot/tbody/caption/col/colgroup/option/optgroup\n\t*/\n\tfunction specialTags(el, tmpl, tagName) {\n\t\n\t  var\n\t    select = tagName[0] === 'o',\n\t    parent = select ? 'select>' : 'table>';\n\t\n\t  // trim() is important here, this ensures we don't have artifacts,\n\t  // so we can check if we have only one element inside the parent\n\t  el.innerHTML = '<' + parent + tmpl.trim() + '</' + parent;\n\t  parent = el.firstChild;\n\t\n\t  // returns the immediate parent if tr/th/td/col is the only element, if not\n\t  // returns the whole tree, as this can include additional elements\n\t  /* istanbul ignore next */\n\t  if (select) {\n\t    parent.selectedIndex = -1;  // for IE9, compatible w/current riot behavior\n\t  } else {\n\t    // avoids insertion of cointainer inside container (ex: tbody inside tbody)\n\t    var tname = rootEls[tagName];\n\t    if (tname && parent.childElementCount === 1) { parent = $(tname, parent); }\n\t  }\n\t  return parent\n\t}\n\t\n\t/*\n\t  Replace the yield tag from any tag template with the innerHTML of the\n\t  original tag in the page\n\t*/\n\tfunction replaceYield(tmpl, html) {\n\t  // do nothing if no yield\n\t  if (!reHasYield.test(tmpl)) { return tmpl }\n\t\n\t  // be careful with #1343 - string on the source having `$1`\n\t  var src = {};\n\t\n\t  html = html && html.replace(reYieldSrc, function (_, ref, text) {\n\t    src[ref] = src[ref] || text;   // preserve first definition\n\t    return ''\n\t  }).trim();\n\t\n\t  return tmpl\n\t    .replace(reYieldDest, function (_, ref, def) {  // yield with from - to attrs\n\t      return src[ref] || def || ''\n\t    })\n\t    .replace(reYieldAll, function (_, def) {        // yield without any \"from\"\n\t      return html || def || ''\n\t    })\n\t}\n\t\n\t/**\n\t * Creates a DOM element to wrap the given content. Normally an `DIV`, but can be\n\t * also a `TABLE`, `SELECT`, `TBODY`, `TR`, or `COLGROUP` element.\n\t *\n\t * @param   { String } tmpl  - The template coming from the custom tag definition\n\t * @param   { String } html - HTML content that comes from the DOM element where you\n\t *           will mount the tag, mostly the original tag in the page\n\t * @returns { HTMLElement } DOM element with _tmpl_ merged through `YIELD` with the _html_.\n\t */\n\tfunction mkdom(tmpl, html) {\n\t  var match   = tmpl && tmpl.match(/^\\s*<([-\\w]+)/),\n\t    tagName = match && match[1].toLowerCase(),\n\t    el = mkEl(GENERIC);\n\t\n\t  // replace all the yield tags with the tag inner html\n\t  tmpl = replaceYield(tmpl, html);\n\t\n\t  /* istanbul ignore next */\n\t  if (tblTags.test(tagName))\n\t    { el = specialTags(el, tmpl, tagName); }\n\t  else\n\t    { setInnerHTML(el, tmpl); }\n\t\n\t  return el\n\t}\n\t\n\t/**\n\t * Another way to create a riot tag a bit more es6 friendly\n\t * @param { HTMLElement } el - tag DOM selector or DOM node/s\n\t * @param { Object } opts - tag logic\n\t * @returns { Tag } new riot tag instance\n\t */\n\tfunction Tag$2(el, opts) {\n\t  // get the tag properties from the class constructor\n\t  var ref = this;\n\t  var name = ref.name;\n\t  var tmpl = ref.tmpl;\n\t  var css = ref.css;\n\t  var attrs = ref.attrs;\n\t  var onCreate = ref.onCreate;\n\t  // register a new tag and cache the class prototype\n\t  if (!__TAG_IMPL[name]) {\n\t    tag$1(name, tmpl, css, attrs, onCreate);\n\t    // cache the class constructor\n\t    __TAG_IMPL[name].class = this.constructor;\n\t  }\n\t\n\t  // mount the tag using the class instance\n\t  mountTo(el, name, opts, this);\n\t  // inject the component css\n\t  if (css) { styleManager.inject(); }\n\t\n\t  return this\n\t}\n\t\n\t/**\n\t * Create a new riot tag implementation\n\t * @param   { String }   name - name/id of the new riot tag\n\t * @param   { String }   tmpl - tag template\n\t * @param   { String }   css - custom tag css\n\t * @param   { String }   attrs - root tag attributes\n\t * @param   { Function } fn - user function\n\t * @returns { String } name/id of the tag just created\n\t */\n\tfunction tag$1(name, tmpl, css, attrs, fn) {\n\t  if (isFunction(attrs)) {\n\t    fn = attrs;\n\t\n\t    if (/^[\\w\\-]+\\s?=/.test(css)) {\n\t      attrs = css;\n\t      css = '';\n\t    } else\n\t      { attrs = ''; }\n\t  }\n\t\n\t  if (css) {\n\t    if (isFunction(css))\n\t      { fn = css; }\n\t    else\n\t      { styleManager.add(css); }\n\t  }\n\t\n\t  name = name.toLowerCase();\n\t  __TAG_IMPL[name] = { name: name, tmpl: tmpl, attrs: attrs, fn: fn };\n\t\n\t  return name\n\t}\n\t\n\t/**\n\t * Create a new riot tag implementation (for use by the compiler)\n\t * @param   { String }   name - name/id of the new riot tag\n\t * @param   { String }   tmpl - tag template\n\t * @param   { String }   css - custom tag css\n\t * @param   { String }   attrs - root tag attributes\n\t * @param   { Function } fn - user function\n\t * @returns { String } name/id of the tag just created\n\t */\n\tfunction tag2$1(name, tmpl, css, attrs, fn) {\n\t  if (css) { styleManager.add(css, name); }\n\t\n\t  __TAG_IMPL[name] = { name: name, tmpl: tmpl, attrs: attrs, fn: fn };\n\t\n\t  return name\n\t}\n\t\n\t/**\n\t * Mount a tag using a specific tag implementation\n\t * @param   { * } selector - tag DOM selector or DOM node/s\n\t * @param   { String } tagName - tag implementation name\n\t * @param   { Object } opts - tag logic\n\t * @returns { Array } new tags instances\n\t */\n\tfunction mount$1(selector, tagName, opts) {\n\t  var tags = [];\n\t\n\t  function pushTagsTo(root) {\n\t    if (root.tagName) {\n\t      var riotTag = getAttr(root, IS_DIRECTIVE);\n\t\n\t      // have tagName? force riot-tag to be the same\n\t      if (tagName && riotTag !== tagName) {\n\t        riotTag = tagName;\n\t        setAttr(root, IS_DIRECTIVE, tagName);\n\t      }\n\t\n\t      var tag = mountTo(root, riotTag || root.tagName.toLowerCase(), opts);\n\t\n\t      if (tag)\n\t        { tags.push(tag); }\n\t    } else if (root.length)\n\t      { each(root, pushTagsTo); } // assume nodeList\n\t  }\n\t\n\t  // inject styles into DOM\n\t  styleManager.inject();\n\t\n\t  if (isObject(tagName)) {\n\t    opts = tagName;\n\t    tagName = 0;\n\t  }\n\t\n\t  var elem;\n\t  var allTags;\n\t\n\t  // crawl the DOM to find the tag\n\t  if (isString(selector)) {\n\t    selector = selector === '*' ?\n\t      // select all registered tags\n\t      // & tags found with the riot-tag attribute set\n\t      allTags = selectTags() :\n\t      // or just the ones named like the selector\n\t      selector + selectTags(selector.split(/, */));\n\t\n\t    // make sure to pass always a selector\n\t    // to the querySelectorAll function\n\t    elem = selector ? $$(selector) : [];\n\t  }\n\t  else\n\t    // probably you have passed already a tag or a NodeList\n\t    { elem = selector; }\n\t\n\t  // select all the registered and mount them inside their root elements\n\t  if (tagName === '*') {\n\t    // get all custom tags\n\t    tagName = allTags || selectTags();\n\t    // if the root els it's just a single tag\n\t    if (elem.tagName)\n\t      { elem = $$(tagName, elem); }\n\t    else {\n\t      // select all the children for all the different root elements\n\t      var nodeList = [];\n\t\n\t      each(elem, function (_el) { return nodeList.push($$(tagName, _el)); });\n\t\n\t      elem = nodeList;\n\t    }\n\t    // get rid of the tagName\n\t    tagName = 0;\n\t  }\n\t\n\t  pushTagsTo(elem);\n\t\n\t  return tags\n\t}\n\t\n\t// Create a mixin that could be globally shared across all the tags\n\tvar mixins = {};\n\tvar globals = mixins[GLOBAL_MIXIN] = {};\n\tvar mixins_id = 0;\n\t\n\t/**\n\t * Create/Return a mixin by its name\n\t * @param   { String }  name - mixin name (global mixin if object)\n\t * @param   { Object }  mix - mixin logic\n\t * @param   { Boolean } g - is global?\n\t * @returns { Object }  the mixin logic\n\t */\n\tfunction mixin$1(name, mix, g) {\n\t  // Unnamed global\n\t  if (isObject(name)) {\n\t    mixin$1((\"__unnamed_\" + (mixins_id++)), name, true);\n\t    return\n\t  }\n\t\n\t  var store = g ? globals : mixins;\n\t\n\t  // Getter\n\t  if (!mix) {\n\t    if (isUndefined(store[name]))\n\t      { throw new Error('Unregistered mixin: ' + name) }\n\t\n\t    return store[name]\n\t  }\n\t\n\t  // Setter\n\t  store[name] = isFunction(mix) ?\n\t    extend(mix.prototype, store[name] || {}) && mix :\n\t    extend(store[name] || {}, mix);\n\t}\n\t\n\t/**\n\t * Update all the tags instances created\n\t * @returns { Array } all the tags instances\n\t */\n\tfunction update$1() {\n\t  return each(__TAGS_CACHE, function (tag) { return tag.update(); })\n\t}\n\t\n\tfunction unregister$1(name) {\n\t  delete __TAG_IMPL[name];\n\t}\n\t\n\tvar version$1 = 'v3.4.4';\n\t\n\t\n\tvar core = Object.freeze({\n\t\tTag: Tag$2,\n\t\ttag: tag$1,\n\t\ttag2: tag2$1,\n\t\tmount: mount$1,\n\t\tmixin: mixin$1,\n\t\tupdate: update$1,\n\t\tunregister: unregister$1,\n\t\tversion: version$1\n\t});\n\t\n\t// counter to give a unique id to all the Tag instances\n\tvar __uid = 0;\n\t\n\t/**\n\t * We need to update opts for this tag. That requires updating the expressions\n\t * in any attributes on the tag, and then copying the result onto opts.\n\t * @this Tag\n\t * @param   {Boolean} isLoop - is it a loop tag?\n\t * @param   { Tag }  parent - parent tag node\n\t * @param   { Boolean }  isAnonymous - is it a tag without any impl? (a tag not registered)\n\t * @param   { Object }  opts - tag options\n\t * @param   { Array }  instAttrs - tag attributes array\n\t */\n\tfunction updateOpts(isLoop, parent, isAnonymous, opts, instAttrs) {\n\t  // isAnonymous `each` tags treat `dom` and `root` differently. In this case\n\t  // (and only this case) we don't need to do updateOpts, because the regular parse\n\t  // will update those attrs. Plus, isAnonymous tags don't need opts anyway\n\t  if (isLoop && isAnonymous) { return }\n\t\n\t  var ctx = !isAnonymous && isLoop ? this : parent || this;\n\t  each(instAttrs, function (attr) {\n\t    if (attr.expr) { updateAllExpressions.call(ctx, [attr.expr]); }\n\t    // normalize the attribute names\n\t    opts[toCamel(attr.name).replace(ATTRS_PREFIX, '')] = attr.expr ? attr.expr.value : attr.value;\n\t  });\n\t}\n\t\n\t\n\t/**\n\t * Tag class\n\t * @constructor\n\t * @param { Object } impl - it contains the tag template, and logic\n\t * @param { Object } conf - tag options\n\t * @param { String } innerHTML - html that eventually we need to inject in the tag\n\t */\n\tfunction Tag$1(impl, conf, innerHTML) {\n\t  if ( impl === void 0 ) impl = {};\n\t  if ( conf === void 0 ) conf = {};\n\t\n\t  var opts = extend({}, conf.opts),\n\t    parent = conf.parent,\n\t    isLoop = conf.isLoop,\n\t    isAnonymous = !!conf.isAnonymous,\n\t    skipAnonymous = settings$1.skipAnonymousTags && isAnonymous,\n\t    item = cleanUpData(conf.item),\n\t    index = conf.index, // available only for the looped nodes\n\t    instAttrs = [], // All attributes on the Tag when it's first parsed\n\t    implAttrs = [], // expressions on this type of Tag\n\t    expressions = [],\n\t    root = conf.root,\n\t    tagName = conf.tagName || getTagName(root),\n\t    isVirtual = tagName === 'virtual',\n\t    propsInSyncWithParent = [],\n\t    dom;\n\t\n\t  // make this tag observable\n\t  if (!skipAnonymous) { observable$1(this); }\n\t  // only call unmount if we have a valid __TAG_IMPL (has name property)\n\t  if (impl.name && root._tag) { root._tag.unmount(true); }\n\t\n\t  // not yet mounted\n\t  this.isMounted = false;\n\t\n\t  defineProperty(this, '__', {\n\t    isAnonymous: isAnonymous,\n\t    instAttrs: instAttrs,\n\t    innerHTML: innerHTML,\n\t    tagName: tagName,\n\t    index: index,\n\t    isLoop: isLoop,\n\t    // tags having event listeners\n\t    // it would be better to use weak maps here but we can not introduce breaking changes now\n\t    listeners: [],\n\t    // these vars will be needed only for the virtual tags\n\t    virts: [],\n\t    tail: null,\n\t    head: null,\n\t    parent: null,\n\t    item: null\n\t  });\n\t\n\t  // create a unique id to this tag\n\t  // it could be handy to use it also to improve the virtual dom rendering speed\n\t  defineProperty(this, '_riot_id', ++__uid); // base 1 allows test !t._riot_id\n\t  defineProperty(this, 'root', root);\n\t  extend(this, { opts: opts }, item);\n\t  // protect the \"tags\" and \"refs\" property from being overridden\n\t  defineProperty(this, 'parent', parent || null);\n\t  defineProperty(this, 'tags', {});\n\t  defineProperty(this, 'refs', {});\n\t\n\t  dom = isLoop && isAnonymous ? root : mkdom(impl.tmpl, innerHTML, isLoop);\n\t\n\t  /**\n\t   * Update the tag expressions and options\n\t   * @param   { * }  data - data we want to use to extend the tag properties\n\t   * @returns { Tag } the current tag instance\n\t   */\n\t  defineProperty(this, 'update', function tagUpdate(data) {\n\t    var nextOpts = {},\n\t      canTrigger = this.isMounted && !skipAnonymous;\n\t\n\t    // make sure the data passed will not override\n\t    // the component core methods\n\t    data = cleanUpData(data);\n\t    extend(this, data);\n\t    updateOpts.apply(this, [isLoop, parent, isAnonymous, nextOpts, instAttrs]);\n\t\n\t    if (canTrigger && this.isMounted && isFunction(this.shouldUpdate) && !this.shouldUpdate(data, nextOpts)) {\n\t      return this\n\t    }\n\t\n\t    // inherit properties from the parent, but only for isAnonymous tags\n\t    if (isLoop && isAnonymous) { inheritFrom.apply(this, [this.parent, propsInSyncWithParent]); }\n\t    extend(opts, nextOpts);\n\t    if (canTrigger) { this.trigger('update', data); }\n\t    updateAllExpressions.call(this, expressions);\n\t    if (canTrigger) { this.trigger('updated'); }\n\t\n\t    return this\n\t\n\t  }.bind(this));\n\t\n\t  /**\n\t   * Add a mixin to this tag\n\t   * @returns { Tag } the current tag instance\n\t   */\n\t  defineProperty(this, 'mixin', function tagMixin() {\n\t    var this$1 = this;\n\t\n\t    each(arguments, function (mix) {\n\t      var instance, obj;\n\t      var props = [];\n\t\n\t      // properties blacklisted and will not be bound to the tag instance\n\t      var propsBlacklist = ['init', '__proto__'];\n\t\n\t      mix = isString(mix) ? mixin$1(mix) : mix;\n\t\n\t      // check if the mixin is a function\n\t      if (isFunction(mix)) {\n\t        // create the new mixin instance\n\t        instance = new mix();\n\t      } else { instance = mix; }\n\t\n\t      var proto = Object.getPrototypeOf(instance);\n\t\n\t      // build multilevel prototype inheritance chain property list\n\t      do { props = props.concat(Object.getOwnPropertyNames(obj || instance)); }\n\t      while (obj = Object.getPrototypeOf(obj || instance))\n\t\n\t      // loop the keys in the function prototype or the all object keys\n\t      each(props, function (key) {\n\t        // bind methods to this\n\t        // allow mixins to override other properties/parent mixins\n\t        if (!contains(propsBlacklist, key)) {\n\t          // check for getters/setters\n\t          var descriptor = Object.getOwnPropertyDescriptor(instance, key) || Object.getOwnPropertyDescriptor(proto, key);\n\t          var hasGetterSetter = descriptor && (descriptor.get || descriptor.set);\n\t\n\t          // apply method only if it does not already exist on the instance\n\t          if (!this$1.hasOwnProperty(key) && hasGetterSetter) {\n\t            Object.defineProperty(this$1, key, descriptor);\n\t          } else {\n\t            this$1[key] = isFunction(instance[key]) ?\n\t              instance[key].bind(this$1) :\n\t              instance[key];\n\t          }\n\t        }\n\t      });\n\t\n\t      // init method will be called automatically\n\t      if (instance.init)\n\t        { instance.init.bind(this$1)(); }\n\t    });\n\t    return this\n\t  }.bind(this));\n\t\n\t  /**\n\t   * Mount the current tag instance\n\t   * @returns { Tag } the current tag instance\n\t   */\n\t  defineProperty(this, 'mount', function tagMount() {\n\t    var this$1 = this;\n\t\n\t    root._tag = this; // keep a reference to the tag just created\n\t\n\t    // Read all the attrs on this instance. This give us the info we need for updateOpts\n\t    parseAttributes.apply(parent, [root, root.attributes, function (attr, expr) {\n\t      if (!isAnonymous && RefExpr.isPrototypeOf(expr)) { expr.tag = this$1; }\n\t      attr.expr = expr;\n\t      instAttrs.push(attr);\n\t    }]);\n\t\n\t    // update the root adding custom attributes coming from the compiler\n\t    implAttrs = [];\n\t    walkAttrs(impl.attrs, function (k, v) { implAttrs.push({name: k, value: v}); });\n\t    parseAttributes.apply(this, [root, implAttrs, function (attr, expr) {\n\t      if (expr) { expressions.push(expr); }\n\t      else { setAttr(root, attr.name, attr.value); }\n\t    }]);\n\t\n\t    // initialiation\n\t    updateOpts.apply(this, [isLoop, parent, isAnonymous, opts, instAttrs]);\n\t\n\t    // add global mixins\n\t    var globalMixin = mixin$1(GLOBAL_MIXIN);\n\t\n\t    if (globalMixin && !skipAnonymous) {\n\t      for (var i in globalMixin) {\n\t        if (globalMixin.hasOwnProperty(i)) {\n\t          this$1.mixin(globalMixin[i]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (impl.fn) { impl.fn.call(this, opts); }\n\t\n\t    if (!skipAnonymous) { this.trigger('before-mount'); }\n\t\n\t    // parse layout after init. fn may calculate args for nested custom tags\n\t    parseExpressions.apply(this, [dom, expressions, isAnonymous]);\n\t\n\t    this.update(item);\n\t\n\t    if (!isAnonymous) {\n\t      while (dom.firstChild) { root.appendChild(dom.firstChild); }\n\t    }\n\t\n\t    defineProperty(this, 'root', root);\n\t    defineProperty(this, 'isMounted', true);\n\t\n\t    if (skipAnonymous) { return }\n\t\n\t    // if it's not a child tag we can trigger its mount event\n\t    if (!this.parent) {\n\t      this.trigger('mount');\n\t    }\n\t    // otherwise we need to wait that the parent \"mount\" or \"updated\" event gets triggered\n\t    else {\n\t      var p = getImmediateCustomParentTag(this.parent);\n\t      p.one(!p.isMounted ? 'mount' : 'updated', function () {\n\t        this$1.trigger('mount');\n\t      });\n\t    }\n\t\n\t    return this\n\t\n\t  }.bind(this));\n\t\n\t  /**\n\t   * Unmount the tag instance\n\t   * @param { Boolean } mustKeepRoot - if it's true the root node will not be removed\n\t   * @returns { Tag } the current tag instance\n\t   */\n\t  defineProperty(this, 'unmount', function tagUnmount(mustKeepRoot) {\n\t    var this$1 = this;\n\t\n\t    var el = this.root,\n\t      p = el.parentNode,\n\t      ptag,\n\t      tagIndex = __TAGS_CACHE.indexOf(this);\n\t\n\t    if (!skipAnonymous) { this.trigger('before-unmount'); }\n\t\n\t    // clear all attributes coming from the mounted tag\n\t    walkAttrs(impl.attrs, function (name) {\n\t      if (startsWith(name, ATTRS_PREFIX))\n\t        { name = name.slice(ATTRS_PREFIX.length); }\n\t      remAttr(root, name);\n\t    });\n\t\n\t    // remove all the event listeners\n\t    this.__.listeners.forEach(function (dom) {\n\t      Object.keys(dom[RIOT_EVENTS_KEY]).forEach(function (eventName) {\n\t        dom.removeEventListener(eventName, dom[RIOT_EVENTS_KEY][eventName]);\n\t      });\n\t    });\n\t\n\t    // remove this tag instance from the global virtualDom variable\n\t    if (tagIndex !== -1)\n\t      { __TAGS_CACHE.splice(tagIndex, 1); }\n\t\n\t    if (p || isVirtual) {\n\t      if (parent) {\n\t        ptag = getImmediateCustomParentTag(parent);\n\t\n\t        if (isVirtual) {\n\t          Object.keys(this.tags).forEach(function (tagName) {\n\t            arrayishRemove(ptag.tags, tagName, this$1.tags[tagName]);\n\t          });\n\t        } else {\n\t          arrayishRemove(ptag.tags, tagName, this);\n\t          if(parent !== ptag) // remove from _parent too\n\t            { arrayishRemove(parent.tags, tagName, this); }\n\t        }\n\t      } else {\n\t        // remove the tag contents\n\t        setInnerHTML(el, '');\n\t      }\n\t\n\t      if (p && !mustKeepRoot) { p.removeChild(el); }\n\t    }\n\t\n\t    if (this.__.virts) {\n\t      each(this.__.virts, function (v) {\n\t        if (v.parentNode) { v.parentNode.removeChild(v); }\n\t      });\n\t    }\n\t\n\t    // allow expressions to unmount themselves\n\t    unmountAll(expressions);\n\t    each(instAttrs, function (a) { return a.expr && a.expr.unmount && a.expr.unmount(); });\n\t\n\t    // custom internal unmount function to avoid relying on the observable\n\t    if (this.__.onUnmount) { this.__.onUnmount(); }\n\t\n\t    if (!skipAnonymous) {\n\t      this.trigger('unmount');\n\t      this.off('*');\n\t    }\n\t\n\t    defineProperty(this, 'isMounted', false);\n\t\n\t    delete this.root._tag;\n\t\n\t    return this\n\t\n\t  }.bind(this));\n\t}\n\t\n\t/**\n\t * Detect the tag implementation by a DOM node\n\t * @param   { Object } dom - DOM node we need to parse to get its tag implementation\n\t * @returns { Object } it returns an object containing the implementation of a custom tag (template and boot function)\n\t */\n\tfunction getTag(dom) {\n\t  return dom.tagName && __TAG_IMPL[getAttr(dom, IS_DIRECTIVE) ||\n\t    getAttr(dom, IS_DIRECTIVE) || dom.tagName.toLowerCase()]\n\t}\n\t\n\t/**\n\t * Inherit properties from a target tag instance\n\t * @this Tag\n\t * @param   { Tag } target - tag where we will inherit properties\n\t * @param   { Array } propsInSyncWithParent - array of properties to sync with the target\n\t */\n\tfunction inheritFrom(target, propsInSyncWithParent) {\n\t  var this$1 = this;\n\t\n\t  each(Object.keys(target), function (k) {\n\t    // some properties must be always in sync with the parent tag\n\t    var mustSync = !isReservedName(k) && contains(propsInSyncWithParent, k);\n\t\n\t    if (isUndefined(this$1[k]) || mustSync) {\n\t      // track the property to keep in sync\n\t      // so we can keep it updated\n\t      if (!mustSync) { propsInSyncWithParent.push(k); }\n\t      this$1[k] = target[k];\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * Move the position of a custom tag in its parent tag\n\t * @this Tag\n\t * @param   { String } tagName - key where the tag was stored\n\t * @param   { Number } newPos - index where the new tag will be stored\n\t */\n\tfunction moveChildTag(tagName, newPos) {\n\t  var parent = this.parent,\n\t    tags;\n\t  // no parent no move\n\t  if (!parent) { return }\n\t\n\t  tags = parent.tags[tagName];\n\t\n\t  if (isArray(tags))\n\t    { tags.splice(newPos, 0, tags.splice(tags.indexOf(this), 1)[0]); }\n\t  else { arrayishAdd(parent.tags, tagName, this); }\n\t}\n\t\n\t/**\n\t * Create a new child tag including it correctly into its parent\n\t * @param   { Object } child - child tag implementation\n\t * @param   { Object } opts - tag options containing the DOM node where the tag will be mounted\n\t * @param   { String } innerHTML - inner html of the child node\n\t * @param   { Object } parent - instance of the parent tag including the child custom tag\n\t * @returns { Object } instance of the new child tag just created\n\t */\n\tfunction initChildTag(child, opts, innerHTML, parent) {\n\t  var tag = new Tag$1(child, opts, innerHTML),\n\t    tagName = opts.tagName || getTagName(opts.root, true),\n\t    ptag = getImmediateCustomParentTag(parent);\n\t  // fix for the parent attribute in the looped elements\n\t  defineProperty(tag, 'parent', ptag);\n\t  // store the real parent tag\n\t  // in some cases this could be different from the custom parent tag\n\t  // for example in nested loops\n\t  tag.__.parent = parent;\n\t\n\t  // add this tag to the custom parent tag\n\t  arrayishAdd(ptag.tags, tagName, tag);\n\t\n\t  // and also to the real parent tag\n\t  if (ptag !== parent)\n\t    { arrayishAdd(parent.tags, tagName, tag); }\n\t\n\t  // empty the child node once we got its template\n\t  // to avoid that its children get compiled multiple times\n\t  opts.root.innerHTML = '';\n\t\n\t  return tag\n\t}\n\t\n\t/**\n\t * Loop backward all the parents tree to detect the first custom parent tag\n\t * @param   { Object } tag - a Tag instance\n\t * @returns { Object } the instance of the first custom parent tag found\n\t */\n\tfunction getImmediateCustomParentTag(tag) {\n\t  var ptag = tag;\n\t  while (ptag.__.isAnonymous) {\n\t    if (!ptag.parent) { break }\n\t    ptag = ptag.parent;\n\t  }\n\t  return ptag\n\t}\n\t\n\t/**\n\t * Trigger the unmount method on all the expressions\n\t * @param   { Array } expressions - DOM expressions\n\t */\n\tfunction unmountAll(expressions) {\n\t  each(expressions, function(expr) {\n\t    if (expr instanceof Tag$1) { expr.unmount(true); }\n\t    else if (expr.tagName) { expr.tag.unmount(true); }\n\t    else if (expr.unmount) { expr.unmount(); }\n\t  });\n\t}\n\t\n\t/**\n\t * Get the tag name of any DOM node\n\t * @param   { Object } dom - DOM node we want to parse\n\t * @param   { Boolean } skipDataIs - hack to ignore the data-is attribute when attaching to parent\n\t * @returns { String } name to identify this dom node in riot\n\t */\n\tfunction getTagName(dom, skipDataIs) {\n\t  var child = getTag(dom),\n\t    namedTag = !skipDataIs && getAttr(dom, IS_DIRECTIVE);\n\t  return namedTag && !tmpl.hasExpr(namedTag) ?\n\t                namedTag :\n\t              child ? child.name : dom.tagName.toLowerCase()\n\t}\n\t\n\t/**\n\t * With this function we avoid that the internal Tag methods get overridden\n\t * @param   { Object } data - options we want to use to extend the tag instance\n\t * @returns { Object } clean object without containing the riot internal reserved words\n\t */\n\tfunction cleanUpData(data) {\n\t  if (!(data instanceof Tag$1) && !(data && isFunction(data.trigger)))\n\t    { return data }\n\t\n\t  var o = {};\n\t  for (var key in data) {\n\t    if (!RE_RESERVED_NAMES.test(key)) { o[key] = data[key]; }\n\t  }\n\t  return o\n\t}\n\t\n\t/**\n\t * Set the property of an object for a given key. If something already\n\t * exists there, then it becomes an array containing both the old and new value.\n\t * @param { Object } obj - object on which to set the property\n\t * @param { String } key - property name\n\t * @param { Object } value - the value of the property to be set\n\t * @param { Boolean } ensureArray - ensure that the property remains an array\n\t * @param { Number } index - add the new item in a certain array position\n\t */\n\tfunction arrayishAdd(obj, key, value, ensureArray, index) {\n\t  var dest = obj[key];\n\t  var isArr = isArray(dest);\n\t  var hasIndex = !isUndefined(index);\n\t\n\t  if (dest && dest === value) { return }\n\t\n\t  // if the key was never set, set it once\n\t  if (!dest && ensureArray) { obj[key] = [value]; }\n\t  else if (!dest) { obj[key] = value; }\n\t  // if it was an array and not yet set\n\t  else {\n\t    if (isArr) {\n\t      var oldIndex = dest.indexOf(value);\n\t      // this item never changed its position\n\t      if (oldIndex === index) { return }\n\t      // remove the item from its old position\n\t      if (oldIndex !== -1) { dest.splice(oldIndex, 1); }\n\t      // move or add the item\n\t      if (hasIndex) {\n\t        dest.splice(index, 0, value);\n\t      } else {\n\t        dest.push(value);\n\t      }\n\t    } else { obj[key] = [dest, value]; }\n\t  }\n\t}\n\t\n\t/**\n\t * Removes an item from an object at a given key. If the key points to an array,\n\t * then the item is just removed from the array.\n\t * @param { Object } obj - object on which to remove the property\n\t * @param { String } key - property name\n\t * @param { Object } value - the value of the property to be removed\n\t * @param { Boolean } ensureArray - ensure that the property remains an array\n\t*/\n\tfunction arrayishRemove(obj, key, value, ensureArray) {\n\t  if (isArray(obj[key])) {\n\t    var index = obj[key].indexOf(value);\n\t    if (index !== -1) { obj[key].splice(index, 1); }\n\t    if (!obj[key].length) { delete obj[key]; }\n\t    else if (obj[key].length === 1 && !ensureArray) { obj[key] = obj[key][0]; }\n\t  } else\n\t    { delete obj[key]; } // otherwise just delete the key\n\t}\n\t\n\t/**\n\t * Mount a tag creating new Tag instance\n\t * @param   { Object } root - dom node where the tag will be mounted\n\t * @param   { String } tagName - name of the riot tag we want to mount\n\t * @param   { Object } opts - options to pass to the Tag instance\n\t * @param   { Object } ctx - optional context that will be used to extend an existing class ( used in riot.Tag )\n\t * @returns { Tag } a new Tag instance\n\t */\n\tfunction mountTo(root, tagName, opts, ctx) {\n\t  var impl = __TAG_IMPL[tagName],\n\t    implClass = __TAG_IMPL[tagName].class,\n\t    tag = ctx || (implClass ? Object.create(implClass.prototype) : {}),\n\t    // cache the inner HTML to fix #855\n\t    innerHTML = root._innerHTML = root._innerHTML || root.innerHTML;\n\t\n\t  // clear the inner html\n\t  root.innerHTML = '';\n\t\n\t  var conf = extend({ root: root, opts: opts }, { parent: opts ? opts.parent : null });\n\t\n\t  if (impl && root) { Tag$1.apply(tag, [impl, conf, innerHTML]); }\n\t\n\t  if (tag && tag.mount) {\n\t    tag.mount(true);\n\t    // add this tag to the virtualDom variable\n\t    if (!contains(__TAGS_CACHE, tag)) { __TAGS_CACHE.push(tag); }\n\t  }\n\t\n\t  return tag\n\t}\n\t\n\t/**\n\t * makes a tag virtual and replaces a reference in the dom\n\t * @this Tag\n\t * @param { tag } the tag to make virtual\n\t * @param { ref } the dom reference location\n\t */\n\tfunction makeReplaceVirtual(tag, ref) {\n\t  var frag = createFrag();\n\t  makeVirtual.call(tag, frag);\n\t  ref.parentNode.replaceChild(frag, ref);\n\t}\n\t\n\t/**\n\t * Adds the elements for a virtual tag\n\t * @this Tag\n\t * @param { Node } src - the node that will do the inserting or appending\n\t * @param { Tag } target - only if inserting, insert before this tag's first child\n\t */\n\tfunction makeVirtual(src, target) {\n\t  var this$1 = this;\n\t\n\t  var head = createDOMPlaceholder(),\n\t    tail = createDOMPlaceholder(),\n\t    frag = createFrag(),\n\t    sib, el;\n\t\n\t  this.root.insertBefore(head, this.root.firstChild);\n\t  this.root.appendChild(tail);\n\t\n\t  this.__.head = el = head;\n\t  this.__.tail = tail;\n\t\n\t  while (el) {\n\t    sib = el.nextSibling;\n\t    frag.appendChild(el);\n\t    this$1.__.virts.push(el); // hold for unmounting\n\t    el = sib;\n\t  }\n\t\n\t  if (target)\n\t    { src.insertBefore(frag, target.__.head); }\n\t  else\n\t    { src.appendChild(frag); }\n\t}\n\t\n\t/**\n\t * Move virtual tag and all child nodes\n\t * @this Tag\n\t * @param { Node } src  - the node that will do the inserting\n\t * @param { Tag } target - insert before this tag's first child\n\t */\n\tfunction moveVirtual(src, target) {\n\t  var this$1 = this;\n\t\n\t  var el = this.__.head,\n\t    frag = createFrag(),\n\t    sib;\n\t\n\t  while (el) {\n\t    sib = el.nextSibling;\n\t    frag.appendChild(el);\n\t    el = sib;\n\t    if (el === this$1.__.tail) {\n\t      frag.appendChild(el);\n\t      src.insertBefore(frag, target.__.head);\n\t      break\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Get selectors for tags\n\t * @param   { Array } tags - tag names to select\n\t * @returns { String } selector\n\t */\n\tfunction selectTags(tags) {\n\t  // select all tags\n\t  if (!tags) {\n\t    var keys = Object.keys(__TAG_IMPL);\n\t    return keys + selectTags(keys)\n\t  }\n\t\n\t  return tags\n\t    .filter(function (t) { return !/[^-\\w]/.test(t); })\n\t    .reduce(function (list, t) {\n\t      var name = t.trim().toLowerCase();\n\t      return list + \",[\" + IS_DIRECTIVE + \"=\\\"\" + name + \"\\\"]\"\n\t    }, '')\n\t}\n\t\n\t\n\tvar tags = Object.freeze({\n\t\tgetTag: getTag,\n\t\tinheritFrom: inheritFrom,\n\t\tmoveChildTag: moveChildTag,\n\t\tinitChildTag: initChildTag,\n\t\tgetImmediateCustomParentTag: getImmediateCustomParentTag,\n\t\tunmountAll: unmountAll,\n\t\tgetTagName: getTagName,\n\t\tcleanUpData: cleanUpData,\n\t\tarrayishAdd: arrayishAdd,\n\t\tarrayishRemove: arrayishRemove,\n\t\tmountTo: mountTo,\n\t\tmakeReplaceVirtual: makeReplaceVirtual,\n\t\tmakeVirtual: makeVirtual,\n\t\tmoveVirtual: moveVirtual,\n\t\tselectTags: selectTags\n\t});\n\t\n\t/**\n\t * Riot public api\n\t */\n\tvar settings = settings$1;\n\tvar util = {\n\t  tmpl: tmpl,\n\t  brackets: brackets,\n\t  styleManager: styleManager,\n\t  vdom: __TAGS_CACHE,\n\t  styleNode: styleManager.styleNode,\n\t  // export the riot internal utils as well\n\t  dom: dom,\n\t  check: check,\n\t  misc: misc,\n\t  tags: tags\n\t};\n\t\n\t// export the core props/methods\n\tvar Tag$$1 = Tag$2;\n\tvar tag$$1 = tag$1;\n\tvar tag2$$1 = tag2$1;\n\tvar mount$$1 = mount$1;\n\tvar mixin$$1 = mixin$1;\n\tvar update$$1 = update$1;\n\tvar unregister$$1 = unregister$1;\n\tvar version$$1 = version$1;\n\tvar observable = observable$1;\n\t\n\tvar riot$1 = extend({}, core, {\n\t  observable: observable$1,\n\t  settings: settings,\n\t  util: util,\n\t});\n\t\n\texports.settings = settings;\n\texports.util = util;\n\texports.Tag = Tag$$1;\n\texports.tag = tag$$1;\n\texports.tag2 = tag2$$1;\n\texports.mount = mount$$1;\n\texports.mixin = mixin$$1;\n\texports.update = update$$1;\n\texports.unregister = unregister$$1;\n\texports.version = version$$1;\n\texports.observable = observable;\n\texports['default'] = riot$1;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _d3Selection = __webpack_require__(18);\n\t\n\tObject.defineProperty(exports, 'select', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Selection.select;\n\t  }\n\t});\n\t\n\tvar _d3Geo = __webpack_require__(17);\n\t\n\tObject.defineProperty(exports, 'geoPath', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Geo.geoPath;\n\t  }\n\t});\n\tObject.defineProperty(exports, 'geoMercator', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Geo.geoMercator;\n\t  }\n\t});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\texports.default = function (_ref) {\n\t  var selection = _ref.selection,\n\t      feature = _ref.feature;\n\t  var width = 100,\n\t      height = 100;\n\t\n\t  var path = d3.geoPath().projection(d3.geoMercator().fitSize([width, height], feature));\n\t  return selection.append('svg').attr('preserveAspectRatio', 'xMinYMin meet').attr('viewBox', '0 0 ' + width + ' ' + height).attr('class', 'cor-viz-wed__city-map-svg').append('g').attr('class', 'cor-viz-wed__city-map-g').selectAll('path').data([feature]).enter().append('path').attr('class', 'cor-viz-wed__city-map-path').attr('d', path).attr('fill', function (f) {\n\t    return f.color;\n\t  });\n\t};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\t__webpack_require__(9);\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(7);\n\t\n\triot.tag2('wed-app', '<wed-cities config=\"{opts.config.cities}\" data=\"{opts.data}\" breakpoint=\"{breakpoint}\"></wed-cities> <wed-map config=\"{opts.config.map}\" data=\"{opts.data}\" breakpoint=\"{breakpoint}\"></wed-map> <wed-infobox breakpoint=\"{breakpoint}\"></wed-infobox>', '', 'class=\"cor-viz-wed\"', function (opts) {\n\t  var _this = this;\n\t\n\t  this.breakpoint = riot.STATE.breakpoint;\n\t\n\t  riot.control.on(riot.EVT.breakpointChange, function (breakpoint) {\n\t    _this.update({ breakpoint: breakpoint });\n\t  });\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\t__webpack_require__(6);\n\t\n\triot.tag2('wed-cities', '<wed-city each=\"{feature in getFeatures()}\" feature=\"{feature}\" config=\"{parent.opts.config}\" breakpoint=\"{parent.opts.breakpoint}\" active=\"{feature.data.id === parent.active}\"></wed-city>', '', 'class=\"cor-viz-wed__cities-container\"', function (opts) {\n\t  var _this = this;\n\t\n\t  this.active = null;\n\t\n\t  riot.control.on(riot.EVT.updateSelectedCity, function (_ref) {\n\t    var data = _ref.data;\n\t\n\t    _this.update({ active: data.id });\n\t  });\n\t\n\t  riot.control.on(riot.EVT.emptyInfobox, function () {\n\t    _this.update({ active: null });\n\t  });\n\t\n\t  this.getFeatures = function () {\n\t    var compare = function compare(a, b) {\n\t      return b > a ? -1 : 1;\n\t    };\n\t    return _this.opts.data.features.filter(function (f) {\n\t      return f.properties.BEZ === 'Kreisfreie Stadt';\n\t    }).sort(function (a, b) {\n\t      return compare(a.data.name, b.data.name);\n\t    });\n\t  };\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tvar _render_city = __webpack_require__(3);\n\t\n\tvar _render_city2 = _interopRequireDefault(_render_city);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\triot.tag2('wed-city', '<div data-d3=\"city-{data.id}\" class=\"cor-viz-wed__city-map__container\"></div> <h4 class=\"cor-viz-wed__city__name\">{data.name_short}</h4> <span class=\"cor-viz-wed__city__inline-data\">Fälle: <strong>{data.c16}</strong></span> <button class=\"btn cor-viz-wed__city__collapse-btn {cor-viz-wed__city__collapse-btn--active: opts.active}\" disabled=\"{opts.active}\" onclick=\"{selectCity}\">zeige Infos</button>', '', 'onmouseover=\"{selectCity}\" class=\"cor-viz-wed__city-container {cor-viz-wed__city-container--active: opts.active}\"', function (opts) {\n\t  var _this = this;\n\t\n\t  this.data = this.opts.feature.data;\n\t\n\t  this.on('mount', function () {\n\t    (0, _render_city2.default)({\n\t      feature: _this.opts.feature,\n\t      selection: d3.select('[data-d3=\"city-' + _this.data.id + '\"]')\n\t    });\n\t  });\n\t\n\t  this.selectCity = function () {\n\t    riot.control.trigger(riot.EVT.selectCity, _this.opts.feature);\n\t  };\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tvar _render_city = __webpack_require__(3);\n\t\n\tvar _render_city2 = _interopRequireDefault(_render_city);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\triot.tag2('wed-infobox', '<div if=\"{feature}\" class=\"cor-viz-wed__infobox\"> <dl> <dt>{feature.data.name}</dt> <dd>{feature.data.bez}</dd> <dt>{feature.data.hz16}</dt> <dd>Fälle pro 100T.&nbsp;Einwohner</dd> </dl> <dl> <dt>{feature.data.c16} / {feature.data.ca16}</dt> <dd>Fälle insgesamt / aufgeklärt*</dd> <dt>{feature.data.q16} %</dt> <dd>Aufklärungsquote*</dd> </dl> <span class=\"cor-viz-wed__infobox__annotation\">* Aufgeklärt heißt, es wurden Tatverdächtige ermittelt. Davon wurden aber nicht alle tatsächlich verurteilt.<br>Daten von 2016.</span> <button class=\"btn cor-viz-wed__infobox__close-btn\" onclick=\"{close}\">x</button> <div data-d3=\"map-symbol\" class=\"cor-viz-wed__infobox__map-symbol\"></div> </div> <div if=\"{!feature && opts.breakpoint !== \\'small\\'}\" class=\"cor-viz-wed__infobox\"> <p class=\"cor-viz-wed__infobox__hint\">Wähle eine Stadt aus der Liste links aus oder fahre mit der Maus (oder klicke mit Deinem Touchpad) über die Karte von NRW, um die Daten zu Wohnungseinbrüchen für eine Stadt oder einen Landkreis zu sehen.</p> </div>', '', 'class=\"cor-viz-wed__infobox-wrapper\"', function (opts) {\n\t  var _this = this;\n\t\n\t  riot.control.on(riot.EVT.updateInfobox, function (feature) {\n\t    _this.update({ feature: feature });\n\t    _this.renderMapSymbol(feature);\n\t  });\n\t\n\t  riot.control.on(riot.EVT.emptyInfobox, function () {\n\t    _this.update({ feature: null });\n\t  });\n\t\n\t  this.close = function () {\n\t    if (_this.opts.breakpoint === 'small') {\n\t      riot.control.trigger(riot.EVT.closeInfobox);\n\t    }\n\t  };\n\t\n\t  this.renderMapSymbol = function (feature) {\n\t    var selection = d3.select('[data-d3=\"map-symbol\"]');\n\t    selection.selectAll('*').remove();\n\t    (0, _render_city2.default)({ selection: selection, feature: feature });\n\t  };\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\triot.tag2('wed-legend', '<h4 class=\"cor-viz-wed__legend-title\">Einbrüche pro 100.000 Einwohner</h4> <div class=\"cor-viz-wed__legend-item\" each=\"{step in opts.steps}\"> <span class=\"cor-viz-wed__legend-color\" riot-style=\"background-color:{parent.getColor(step)}\"></span> <span class=\"cor-viz-wed__legend-label\">{step}</span> </div>', '', 'class=\"cor-viz-wed__legend\"', function (opts) {\n\t  var _this = this;\n\t\n\t  this.getColor = function (step) {\n\t    return _this.opts.colors[_this.opts.steps.indexOf(step)];\n\t  };\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\t__webpack_require__(8);\n\t\n\tvar _render_map = __webpack_require__(10);\n\t\n\tvar _render_map2 = _interopRequireDefault(_render_map);\n\t\n\tvar _hilight = __webpack_require__(11);\n\t\n\tvar _hilight2 = _interopRequireDefault(_hilight);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\triot.tag2('wed-map', '<div data-d3=\"d3-map\" class=\"cor-viz-wed__map-container\"></div> <wed-legend steps=\"{opts.config.steps}\" colors=\"{opts.config.colors}\"></wed-legend>', '', 'class=\"cor-viz-wed__map-wrapper\"', function (opts) {\n\t  var _this = this;\n\t\n\t  this.on('mount', function () {\n\t    _this.selection = (0, _render_map2.default)(_this.opts);\n\t    _this.selection.on('mouseover', function (f) {\n\t      riot.control.trigger(riot.EVT.mapMouseover, f);\n\t    });\n\t  });\n\t\n\t  riot.control.on(riot.EVT.mapHilight, function (d) {\n\t    _this.hilight(_this.selection.filter(function (_d) {\n\t      return _d === d;\n\t    }));\n\t  });\n\t\n\t  this.hilight = function (selection) {\n\t    _this.hilighted && _this.hilighted.classed('-hilight', false);\n\t    _this.hilighted = selection;\n\t    (0, _hilight2.default)(selection);\n\t  };\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\texports.default = function (_ref) {\n\t  var data = _ref.data,\n\t      config = _ref.config;\n\t  var topoLayerName = config.topoLayerName,\n\t      width = config.width,\n\t      height = config.height;\n\t\n\t  var path = d3.geoPath().projection(d3.geoMercator().fitSize([width, height], data));\n\t  return d3.select('[data-d3=\"d3-map\"]').append('svg').attr('preserveAspectRatio', 'xMinYMin meet').attr('viewBox', '0 0 ' + width + ' ' + height).attr('class', 'cor-viz-wed__map-svg').append('g').attr('class', 'cor-viz-wed__map-g').selectAll('path').data(data.features).enter().append('path').attr('class', 'cor-viz-wed__map-path').attr('d', path).attr('fill', function (f) {\n\t    return f.color;\n\t  });\n\t};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function (selection) {\n\t  selection.classed('-hilight', true);\n\t  var node = selection.node();\n\t  node.parentNode.appendChild(node);\n\t};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\t__webpack_require__(19);\n\t\n\t__webpack_require__(14);\n\t\n\t__webpack_require__(15);\n\t\n\tvar _load_data = __webpack_require__(13);\n\t\n\tvar _load_data2 = _interopRequireDefault(_load_data);\n\t\n\t__webpack_require__(4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tif (false) {\n\t  module.hot.accept();\n\t}\n\t\n\t// import 'babel-polyfill'\n\t\n\t\n\t// riot\n\t\n\t\n\t// responsive\n\t\n\t\n\t// load & mount app\n\t\n\tvar config = __webpack_require__(20);\n\tvar data = (0, _load_data2.default)(config.map);\n\t\n\triot.mount('[data-riot-mount=\"cor-viz-wed__app\"]', 'wed-app', { config: config, data: data });\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _topojson = __webpack_require__(23);\n\t\n\tvar topojson = _interopRequireWildcard(_topojson);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar geoSource = __webpack_require__(21); // FIXME config.json\n\tvar wedData = __webpack_require__(22);\n\t\n\texports.default = function (_ref) {\n\t  var topoLayerName = _ref.topoLayerName,\n\t      colors = _ref.colors;\n\t\n\t  var data = topojson.feature(geoSource, geoSource.objects[topoLayerName]);\n\t  data.features.map(function (f) {\n\t    var n = f.properties.GEN;\n\t    var ix = function ix(x) {\n\t      return n.indexOf(x) > -1;\n\t    };\n\t    f.data = wedData[f.properties.AGS];\n\t    f.data.name = n;\n\t    f.data.name_short = ix('Ruhr') ? 'Mülheim' : ix('glad') ? 'M. Gladbach' : n;\n\t    f.data.bez = f.properties.BEZ;\n\t    f.color = colors[+f.data.c];\n\t    f.data.id = f.properties.AGS;\n\t  });\n\t  return data;\n\t};\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\t// event names\n\tvar EVT = {\n\t  selectCity: 'select_city',\n\t  updateSelectedCity: 'update_selected_city',\n\t\n\t  mapMouseover: 'map_mouseover',\n\t  mapHilight: 'map_hilight',\n\t\n\t  updateInfobox: 'update_infobox',\n\t  closeInfobox: 'close_infobox',\n\t  emptyInfobox: 'empty_infobox',\n\t\n\t  breakpointChange: 'breakpoint_change'\n\t};\n\t\n\t// event bus\n\tvar C = riot.observable();\n\t\n\t// payload: param `data` is always a single geojson feature\n\t// from the initial geoData\n\t\n\t// city select via list (hover or click)\n\tC.on(EVT.selectCity, function (data) {\n\t  C.trigger(EVT.updateInfobox, data);\n\t  C.trigger(EVT.mapHilight, data);\n\t  C.trigger(EVT.updateSelectedCity, data);\n\t});\n\t\n\t// close infobox via close-btn\n\tC.on(EVT.closeInfobox, function () {\n\t  C.trigger(EVT.emptyInfobox);\n\t});\n\t\n\t// map mouseover (also via click on mobile)\n\tC.on(EVT.mapMouseover, function (data) {\n\t  C.trigger(EVT.updateInfobox, data);\n\t  C.trigger(EVT.mapHilight, data);\n\t  C.trigger(EVT.updateSelectedCity, data);\n\t});\n\t\n\t// DEBUG\n\t// C.on('*', (event, data) => {\n\t//   console.log(event, data)\n\t// })\n\t\n\t// hold some global state\n\triot.STATE = {};\n\t\n\t// make event bus global\n\triot.EVT = EVT;\n\triot.control = C;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\tvar BP = { // FIXME this should go into config.json\n\t  small: 768,\n\t  medium: 992,\n\t  large: 1200\n\t};\n\t\n\tvar getBreakpoint = function getBreakpoint() {\n\t  var w = window,\n\t      d = document,\n\t      e = d.documentElement,\n\t      g = d.getElementsByTagName('body')[0],\n\t      width = w.innerWidth || e.clientWidth || g.clientWidth;\n\t  return Object.keys(BP).find(function (k) {\n\t    return BP[k] > width;\n\t  });\n\t};\n\t\n\triot.STATE.breakpoint = getBreakpoint();\n\t\n\twindow.addEventListener('resize', function () {\n\t  var bp = getBreakpoint();\n\t  if (riot.STATE.breakpoint !== bp) {\n\t    riot.STATE.breakpoint = bp;\n\t    riot.control.trigger(riot.EVT.breakpointChange, bp);\n\t  }\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-array/ Version 1.2.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse = stop < start,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  if (reverse) n = start, start = stop, stop = n;\n\t\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar quantile = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return quantile(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = quantile;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-geo/ Version 1.6.3. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(16)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3));\n\t}(this, (function (exports,d3Array) { 'use strict';\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add(temp, y, this.t);\n\t    add(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon = 1e-6;\n\tvar epsilon2 = 1e-12;\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\tvar quarterPi = pi / 4;\n\tvar tau = pi * 2;\n\t\n\tvar degrees = 180 / pi;\n\tvar radians = pi / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log = Math.log;\n\tvar pow = Math.pow;\n\tvar sin = Math.sin;\n\tvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin(x / 2)) * x;\n\t}\n\t\n\tfunction noop() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(object, stream) {\n\t    streamGeometry(object.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop,\n\t  lineStart: noop,\n\t  lineEnd: noop,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos(phi),\n\t      sinPhi = sin(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos(adLambda),\n\t      v = k * sdLambda * sin(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n\t  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range$1;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon) phi1 = 90;\n\t    else if (deltaSum < -epsilon) phi0 = -90;\n\t    range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  }\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon) lambda0$1 = -(lambda1 = 180);\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range$$1, x) {\n\t  return range$$1[0] <= range$$1[1] ? range$$1[0] <= x && x <= range$$1[1] : x < range$$1[0] || range$$1[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range$1 = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos(phi);\n\t  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos(phi);\n\t  x0 = cosPhi * cos(lambda);\n\t  y0 = cosPhi * sin(lambda);\n\t  z0 = sin(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos(phi),\n\t      x = cosPhi * cos(lambda),\n\t      y = cosPhi * sin(lambda),\n\t      z = sin(phi),\n\t      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos(phi);\n\t  x0 = cosPhi * cos(lambda);\n\t  y0 = cosPhi * sin(lambda);\n\t  z0 = sin(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos(phi),\n\t      x = cosPhi * cos(lambda),\n\t      y = cosPhi * sin(lambda),\n\t      z = sin(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt(cx * cx + cy * cy + cz * cz),\n\t      w = asin(m), // line weight = angle\n\t      v = m && -w / m; // area weight multiplier\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n\t};\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos(deltaPhi),\n\t      sinDeltaPhi = sin(deltaPhi),\n\t      cosDeltaGamma = cos(deltaGamma),\n\t      sinDeltaGamma = sin(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos(phi),\n\t        x = cos(lambda) * cosPhi,\n\t        y = sin(lambda) * cosPhi,\n\t        z = sin(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos(phi),\n\t        x = cos(lambda) * cosPhi,\n\t        y = sin(lambda) * cosPhi,\n\t        z = sin(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos(radius),\n\t      sinRadius = sin(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n\t}\n\t\n\tvar circle = function() {\n\t  var center = constant([0, 0]),\n\t      radius = constant(90),\n\t      precision = constant(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees, x[1] *= degrees;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link(subject);\n\t  link(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipExtent(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = d3Array.merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar sum = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin(lambda), -cos(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin(phi0),\n\t        cosPhi0 = cos(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin(phi1),\n\t          cosPhi1 = cos(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum.add(atan2(k * sign$$1 * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop,\n\t  point: noop,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop,\n\t  polygonStart: noop,\n\t  polygonEnd: noop\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin(phi), cosPhi0$1 = cos(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin(phi),\n\t      cosPhi = cos(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos(delta),\n\t      sinDelta = sin(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length(object);\n\t};\n\t\n\tvar containsObjectType = {\n\t  Feature: function(object, point) {\n\t    return containsGeometry(object.geometry, point);\n\t  },\n\t  FeatureCollection: function(object, point) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tvar containsGeometryType = {\n\t  Sphere: function() {\n\t    return true;\n\t  },\n\t  Point: function(object, point) {\n\t    return containsPoint(object.coordinates, point);\n\t  },\n\t  MultiPoint: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  LineString: function(object, point) {\n\t    return containsLine(object.coordinates, point);\n\t  },\n\t  MultiLineString: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  Polygon: function(object, point) {\n\t    return containsPolygon(object.coordinates, point);\n\t  },\n\t  MultiPolygon: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  GeometryCollection: function(object, point) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tfunction containsGeometry(geometry, point) {\n\t  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n\t      ? containsGeometryType[geometry.type](geometry, point)\n\t      : false;\n\t}\n\t\n\tfunction containsPoint(coordinates, point) {\n\t  return distance(coordinates, point) === 0;\n\t}\n\t\n\tfunction containsLine(coordinates, point) {\n\t  var ab = distance(coordinates[0], coordinates[1]),\n\t      ao = distance(coordinates[0], point),\n\t      ob = distance(point, coordinates[1]);\n\t  return ao + ob <= ab + epsilon;\n\t}\n\t\n\tfunction containsPolygon(coordinates, point) {\n\t  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n\t}\n\t\n\tfunction ringRadians(ring) {\n\t  return ring = ring.map(pointRadians), ring.pop(), ring;\n\t}\n\t\n\tfunction pointRadians(point) {\n\t  return [point[0] * radians, point[1] * radians];\n\t}\n\t\n\tvar contains = function(object, point) {\n\t  return (object && containsObjectType.hasOwnProperty(object.type)\n\t      ? containsObjectType[object.type]\n\t      : containsGeometry)(object, point);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = d3Array.range(y0, y1 - epsilon, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = d3Array.range(x0, x1 - epsilon, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return d3Array.range(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(d3Array.range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(d3Array.range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n\t        .concat(d3Array.range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n\t      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos(y0),\n\t      sy0 = sin(y0),\n\t      cy1 = cos(y1),\n\t      sy1 = sin(y1),\n\t      kx0 = cy0 * cos(x0),\n\t      ky0 = cy0 * sin(x0),\n\t      kx1 = cy1 * cos(x1),\n\t      ky1 = cy1 * sin(x1),\n\t      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin(t *= d) / k,\n\t        A = sin(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees,\n\t      atan2(z, sqrt(x * x + y * y)) * degrees\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees, y0 * degrees];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop,\n\t  lineStart: noop,\n\t  lineEnd: noop,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop,\n\t  lineEnd: noop,\n\t  polygonStart: noop,\n\t  polygonEnd: noop,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop\n\t};\n\t\n\tvar lengthSum$1 = adder();\n\tvar lengthRing;\n\tvar x00$2;\n\tvar y00$2;\n\tvar x0$4;\n\tvar y0$4;\n\t\n\tvar lengthStream$1 = {\n\t  point: noop,\n\t  lineStart: function() {\n\t    lengthStream$1.point = lengthPointFirst$1;\n\t  },\n\t  lineEnd: function() {\n\t    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n\t    lengthStream$1.point = noop;\n\t  },\n\t  polygonStart: function() {\n\t    lengthRing = true;\n\t  },\n\t  polygonEnd: function() {\n\t    lengthRing = null;\n\t  },\n\t  result: function() {\n\t    var length = +lengthSum$1;\n\t    lengthSum$1.reset();\n\t    return length;\n\t  }\n\t};\n\t\n\tfunction lengthPointFirst$1(x, y) {\n\t  lengthStream$1.point = lengthPoint$1;\n\t  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n\t}\n\t\n\tfunction lengthPoint$1(x, y) {\n\t  x0$4 -= x, y0$4 -= y;\n\t  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n\t  x0$4 = x, y0$4 = y;\n\t}\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _circle: circle$1(4.5),\n\t  pointRadius: function(_) {\n\t    return this._circle = circle$1(_), this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$1(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.measure = function(object) {\n\t    geoStream(object, projectionStream(lengthStream$1));\n\t    return lengthStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(rotate, sink) {\n\t    var line = clipLine(sink),\n\t        rotatedStart = rotate.invert(start[0], start[1]),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = d3Array.merge(segments);\n\t        var startInside = polygonContains(polygon, rotatedStart);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      line.point(point[0], point[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      var point = rotate(lambda, phi);\n\t      ringSink.point(point[0], point[1]);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi, -halfPi]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi : -pi,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi) < epsilon) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon\n\t      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n\t          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi;\n\t    stream.point(-pi, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi, phi);\n\t    stream.point(pi, 0);\n\t    stream.point(pi, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi, -phi);\n\t    stream.point(-pi, 0);\n\t    stream.point(-pi, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon) {\n\t    var lambda = from[0] < to[0] ? pi : -pi;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius, delta) {\n\t  var cr = cos(radius),\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos(lambda) * cos(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon;\n\t            point1[1] += epsilon;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi) < epsilon,\n\t        meridian = polar || delta < epsilon;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n\t};\n\t\n\tvar transform = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt(a * a + b * b + c * c),\n\t          phi2 = asin(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees, point[1] * degrees];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt(c - 2 * n * sin(y)) / n;\n\t    return [r * sin(x *= n), r0 - r * cos(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos(x),\n\t        cy = cos(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin(x),\n\t      k * sin(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin(c),\n\t        cc = cos(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log(tan((halfPi + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      center = m.center,\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      x0 = null, y0, x1, y1; // clip extent\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), reclip()) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), reclip()) : translate();\n\t  };\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? (center(_), reclip()) : center();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  function reclip() {\n\t    var k = pi * scale(),\n\t        t = m(rotation(m.rotate()).invert([0, 0]));\n\t    return clipExtent(x0 == null\n\t        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n\t        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n\t        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n\t  }\n\t\n\t  return reclip();\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos(y0),\n\t      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n\t      f = cy0 * pow(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n\t    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n\t    var r = f / pow(tany(y), n);\n\t    return [r * sin(n * x), f - r * cos(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos(y0),\n\t      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin(nx), g - gy * cos(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos(y), k = cos(x) * cy;\n\t  return [cy * sin(x) / k, sin(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$1 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, clip = identity, // clip extent\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos(y) * sin(x), sin(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos(y), k = 1 + cos(x) * cy;\n\t  return [cy * sin(x) / k, sin(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log(tan((halfPi + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\texports.geoArea = area;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid;\n\texports.geoCircle = circle;\n\texports.geoClipExtent = extent;\n\texports.geoContains = contains;\n\texports.geoDistance = distance;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoInterpolate = interpolate;\n\texports.geoLength = length;\n\texports.geoPath = index;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoIdentity = identity$1;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\texports.geoRotation = rotation;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-selection/ Version 1.0.5. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point(node, event);\n\t};\n\t\n\tfunction none() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar defaultView = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  var node;\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : defaultView(node = this.node())\n\t          .getComputedStyle(node, null)\n\t          .getPropertyValue(name);\n\t};\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window = defaultView(node),\n\t      event = window.CustomEvent;\n\t\n\t  if (event) {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\texports.creator = creator;\n\texports.local = local;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = defaultView;\n\texports.customEvent = customEvent;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"map\": {\n\t\t\t\"geoFile\": \"nrw_landkreise_simplify200.topo.json\",\n\t\t\t\"topoLayerName\": \"nrw_landkreise_simplify200\",\n\t\t\t\"colors\": [\n\t\t\t\t\"#f9c280\",\n\t\t\t\t\"#dfad71\",\n\t\t\t\t\"#c59962\",\n\t\t\t\t\"#ab8454\",\n\t\t\t\t\"#917045\",\n\t\t\t\t\"#775b36\",\n\t\t\t\t\"#5e4728\"\n\t\t\t],\n\t\t\t\"steps\": [\n\t\t\t\t179,\n\t\t\t\t230,\n\t\t\t\t281,\n\t\t\t\t332,\n\t\t\t\t383,\n\t\t\t\t434,\n\t\t\t\t485\n\t\t\t],\n\t\t\t\"width\": 700,\n\t\t\t\"height\": 690\n\t\t},\n\t\t\"cities\": {\n\t\t\t\"height\": 100,\n\t\t\t\"width\": 100\n\t\t}\n\t};\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"type\": \"Topology\",\n\t\t\"arcs\": [\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2317,\n\t\t\t\t\t4335\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t103,\n\t\t\t\t\t-50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-92\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t-37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2511,\n\t\t\t\t\t3997\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2529,\n\t\t\t\t\t3988\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2569,\n\t\t\t\t\t3969\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2592,\n\t\t\t\t\t3950\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2674,\n\t\t\t\t\t3890\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t101,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2775,\n\t\t\t\t\t3845\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2799,\n\t\t\t\t\t3800\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2792,\n\t\t\t\t\t3758\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2796,\n\t\t\t\t\t3735\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-107,\n\t\t\t\t\t-68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2689,\n\t\t\t\t\t3667\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t-70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-80\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2600,\n\t\t\t\t\t3510\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2576,\n\t\t\t\t\t3455\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2501,\n\t\t\t\t\t3489\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t105\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2449,\n\t\t\t\t\t3594\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2409,\n\t\t\t\t\t3609\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2382,\n\t\t\t\t\t3583\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-137,\n\t\t\t\t\t-39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2228,\n\t\t\t\t\t3607\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2169,\n\t\t\t\t\t3670\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t-16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t77\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2040,\n\t\t\t\t\t3777\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2021,\n\t\t\t\t\t3779\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-219\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2000,\n\t\t\t\t\t3490\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1980,\n\t\t\t\t\t3493\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1948,\n\t\t\t\t\t3528\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1911,\n\t\t\t\t\t3535\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1862,\n\t\t\t\t\t3577\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t88,\n\t\t\t\t\t61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1890,\n\t\t\t\t\t3788\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1860,\n\t\t\t\t\t3817\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1810,\n\t\t\t\t\t3791\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1805,\n\t\t\t\t\t3843\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t132\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1851,\n\t\t\t\t\t4073\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1836,\n\t\t\t\t\t4206\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1904,\n\t\t\t\t\t4189\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1964,\n\t\t\t\t\t4274\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t-67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2219,\n\t\t\t\t\t4283\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t98,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4969,\n\t\t\t\t\t4438\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t103,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5072,\n\t\t\t\t\t4443\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5094,\n\t\t\t\t\t4416\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-97\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-54\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t178,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5324,\n\t\t\t\t\t4282\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5388,\n\t\t\t\t\t4294\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5421,\n\t\t\t\t\t4255\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5432,\n\t\t\t\t\t4263\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5444,\n\t\t\t\t\t4241\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5464,\n\t\t\t\t\t4189\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-174\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-77\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5540,\n\t\t\t\t\t3676\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5518,\n\t\t\t\t\t3624\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-166,\n\t\t\t\t\t-130\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5352,\n\t\t\t\t\t3494\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5324,\n\t\t\t\t\t3491\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5326,\n\t\t\t\t\t3534\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5270,\n\t\t\t\t\t3533\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5266,\n\t\t\t\t\t3526\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5241,\n\t\t\t\t\t3530\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t-70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-83,\n\t\t\t\t\t-117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t-19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4926,\n\t\t\t\t\t3315\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4858,\n\t\t\t\t\t3331\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-100,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4717,\n\t\t\t\t\t3300\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t99\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t74\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t152,\n\t\t\t\t\t88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t123\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-92,\n\t\t\t\t\t33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t93\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4506,\n\t\t\t\t\t4037\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4462,\n\t\t\t\t\t4036\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t117\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4487,\n\t\t\t\t\t4153\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t94\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4577,\n\t\t\t\t\t4247\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t166,\n\t\t\t\t\t90\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4903,\n\t\t\t\t\t4464\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2259,\n\t\t\t\t\t1214\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2305,\n\t\t\t\t\t1208\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2333,\n\t\t\t\t\t1195\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2352,\n\t\t\t\t\t1164\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2330,\n\t\t\t\t\t1095\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2280,\n\t\t\t\t\t1067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t-158\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2355,\n\t\t\t\t\t909\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2302,\n\t\t\t\t\t917\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-93,\n\t\t\t\t\t-15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t-78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2030,\n\t\t\t\t\t925\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2049,\n\t\t\t\t\t945\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t142\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2098,\n\t\t\t\t\t1266\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2171,\n\t\t\t\t\t1242\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2204,\n\t\t\t\t\t1274\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2597,\n\t\t\t\t\t2637\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2606,\n\t\t\t\t\t2631\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2645,\n\t\t\t\t\t2655\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2652,\n\t\t\t\t\t2640\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2671,\n\t\t\t\t\t2654\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2695,\n\t\t\t\t\t2630\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2696,\n\t\t\t\t\t2580\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2714,\n\t\t\t\t\t2579\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2713,\n\t\t\t\t\t2600\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2742,\n\t\t\t\t\t2564\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2742,\n\t\t\t\t\t2532\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2736,\n\t\t\t\t\t2481\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2747,\n\t\t\t\t\t2462\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t-92\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t115,\n\t\t\t\t\t18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t-112\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t116,\n\t\t\t\t\t53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3248,\n\t\t\t\t\t2146\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3228,\n\t\t\t\t\t2135\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-132\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t-59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3375,\n\t\t\t\t\t1771\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t-94\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-95\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-104,\n\t\t\t\t\t-159\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t-20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3122,\n\t\t\t\t\t1442\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t-9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t128\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t94\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t107\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2767,\n\t\t\t\t\t1780\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-100,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2667,\n\t\t\t\t\t1813\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2484,\n\t\t\t\t\t1849\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t80\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2469,\n\t\t\t\t\t1971\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t94\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2502,\n\t\t\t\t\t2165\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2468,\n\t\t\t\t\t2175\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2467,\n\t\t\t\t\t2265\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2507,\n\t\t\t\t\t2374\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2509,\n\t\t\t\t\t2422\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2526,\n\t\t\t\t\t2487\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2511,\n\t\t\t\t\t2480\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2510,\n\t\t\t\t\t2505\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2513,\n\t\t\t\t\t2547\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2536,\n\t\t\t\t\t2617\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2526,\n\t\t\t\t\t2620\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2524,\n\t\t\t\t\t2631\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2551,\n\t\t\t\t\t2647\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5270,\n\t\t\t\t\t3533\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5324,\n\t\t\t\t\t3491\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5399,\n\t\t\t\t\t3441\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5464,\n\t\t\t\t\t3414\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-142,\n\t\t\t\t\t-72\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t102,\n\t\t\t\t\t-157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-113\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-88,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t-46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-88,\n\t\t\t\t\t40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-126,\n\t\t\t\t\t-53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-94,\n\t\t\t\t\t2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-98\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t-47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t-135\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t98,\n\t\t\t\t\t-89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t156,\n\t\t\t\t\t34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t-282\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-117,\n\t\t\t\t\t-130\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t-63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-190,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4719,\n\t\t\t\t\t2231\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t92\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4641,\n\t\t\t\t\t2323\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4608,\n\t\t\t\t\t2370\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4549,\n\t\t\t\t\t2326\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-85,\n\t\t\t\t\t-6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t-82\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4401,\n\t\t\t\t\t2238\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-109,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4241,\n\t\t\t\t\t2234\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4171,\n\t\t\t\t\t2238\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4148,\n\t\t\t\t\t2290\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4115,\n\t\t\t\t\t2298\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t-9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-106,\n\t\t\t\t\t52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3827,\n\t\t\t\t\t2626\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3798,\n\t\t\t\t\t2629\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3782,\n\t\t\t\t\t2654\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-98,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3644,\n\t\t\t\t\t2634\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3629,\n\t\t\t\t\t2650\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t95\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t139\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3623,\n\t\t\t\t\t2884\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3603,\n\t\t\t\t\t2942\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3584,\n\t\t\t\t\t2948\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3556,\n\t\t\t\t\t3074\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3553,\n\t\t\t\t\t3112\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3557,\n\t\t\t\t\t3155\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t119\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3509,\n\t\t\t\t\t3274\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3526,\n\t\t\t\t\t3283\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3551,\n\t\t\t\t\t3346\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3602,\n\t\t\t\t\t3352\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t-81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t103,\n\t\t\t\t\t8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t86,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t141,\n\t\t\t\t\t-115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t216,\n\t\t\t\t\t63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t122,\n\t\t\t\t\t101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t102,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4858,\n\t\t\t\t\t3331\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5241,\n\t\t\t\t\t3530\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3707,\n\t\t\t\t\t4038\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3800,\n\t\t\t\t\t4029\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3859,\n\t\t\t\t\t4012\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t-108\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4111,\n\t\t\t\t\t3893\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4146,\n\t\t\t\t\t3869\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4193,\n\t\t\t\t\t3862\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4271,\n\t\t\t\t\t3911\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t125\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4300,\n\t\t\t\t\t4036\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4331,\n\t\t\t\t\t4048\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t99,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4430,\n\t\t\t\t\t4030\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3602,\n\t\t\t\t\t3352\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3526,\n\t\t\t\t\t3283\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3502,\n\t\t\t\t\t3272\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3484,\n\t\t\t\t\t3290\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3462,\n\t\t\t\t\t3332\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3484,\n\t\t\t\t\t3352\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t98\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3454,\n\t\t\t\t\t3508\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t80\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3444,\n\t\t\t\t\t3624\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3523,\n\t\t\t\t\t3669\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t100\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3702,\n\t\t\t\t\t3954\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3680,\n\t\t\t\t\t4003\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2881,\n\t\t\t\t\t3155\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t140,\n\t\t\t\t\t-81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3021,\n\t\t\t\t\t3074\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3018,\n\t\t\t\t\t3014\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-90\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3030,\n\t\t\t\t\t2924\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-126\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t-77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2952,\n\t\t\t\t\t2721\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2896,\n\t\t\t\t\t2707\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2881,\n\t\t\t\t\t2728\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2834,\n\t\t\t\t\t2751\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-141,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2732,\n\t\t\t\t\t2868\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2728,\n\t\t\t\t\t2900\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2681,\n\t\t\t\t\t2888\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2672,\n\t\t\t\t\t2928\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2660,\n\t\t\t\t\t2920\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2679,\n\t\t\t\t\t2969\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2701,\n\t\t\t\t\t3042\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2752,\n\t\t\t\t\t3074\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2753,\n\t\t\t\t\t3084\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2785,\n\t\t\t\t\t3128\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t96,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3462,\n\t\t\t\t\t3332\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3502,\n\t\t\t\t\t3272\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3557,\n\t\t\t\t\t3155\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3556,\n\t\t\t\t\t3074\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3603,\n\t\t\t\t\t2942\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3629,\n\t\t\t\t\t2650\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3652,\n\t\t\t\t\t2616\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-92\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t-37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-141,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3429,\n\t\t\t\t\t2387\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3419,\n\t\t\t\t\t2356\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-123\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3439,\n\t\t\t\t\t2171\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3397,\n\t\t\t\t\t2154\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3374,\n\t\t\t\t\t2165\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3310,\n\t\t\t\t\t2143\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2747,\n\t\t\t\t\t2462\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2742,\n\t\t\t\t\t2532\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2783,\n\t\t\t\t\t2606\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2888,\n\t\t\t\t\t2704\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3030,\n\t\t\t\t\t2924\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t90\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3021,\n\t\t\t\t\t3074\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3065,\n\t\t\t\t\t3061\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3074,\n\t\t\t\t\t3156\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3067,\n\t\t\t\t\t3240\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3105,\n\t\t\t\t\t3257\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3141,\n\t\t\t\t\t3294\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t129,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3270,\n\t\t\t\t\t3312\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t162,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3432,\n\t\t\t\t\t3313\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1604,\n\t\t\t\t\t2941\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1620,\n\t\t\t\t\t2957\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1638,\n\t\t\t\t\t2953\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-204\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t91,\n\t\t\t\t\t-9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t-32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-72\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-83,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t-66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-98\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1851,\n\t\t\t\t\t2333\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1804,\n\t\t\t\t\t2297\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1728,\n\t\t\t\t\t2302\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t107\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1713,\n\t\t\t\t\t2409\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1627,\n\t\t\t\t\t2356\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t194\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1501,\n\t\t\t\t\t2684\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t111\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1479,\n\t\t\t\t\t2907\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1526,\n\t\t\t\t\t2956\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2538,\n\t\t\t\t\t3460\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-54\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2589,\n\t\t\t\t\t3346\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2587,\n\t\t\t\t\t3265\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2490,\n\t\t\t\t\t3261\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2478,\n\t\t\t\t\t3220\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2440,\n\t\t\t\t\t3166\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2386,\n\t\t\t\t\t3134\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-148,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2238,\n\t\t\t\t\t3170\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2200,\n\t\t\t\t\t3203\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2196,\n\t\t\t\t\t3263\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2184,\n\t\t\t\t\t3312\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2167,\n\t\t\t\t\t3340\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2225,\n\t\t\t\t\t3367\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2251,\n\t\t\t\t\t3404\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2281,\n\t\t\t\t\t3407\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2323,\n\t\t\t\t\t3422\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2349,\n\t\t\t\t\t3459\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2385,\n\t\t\t\t\t3445\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2426,\n\t\t\t\t\t3462\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2436,\n\t\t\t\t\t3475\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t102,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2725,\n\t\t\t\t\t3648\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t96,\n\t\t\t\t\t-41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t110,\n\t\t\t\t\t19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-92\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3087,\n\t\t\t\t\t3546\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3102,\n\t\t\t\t\t3528\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t-41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-110,\n\t\t\t\t\t-38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t-141\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2881,\n\t\t\t\t\t3155\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2805,\n\t\t\t\t\t3149\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2811,\n\t\t\t\t\t3196\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2731,\n\t\t\t\t\t3198\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t120\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2608,\n\t\t\t\t\t3347\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2538,\n\t\t\t\t\t3460\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2576,\n\t\t\t\t\t3455\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2689,\n\t\t\t\t\t3667\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2721,\n\t\t\t\t\t3685\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2734,\n\t\t\t\t\t3670\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t970,\n\t\t\t\t\t4327\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1028,\n\t\t\t\t\t4283\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1082,\n\t\t\t\t\t4305\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t-61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t-22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-162\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1029,\n\t\t\t\t\t3984\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t106\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t949,\n\t\t\t\t\t4131\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t-113\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-116\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t-68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t131,\n\t\t\t\t\t-96\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t-15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1110,\n\t\t\t\t\t3301\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1137,\n\t\t\t\t\t3220\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1115,\n\t\t\t\t\t3159\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t-39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-112,\n\t\t\t\t\t21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-96,\n\t\t\t\t\t-49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-102,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t669,\n\t\t\t\t\t2992\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t612,\n\t\t\t\t\t3000\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t203\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t130\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t73\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-116,\n\t\t\t\t\t115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t147\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-143,\n\t\t\t\t\t49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t90\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t77\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t86,\n\t\t\t\t\t21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t109,\n\t\t\t\t\t63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t197,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t168\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t-40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t160,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t124,\n\t\t\t\t\t-84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1138,\n\t\t\t\t\t3097\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-148\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1079,\n\t\t\t\t\t2819\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1097,\n\t\t\t\t\t2796\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1160,\n\t\t\t\t\t2782\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t-8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1269,\n\t\t\t\t\t2698\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-116,\n\t\t\t\t\t-115\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1153,\n\t\t\t\t\t2583\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1130,\n\t\t\t\t\t2599\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1102,\n\t\t\t\t\t2620\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1025,\n\t\t\t\t\t2658\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t-84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-149,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t730,\n\t\t\t\t\t2446\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t688,\n\t\t\t\t\t2460\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t658,\n\t\t\t\t\t2488\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t-69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t524,\n\t\t\t\t\t2472\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-115,\n\t\t\t\t\t-71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t174\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t91,\n\t\t\t\t\t94\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t170\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t99,\n\t\t\t\t\t94\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t612,\n\t\t\t\t\t3000\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1115,\n\t\t\t\t\t3159\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6016,\n\t\t\t\t\t4437\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5908,\n\t\t\t\t\t4427\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5875,\n\t\t\t\t\t4439\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-134,\n\t\t\t\t\t70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5757,\n\t\t\t\t\t4588\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5696,\n\t\t\t\t\t4543\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-106,\n\t\t\t\t\t-60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-111,\n\t\t\t\t\t-103\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5433,\n\t\t\t\t\t4378\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-137\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5432,\n\t\t\t\t\t4263\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5388,\n\t\t\t\t\t4294\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5094,\n\t\t\t\t\t4416\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t124\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5021,\n\t\t\t\t\t4540\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4875,\n\t\t\t\t\t4625\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4855,\n\t\t\t\t\t4672\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t118\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4905,\n\t\t\t\t\t4790\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t103\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4883,\n\t\t\t\t\t4930\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4922,\n\t\t\t\t\t5013\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4931,\n\t\t\t\t\t5092\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t138,\n\t\t\t\t\t117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t112,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5262,\n\t\t\t\t\t5153\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5325,\n\t\t\t\t\t5183\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5341,\n\t\t\t\t\t5230\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t112\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5347,\n\t\t\t\t\t5342\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5485,\n\t\t\t\t\t5409\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5491,\n\t\t\t\t\t5425\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t-45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t102,\n\t\t\t\t\t-104\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-92\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t-19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t121,\n\t\t\t\t\t-71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-152\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-93,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1130,\n\t\t\t\t\t2599\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1138,\n\t\t\t\t\t2593\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-99\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-112\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1086,\n\t\t\t\t\t2372\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1050,\n\t\t\t\t\t2325\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1040,\n\t\t\t\t\t2314\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1047,\n\t\t\t\t\t2260\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1003,\n\t\t\t\t\t2260\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t-75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t958,\n\t\t\t\t\t2185\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-96,\n\t\t\t\t\t140\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t735,\n\t\t\t\t\t2423\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1025,\n\t\t\t\t\t2658\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5875,\n\t\t\t\t\t4439\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t6016,\n\t\t\t\t\t4437\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t108,\n\t\t\t\t\t44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t-27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t-77\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-113,\n\t\t\t\t\t-108\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t-122\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-85,\n\t\t\t\t\t-12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-98\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-100\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-120,\n\t\t\t\t\t-45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-98,\n\t\t\t\t\t-90\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t-65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-105,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-121,\n\t\t\t\t\t50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-94,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5399,\n\t\t\t\t\t3441\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5518,\n\t\t\t\t\t3624\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5464,\n\t\t\t\t\t4189\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t137\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5696,\n\t\t\t\t\t4543\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4719,\n\t\t\t\t\t2231\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t-70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-107\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-126,\n\t\t\t\t\t-137\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-142\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t-81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-113,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t-83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t-47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t-151\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-118\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-103,\n\t\t\t\t\t-20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-127,\n\t\t\t\t\t141\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t174\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-108,\n\t\t\t\t\t12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t127\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3487,\n\t\t\t\t\t1716\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t106,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3631,\n\t\t\t\t\t1907\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t111\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3696,\n\t\t\t\t\t2018\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t116,\n\t\t\t\t\t-73\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4092,\n\t\t\t\t\t1998\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4142,\n\t\t\t\t\t2017\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4145,\n\t\t\t\t\t2059\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4184,\n\t\t\t\t\t2127\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t98\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4152,\n\t\t\t\t\t2225\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4401,\n\t\t\t\t\t2238\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t103,\n\t\t\t\t\t108\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4608,\n\t\t\t\t\t2370\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3460,\n\t\t\t\t\t4067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t-5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3555,\n\t\t\t\t\t3987\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3642,\n\t\t\t\t\t3990\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3523,\n\t\t\t\t\t3669\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t-46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3422,\n\t\t\t\t\t3656\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t92\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-100,\n\t\t\t\t\t23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t-31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t142\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3217,\n\t\t\t\t\t3888\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3245,\n\t\t\t\t\t3893\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3245,\n\t\t\t\t\t3935\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3229,\n\t\t\t\t\t4012\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3245,\n\t\t\t\t\t4037\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3282,\n\t\t\t\t\t4068\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3282,\n\t\t\t\t\t4088\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t99,\n\t\t\t\t\t62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3441,\n\t\t\t\t\t4110\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1220,\n\t\t\t\t\t4241\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1333,\n\t\t\t\t\t4269\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1378,\n\t\t\t\t\t4240\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1397,\n\t\t\t\t\t4204\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1467,\n\t\t\t\t\t4189\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t108,\n\t\t\t\t\t-17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t121,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1702,\n\t\t\t\t\t4085\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1732,\n\t\t\t\t\t4063\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1825,\n\t\t\t\t\t4114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1805,\n\t\t\t\t\t3843\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1810,\n\t\t\t\t\t3791\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1749,\n\t\t\t\t\t3778\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1746,\n\t\t\t\t\t3677\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-92,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1654,\n\t\t\t\t\t3611\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1668,\n\t\t\t\t\t3586\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1606,\n\t\t\t\t\t3542\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1597,\n\t\t\t\t\t3524\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1601,\n\t\t\t\t\t3492\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1465,\n\t\t\t\t\t3543\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1429,\n\t\t\t\t\t3570\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1452,\n\t\t\t\t\t3466\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-107,\n\t\t\t\t\t-95\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t-30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1400,\n\t\t\t\t\t3276\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1405,\n\t\t\t\t\t3226\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-94\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1347,\n\t\t\t\t\t3098\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1339,\n\t\t\t\t\t3082\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-136,\n\t\t\t\t\t-9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1164,\n\t\t\t\t\t3111\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t109\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1137,\n\t\t\t\t\t3220\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t949,\n\t\t\t\t\t4131\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1082,\n\t\t\t\t\t4305\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1119,\n\t\t\t\t\t4311\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1129,\n\t\t\t\t\t4320\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t91,\n\t\t\t\t\t-79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2278,\n\t\t\t\t\t2848\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-108,\n\t\t\t\t\t-32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t-123\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2038,\n\t\t\t\t\t2657\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2009,\n\t\t\t\t\t2648\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2074,\n\t\t\t\t\t2612\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2065,\n\t\t\t\t\t2539\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-112,\n\t\t\t\t\t-64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1922,\n\t\t\t\t\t2420\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1896,\n\t\t\t\t\t2363\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1975,\n\t\t\t\t\t2355\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1982,\n\t\t\t\t\t2269\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-117\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1964,\n\t\t\t\t\t2152\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1913,\n\t\t\t\t\t2144\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1875,\n\t\t\t\t\t2144\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1802,\n\t\t\t\t\t2123\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1804,\n\t\t\t\t\t2297\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1638,\n\t\t\t\t\t2953\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1661,\n\t\t\t\t\t2964\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1684,\n\t\t\t\t\t2960\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1717,\n\t\t\t\t\t2987\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1792,\n\t\t\t\t\t3018\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1848,\n\t\t\t\t\t2976\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t-27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t100,\n\t\t\t\t\t52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t109,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2188,\n\t\t\t\t\t3031\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2199,\n\t\t\t\t\t3038\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t-38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-90\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1748,\n\t\t\t\t\t1236\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1798,\n\t\t\t\t\t1192\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-94\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1793,\n\t\t\t\t\t1098\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1725,\n\t\t\t\t\t1033\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t-27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1828,\n\t\t\t\t\t776\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1790,\n\t\t\t\t\t727\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1867,\n\t\t\t\t\t679\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1855,\n\t\t\t\t\t643\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-96\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-99\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t-46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-83,\n\t\t\t\t\t56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t-20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-98\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-43\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t-45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t-61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-83,\n\t\t\t\t\t117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-106,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t-19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-134,\n\t\t\t\t\t73\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-131\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-116,\n\t\t\t\t\t119\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t85\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t773,\n\t\t\t\t\t463\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t906,\n\t\t\t\t\t753\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t956,\n\t\t\t\t\t772\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t961,\n\t\t\t\t\t822\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t122,\n\t\t\t\t\t-56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t104,\n\t\t\t\t\t8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t108\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1250,\n\t\t\t\t\t1055\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1258,\n\t\t\t\t\t1082\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t86,\n\t\t\t\t\t-51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t102\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1452,\n\t\t\t\t\t1201\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1441,\n\t\t\t\t\t1214\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t-21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t-82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t122\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1731,\n\t\t\t\t\t1317\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1339,\n\t\t\t\t\t3082\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1341,\n\t\t\t\t\t3061\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1353,\n\t\t\t\t\t3064\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1376,\n\t\t\t\t\t3048\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1408,\n\t\t\t\t\t3014\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1463,\n\t\t\t\t\t2917\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1410,\n\t\t\t\t\t2871\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1315,\n\t\t\t\t\t2835\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1314,\n\t\t\t\t\t2784\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-154,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1097,\n\t\t\t\t\t2796\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1138,\n\t\t\t\t\t3097\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t573,\n\t\t\t\t\t1769\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-54\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t-117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t-197\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-72\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t-175\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t718,\n\t\t\t\t\t991\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t745,\n\t\t\t\t\t956\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t-43\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t914,\n\t\t\t\t\t816\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t933,\n\t\t\t\t\t781\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t956,\n\t\t\t\t\t772\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t773,\n\t\t\t\t\t463\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t-30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t108\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t102\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-138,\n\t\t\t\t\t-5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t43\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t148\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t80\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t94\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t97,\n\t\t\t\t\t1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t111\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t412,\n\t\t\t\t\t1673\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t-37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t112\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t546,\n\t\t\t\t\t1770\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t559,\n\t\t\t\t\t1787\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t636,\n\t\t\t\t\t699\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t-121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t112,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1627,\n\t\t\t\t\t2356\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t86,\n\t\t\t\t\t53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1713,\n\t\t\t\t\t2409\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-107\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1728,\n\t\t\t\t\t2302\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-79\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1724,\n\t\t\t\t\t2179\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-93,\n\t\t\t\t\t-72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1631,\n\t\t\t\t\t2107\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1607,\n\t\t\t\t\t2134\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1582,\n\t\t\t\t\t2121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1546,\n\t\t\t\t\t2126\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t-149\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-127,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-114,\n\t\t\t\t\t-11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1084,\n\t\t\t\t\t2072\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1064,\n\t\t\t\t\t2033\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1059,\n\t\t\t\t\t2097\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1028,\n\t\t\t\t\t2113\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1015,\n\t\t\t\t\t2108\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1012,\n\t\t\t\t\t2197\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1047,\n\t\t\t\t\t2260\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1050,\n\t\t\t\t\t2325\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1138,\n\t\t\t\t\t2593\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1269,\n\t\t\t\t\t2698\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t73\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1315,\n\t\t\t\t\t2835\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1410,\n\t\t\t\t\t2871\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1463,\n\t\t\t\t\t2917\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t-88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2818,\n\t\t\t\t\t4082\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t122,\n\t\t\t\t\t-148\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t127,\n\t\t\t\t\t79\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3117,\n\t\t\t\t\t4018\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3144,\n\t\t\t\t\t4001\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3213,\n\t\t\t\t\t4017\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3245,\n\t\t\t\t\t3935\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3245,\n\t\t\t\t\t3893\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3422,\n\t\t\t\t\t3656\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3444,\n\t\t\t\t\t3624\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3484,\n\t\t\t\t\t3352\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3270,\n\t\t\t\t\t3312\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-129,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3105,\n\t\t\t\t\t3257\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3074,\n\t\t\t\t\t3156\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3102,\n\t\t\t\t\t3528\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2725,\n\t\t\t\t\t3648\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2721,\n\t\t\t\t\t3685\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2792,\n\t\t\t\t\t3758\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2775,\n\t\t\t\t\t3845\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2709,\n\t\t\t\t\t3894\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2759,\n\t\t\t\t\t3905\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2727,\n\t\t\t\t\t4007\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2775,\n\t\t\t\t\t4052\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2146,\n\t\t\t\t\t2577\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2177,\n\t\t\t\t\t2488\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2197,\n\t\t\t\t\t2449\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2222,\n\t\t\t\t\t2390\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2220,\n\t\t\t\t\t2370\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2263,\n\t\t\t\t\t2388\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2276,\n\t\t\t\t\t2383\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2290,\n\t\t\t\t\t2306\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2237,\n\t\t\t\t\t2281\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-92,\n\t\t\t\t\t-38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1989,\n\t\t\t\t\t2292\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1896,\n\t\t\t\t\t2363\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2065,\n\t\t\t\t\t2539\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2445,\n\t\t\t\t\t2362\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2468,\n\t\t\t\t\t2175\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2469,\n\t\t\t\t\t1971\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-77\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2667,\n\t\t\t\t\t1813\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2678,\n\t\t\t\t\t1784\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2680,\n\t\t\t\t\t1768\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2624,\n\t\t\t\t\t1742\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2617,\n\t\t\t\t\t1707\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2555,\n\t\t\t\t\t1690\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2468,\n\t\t\t\t\t1673\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t-76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2310,\n\t\t\t\t\t1566\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2252,\n\t\t\t\t\t1567\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t184\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2092,\n\t\t\t\t\t1972\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2121,\n\t\t\t\t\t2012\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2114,\n\t\t\t\t\t2217\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t-2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-43\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1966,\n\t\t\t\t\t2201\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1982,\n\t\t\t\t\t2269\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2237,\n\t\t\t\t\t2281\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2276,\n\t\t\t\t\t2383\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2309,\n\t\t\t\t\t2389\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2371,\n\t\t\t\t\t2403\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4115,\n\t\t\t\t\t2298\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4171,\n\t\t\t\t\t2238\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4184,\n\t\t\t\t\t2127\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4142,\n\t\t\t\t\t2017\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3696,\n\t\t\t\t\t2018\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-108\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3487,\n\t\t\t\t\t1716\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-112,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3228,\n\t\t\t\t\t2135\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3374,\n\t\t\t\t\t2165\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3397,\n\t\t\t\t\t2154\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3419,\n\t\t\t\t\t2356\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3652,\n\t\t\t\t\t2616\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3782,\n\t\t\t\t\t2654\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3798,\n\t\t\t\t\t2629\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3099,\n\t\t\t\t\t4987\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3193,\n\t\t\t\t\t4953\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3256,\n\t\t\t\t\t4950\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-103\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3336,\n\t\t\t\t\t4669\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3339,\n\t\t\t\t\t4622\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-96,\n\t\t\t\t\t30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3074,\n\t\t\t\t\t4438\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3044,\n\t\t\t\t\t4399\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2948,\n\t\t\t\t\t4509\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2928,\n\t\t\t\t\t4567\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t124\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2884,\n\t\t\t\t\t4668\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2829,\n\t\t\t\t\t4690\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2888,\n\t\t\t\t\t4855\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2900,\n\t\t\t\t\t4857\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t94\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t118,\n\t\t\t\t\t81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3072,\n\t\t\t\t\t5015\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3394,\n\t\t\t\t\t5159\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t117,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3511,\n\t\t\t\t\t5110\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-93\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t114,\n\t\t\t\t\t-47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t129,\n\t\t\t\t\t54\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-136\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3883,\n\t\t\t\t\t4888\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t-59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-102\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t107,\n\t\t\t\t\t-106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-127\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t-57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4315,\n\t\t\t\t\t4054\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4271,\n\t\t\t\t\t3911\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4146,\n\t\t\t\t\t3869\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3859,\n\t\t\t\t\t4012\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3707,\n\t\t\t\t\t4038\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3680,\n\t\t\t\t\t4003\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3642,\n\t\t\t\t\t3990\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3460,\n\t\t\t\t\t4067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3282,\n\t\t\t\t\t4088\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3269,\n\t\t\t\t\t4128\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-121,\n\t\t\t\t\t218\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3098,\n\t\t\t\t\t4367\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3339,\n\t\t\t\t\t4622\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3256,\n\t\t\t\t\t4950\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3266,\n\t\t\t\t\t5005\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3276,\n\t\t\t\t\t5072\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3310,\n\t\t\t\t\t5140\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1939,\n\t\t\t\t\t1965\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2102,\n\t\t\t\t\t1988\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2252,\n\t\t\t\t\t1567\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-109,\n\t\t\t\t\t-121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2093,\n\t\t\t\t\t1435\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-94,\n\t\t\t\t\t-41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1954,\n\t\t\t\t\t1478\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1949,\n\t\t\t\t\t1468\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-88,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t104\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t139\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1583,\n\t\t\t\t\t2103\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1607,\n\t\t\t\t\t2134\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1724,\n\t\t\t\t\t2179\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t200,\n\t\t\t\t\t-157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1546,\n\t\t\t\t\t2126\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1949,\n\t\t\t\t\t1468\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2005,\n\t\t\t\t\t1417\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2036,\n\t\t\t\t\t1351\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t-7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-88,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1777,\n\t\t\t\t\t1337\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1742,\n\t\t\t\t\t1305\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1441,\n\t\t\t\t\t1214\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1414,\n\t\t\t\t\t1273\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t138\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-169,\n\t\t\t\t\t-15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1217,\n\t\t\t\t\t1504\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1189,\n\t\t\t\t\t1497\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t80\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t93\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t96\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1046,\n\t\t\t\t\t2013\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2153,\n\t\t\t\t\t5438\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t-97\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t117,\n\t\t\t\t\t-65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-96\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2455,\n\t\t\t\t\t5026\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2416,\n\t\t\t\t\t4982\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-98,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2318,\n\t\t\t\t\t4996\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-98,\n\t\t\t\t\t-103\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2183,\n\t\t\t\t\t4889\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2104,\n\t\t\t\t\t4890\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2084,\n\t\t\t\t\t4890\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2119,\n\t\t\t\t\t4806\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-142\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2119,\n\t\t\t\t\t4480\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2203,\n\t\t\t\t\t4364\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t83,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1964,\n\t\t\t\t\t4274\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t-85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1836,\n\t\t\t\t\t4206\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-92\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1732,\n\t\t\t\t\t4063\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1467,\n\t\t\t\t\t4189\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1378,\n\t\t\t\t\t4240\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1220,\n\t\t\t\t\t4241\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-91,\n\t\t\t\t\t79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1119,\n\t\t\t\t\t4311\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-91,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t970,\n\t\t\t\t\t4327\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t106,\n\t\t\t\t\t-25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t128,\n\t\t\t\t\t90\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t158,\n\t\t\t\t\t48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t43\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t-58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-198,\n\t\t\t\t\t135\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t100,\n\t\t\t\t\t46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t97\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t168,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t104\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t129\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-126\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2504,\n\t\t\t\t\t5018\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t213,\n\t\t\t\t\t-29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2738,\n\t\t\t\t\t4883\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2784,\n\t\t\t\t\t4875\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2822,\n\t\t\t\t\t4841\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2829,\n\t\t\t\t\t4690\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2928,\n\t\t\t\t\t4567\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3044,\n\t\t\t\t\t4399\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3269,\n\t\t\t\t\t4128\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3245,\n\t\t\t\t\t4037\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3144,\n\t\t\t\t\t4001\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2818,\n\t\t\t\t\t4082\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2727,\n\t\t\t\t\t4007\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2709,\n\t\t\t\t\t3894\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2592,\n\t\t\t\t\t3950\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2529,\n\t\t\t\t\t3988\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2317,\n\t\t\t\t\t4335\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-114,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2203,\n\t\t\t\t\t4364\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2119,\n\t\t\t\t\t4806\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2104,\n\t\t\t\t\t4890\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2318,\n\t\t\t\t\t4996\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t98,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2455,\n\t\t\t\t\t5026\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2464,\n\t\t\t\t\t5022\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3394,\n\t\t\t\t\t5159\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3276,\n\t\t\t\t\t5072\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3266,\n\t\t\t\t\t5005\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3099,\n\t\t\t\t\t4987\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2900,\n\t\t\t\t\t4857\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2784,\n\t\t\t\t\t4875\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2504,\n\t\t\t\t\t5018\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2153,\n\t\t\t\t\t5438\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t118\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t262,\n\t\t\t\t\t-6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t163,\n\t\t\t\t\t107\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t124\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t150,\n\t\t\t\t\t-62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-154\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t164,\n\t\t\t\t\t-87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t-7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t86,\n\t\t\t\t\t34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t-46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t-92\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-211\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t120,\n\t\t\t\t\t-50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-130\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-252,\n\t\t\t\t\t-83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2169,\n\t\t\t\t\t3670\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2228,\n\t\t\t\t\t3607\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2201,\n\t\t\t\t\t3531\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-111\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2226,\n\t\t\t\t\t3420\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2167,\n\t\t\t\t\t3340\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2108,\n\t\t\t\t\t3351\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2072,\n\t\t\t\t\t3427\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2021,\n\t\t\t\t\t3779\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2501,\n\t\t\t\t\t3489\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2426,\n\t\t\t\t\t3462\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2349,\n\t\t\t\t\t3459\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2323,\n\t\t\t\t\t3422\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2251,\n\t\t\t\t\t3404\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2201,\n\t\t\t\t\t3531\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t181,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2409,\n\t\t\t\t\t3609\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2121,\n\t\t\t\t\t2012\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1939,\n\t\t\t\t\t1965\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-117,\n\t\t\t\t\t95\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1802,\n\t\t\t\t\t2123\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1913,\n\t\t\t\t\t2144\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1964,\n\t\t\t\t\t2152\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1966,\n\t\t\t\t\t2201\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3122,\n\t\t\t\t\t1442\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-108\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-110,\n\t\t\t\t\t-21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-128,\n\t\t\t\t\t-82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-100,\n\t\t\t\t\t-25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-201\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-136,\n\t\t\t\t\t-40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2280,\n\t\t\t\t\t1067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2352,\n\t\t\t\t\t1164\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2333,\n\t\t\t\t\t1195\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2259,\n\t\t\t\t\t1214\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2204,\n\t\t\t\t\t1274\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2171,\n\t\t\t\t\t1242\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2049,\n\t\t\t\t\t945\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2302,\n\t\t\t\t\t917\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-132,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t54\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-90,\n\t\t\t\t\t-115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1855,\n\t\t\t\t\t643\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1790,\n\t\t\t\t\t727\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1725,\n\t\t\t\t\t1033\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1798,\n\t\t\t\t\t1192\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1748,\n\t\t\t\t\t1236\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1742,\n\t\t\t\t\t1305\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2036,\n\t\t\t\t\t1351\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2005,\n\t\t\t\t\t1417\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2093,\n\t\t\t\t\t1435\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t180,\n\t\t\t\t\t126\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2468,\n\t\t\t\t\t1673\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2555,\n\t\t\t\t\t1690\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2624,\n\t\t\t\t\t1742\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2678,\n\t\t\t\t\t1784\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2440,\n\t\t\t\t\t2848\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-73\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t-122\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2507,\n\t\t\t\t\t2653\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2536,\n\t\t\t\t\t2617\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2513,\n\t\t\t\t\t2547\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2494,\n\t\t\t\t\t2547\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2452,\n\t\t\t\t\t2544\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2438,\n\t\t\t\t\t2574\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2416,\n\t\t\t\t\t2591\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2395,\n\t\t\t\t\t2592\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2342,\n\t\t\t\t\t2553\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2325,\n\t\t\t\t\t2565\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2275,\n\t\t\t\t\t2550\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t-60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2253,\n\t\t\t\t\t2443\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2177,\n\t\t\t\t\t2488\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2065,\n\t\t\t\t\t2539\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2009,\n\t\t\t\t\t2648\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2278,\n\t\t\t\t\t2848\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2302,\n\t\t\t\t\t2808\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2379,\n\t\t\t\t\t2836\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4736,\n\t\t\t\t\t5171\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4751,\n\t\t\t\t\t5148\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4864,\n\t\t\t\t\t5033\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4883,\n\t\t\t\t\t4930\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-105\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4855,\n\t\t\t\t\t4672\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-119,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4736,\n\t\t\t\t\t4620\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-93,\n\t\t\t\t\t-13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-105,\n\t\t\t\t\t1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4428,\n\t\t\t\t\t4760\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4467,\n\t\t\t\t\t4767\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t130\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t73\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t92,\n\t\t\t\t\t137\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4584,\n\t\t\t\t\t5121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4601,\n\t\t\t\t\t5159\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4635,\n\t\t\t\t\t5170\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t101,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2438,\n\t\t\t\t\t2574\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2494,\n\t\t\t\t\t2547\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2510,\n\t\t\t\t\t2505\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2526,\n\t\t\t\t\t2487\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2507,\n\t\t\t\t\t2374\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2445,\n\t\t\t\t\t2362\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2309,\n\t\t\t\t\t2389\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2263,\n\t\t\t\t\t2388\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2222,\n\t\t\t\t\t2390\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2275,\n\t\t\t\t\t2550\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2342,\n\t\t\t\t\t2553\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2395,\n\t\t\t\t\t2592\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t688,\n\t\t\t\t\t2460\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t958,\n\t\t\t\t\t2185\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1012,\n\t\t\t\t\t2197\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1028,\n\t\t\t\t\t2113\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1059,\n\t\t\t\t\t2097\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1018,\n\t\t\t\t\t2069\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-103,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t855,\n\t\t\t\t\t1982\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-110,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t745,\n\t\t\t\t\t1980\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-185,\n\t\t\t\t\t-142\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t573,\n\t\t\t\t\t1796\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t412,\n\t\t\t\t\t1673\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-164,\n\t\t\t\t\t69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t142\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-126,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-102,\n\t\t\t\t\t-39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t79\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t85\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t-92\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t127,\n\t\t\t\t\t163\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t96,\n\t\t\t\t\t111\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t126,\n\t\t\t\t\t40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t72\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t658,\n\t\t\t\t\t2488\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1018,\n\t\t\t\t\t2069\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1064,\n\t\t\t\t\t2033\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1189,\n\t\t\t\t\t1497\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1414,\n\t\t\t\t\t1273\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1258,\n\t\t\t\t\t1082\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t961,\n\t\t\t\t\t822\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t933,\n\t\t\t\t\t781\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t745,\n\t\t\t\t\t956\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t573,\n\t\t\t\t\t1769\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t559,\n\t\t\t\t\t1787\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t745,\n\t\t\t\t\t1980\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t110,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1862,\n\t\t\t\t\t3577\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1948,\n\t\t\t\t\t3528\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1972,\n\t\t\t\t\t3484\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1962,\n\t\t\t\t\t3420\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-102,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1860,\n\t\t\t\t\t3392\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t96\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-92,\n\t\t\t\t\t127\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1688,\n\t\t\t\t\t3627\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1749,\n\t\t\t\t\t3778\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t111,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1860,\n\t\t\t\t\t3817\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1860,\n\t\t\t\t\t3392\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1842,\n\t\t\t\t\t3385\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1796,\n\t\t\t\t\t3328\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1754,\n\t\t\t\t\t3272\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1677,\n\t\t\t\t\t3245\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1645,\n\t\t\t\t\t3266\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1589,\n\t\t\t\t\t3461\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1606,\n\t\t\t\t\t3542\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1654,\n\t\t\t\t\t3611\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1601,\n\t\t\t\t\t3492\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1645,\n\t\t\t\t\t3266\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1638,\n\t\t\t\t\t3240\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-185\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1670,\n\t\t\t\t\t3010\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1661,\n\t\t\t\t\t2964\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1604,\n\t\t\t\t\t2941\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1479,\n\t\t\t\t\t2907\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-99,\n\t\t\t\t\t47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1376,\n\t\t\t\t\t3048\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1341,\n\t\t\t\t\t3061\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1405,\n\t\t\t\t\t3226\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1452,\n\t\t\t\t\t3466\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1429,\n\t\t\t\t\t3570\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2108,\n\t\t\t\t\t3351\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2184,\n\t\t\t\t\t3312\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2200,\n\t\t\t\t\t3203\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2212,\n\t\t\t\t\t3141\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2192,\n\t\t\t\t\t3085\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1848,\n\t\t\t\t\t2976\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1835,\n\t\t\t\t\t3028\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t151\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1837,\n\t\t\t\t\t3285\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1842,\n\t\t\t\t\t3385\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t120,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1972,\n\t\t\t\t\t3484\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1980,\n\t\t\t\t\t3493\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t92,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4614,\n\t\t\t\t\t5631\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t145,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t111,\n\t\t\t\t\t22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t88,\n\t\t\t\t\t-6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t-47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5108,\n\t\t\t\t\t5351\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5170,\n\t\t\t\t\t5348\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5274,\n\t\t\t\t\t5422\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5301,\n\t\t\t\t\t5418\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5331,\n\t\t\t\t\t5421\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5359,\n\t\t\t\t\t5421\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5387,\n\t\t\t\t\t5395\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5341,\n\t\t\t\t\t5230\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5325,\n\t\t\t\t\t5183\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4931,\n\t\t\t\t\t5092\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4751,\n\t\t\t\t\t5148\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4635,\n\t\t\t\t\t5170\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4601,\n\t\t\t\t\t5159\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4582,\n\t\t\t\t\t5150\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4538,\n\t\t\t\t\t5167\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t148,\n\t\t\t\t\t93\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-102,\n\t\t\t\t\t32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5485,\n\t\t\t\t\t5409\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-98,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5359,\n\t\t\t\t\t5421\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5301,\n\t\t\t\t\t5418\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5170,\n\t\t\t\t\t5348\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4614,\n\t\t\t\t\t5631\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t108\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t129\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-82,\n\t\t\t\t\t64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-140,\n\t\t\t\t\t62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t111,\n\t\t\t\t\t-36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t124,\n\t\t\t\t\t10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t90\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t88,\n\t\t\t\t\t67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t-46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t169,\n\t\t\t\t\t95\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t-66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-232\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t121,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t108,\n\t\t\t\t\t162\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t118\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t83,\n\t\t\t\t\t-8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t-55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-129\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-90\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t-48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t102,\n\t\t\t\t\t-38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t-60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-79\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-105,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4582,\n\t\t\t\t\t5150\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4467,\n\t\t\t\t\t4767\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4736,\n\t\t\t\t\t4620\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t100,\n\t\t\t\t\t32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5021,\n\t\t\t\t\t4540\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4969,\n\t\t\t\t\t4438\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4577,\n\t\t\t\t\t4247\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-90,\n\t\t\t\t\t-94\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4462,\n\t\t\t\t\t4036\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4331,\n\t\t\t\t\t4048\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3883,\n\t\t\t\t\t4888\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t140\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t92,\n\t\t\t\t\t51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t-11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t103,\n\t\t\t\t\t103\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t101,\n\t\t\t\t\t-18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t-47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1835,\n\t\t\t\t\t3028\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1717,\n\t\t\t\t\t2987\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1684,\n\t\t\t\t\t2960\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1638,\n\t\t\t\t\t3240\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1754,\n\t\t\t\t\t3272\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t83,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2731,\n\t\t\t\t\t3198\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2805,\n\t\t\t\t\t3149\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2785,\n\t\t\t\t\t3128\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2752,\n\t\t\t\t\t3074\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2679,\n\t\t\t\t\t2969\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2672,\n\t\t\t\t\t2928\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2728,\n\t\t\t\t\t2900\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2834,\n\t\t\t\t\t2751\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2881,\n\t\t\t\t\t2728\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2896,\n\t\t\t\t\t2707\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2783,\n\t\t\t\t\t2606\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2742,\n\t\t\t\t\t2564\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2714,\n\t\t\t\t\t2579\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2696,\n\t\t\t\t\t2580\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2695,\n\t\t\t\t\t2630\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2671,\n\t\t\t\t\t2654\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2645,\n\t\t\t\t\t2655\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2597,\n\t\t\t\t\t2637\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2524,\n\t\t\t\t\t2631\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2440,\n\t\t\t\t\t2848\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2379,\n\t\t\t\t\t2836\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2199,\n\t\t\t\t\t3038\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2212,\n\t\t\t\t\t3141\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2386,\n\t\t\t\t\t3134\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2478,\n\t\t\t\t\t3220\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2587,\n\t\t\t\t\t3265\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t82\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"transform\": {\n\t\t\t\"scale\": [\n\t\t\t\t0.0005659688265839912,\n\t\t\t\t0.0003421567106818085\n\t\t\t],\n\t\t\t\"translate\": [\n\t\t\t\t5.878025523533184,\n\t\t\t\t50.33856106917783\n\t\t\t]\n\t\t},\n\t\t\"objects\": {\n\t\t\t\"nrw_landkreise_simplify200\": {\n\t\t\t\t\"type\": \"GeometryCollection\",\n\t\t\t\t\"geometries\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t2,\n\t\t\t\t\t\t\t\t3,\n\t\t\t\t\t\t\t\t4,\n\t\t\t\t\t\t\t\t5,\n\t\t\t\t\t\t\t\t6,\n\t\t\t\t\t\t\t\t7,\n\t\t\t\t\t\t\t\t8,\n\t\t\t\t\t\t\t\t9,\n\t\t\t\t\t\t\t\t10,\n\t\t\t\t\t\t\t\t11,\n\t\t\t\t\t\t\t\t12,\n\t\t\t\t\t\t\t\t13,\n\t\t\t\t\t\t\t\t14,\n\t\t\t\t\t\t\t\t15,\n\t\t\t\t\t\t\t\t16,\n\t\t\t\t\t\t\t\t17,\n\t\t\t\t\t\t\t\t18,\n\t\t\t\t\t\t\t\t19,\n\t\t\t\t\t\t\t\t20,\n\t\t\t\t\t\t\t\t21,\n\t\t\t\t\t\t\t\t22,\n\t\t\t\t\t\t\t\t23,\n\t\t\t\t\t\t\t\t24,\n\t\t\t\t\t\t\t\t25,\n\t\t\t\t\t\t\t\t26,\n\t\t\t\t\t\t\t\t27,\n\t\t\t\t\t\t\t\t28,\n\t\t\t\t\t\t\t\t29,\n\t\t\t\t\t\t\t\t30,\n\t\t\t\t\t\t\t\t31,\n\t\t\t\t\t\t\t\t32,\n\t\t\t\t\t\t\t\t33,\n\t\t\t\t\t\t\t\t34\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05562\",\n\t\t\t\t\t\t\t\"GEN\": \"Recklinghausen\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t35,\n\t\t\t\t\t\t\t\t36,\n\t\t\t\t\t\t\t\t37,\n\t\t\t\t\t\t\t\t38,\n\t\t\t\t\t\t\t\t39,\n\t\t\t\t\t\t\t\t40,\n\t\t\t\t\t\t\t\t41,\n\t\t\t\t\t\t\t\t42,\n\t\t\t\t\t\t\t\t43,\n\t\t\t\t\t\t\t\t44,\n\t\t\t\t\t\t\t\t45,\n\t\t\t\t\t\t\t\t46,\n\t\t\t\t\t\t\t\t47,\n\t\t\t\t\t\t\t\t48,\n\t\t\t\t\t\t\t\t49,\n\t\t\t\t\t\t\t\t50,\n\t\t\t\t\t\t\t\t51,\n\t\t\t\t\t\t\t\t52,\n\t\t\t\t\t\t\t\t53,\n\t\t\t\t\t\t\t\t54,\n\t\t\t\t\t\t\t\t55,\n\t\t\t\t\t\t\t\t56,\n\t\t\t\t\t\t\t\t57,\n\t\t\t\t\t\t\t\t58,\n\t\t\t\t\t\t\t\t59\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05774\",\n\t\t\t\t\t\t\t\"GEN\": \"Paderborn\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t60,\n\t\t\t\t\t\t\t\t61,\n\t\t\t\t\t\t\t\t62,\n\t\t\t\t\t\t\t\t63,\n\t\t\t\t\t\t\t\t64,\n\t\t\t\t\t\t\t\t65,\n\t\t\t\t\t\t\t\t66,\n\t\t\t\t\t\t\t\t67,\n\t\t\t\t\t\t\t\t68,\n\t\t\t\t\t\t\t\t69,\n\t\t\t\t\t\t\t\t70,\n\t\t\t\t\t\t\t\t71,\n\t\t\t\t\t\t\t\t72\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05314\",\n\t\t\t\t\t\t\t\"GEN\": \"Bonn\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t73,\n\t\t\t\t\t\t\t\t74,\n\t\t\t\t\t\t\t\t75,\n\t\t\t\t\t\t\t\t76,\n\t\t\t\t\t\t\t\t77,\n\t\t\t\t\t\t\t\t78,\n\t\t\t\t\t\t\t\t79,\n\t\t\t\t\t\t\t\t80,\n\t\t\t\t\t\t\t\t81,\n\t\t\t\t\t\t\t\t82,\n\t\t\t\t\t\t\t\t83,\n\t\t\t\t\t\t\t\t84,\n\t\t\t\t\t\t\t\t85,\n\t\t\t\t\t\t\t\t86,\n\t\t\t\t\t\t\t\t87,\n\t\t\t\t\t\t\t\t88,\n\t\t\t\t\t\t\t\t89,\n\t\t\t\t\t\t\t\t90,\n\t\t\t\t\t\t\t\t91,\n\t\t\t\t\t\t\t\t92,\n\t\t\t\t\t\t\t\t93,\n\t\t\t\t\t\t\t\t94,\n\t\t\t\t\t\t\t\t95,\n\t\t\t\t\t\t\t\t96,\n\t\t\t\t\t\t\t\t97,\n\t\t\t\t\t\t\t\t98,\n\t\t\t\t\t\t\t\t99,\n\t\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t\t101,\n\t\t\t\t\t\t\t\t102,\n\t\t\t\t\t\t\t\t103,\n\t\t\t\t\t\t\t\t104,\n\t\t\t\t\t\t\t\t105,\n\t\t\t\t\t\t\t\t106\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05374\",\n\t\t\t\t\t\t\t\"GEN\": \"Oberbergischer Kreis\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-50,\n\t\t\t\t\t\t\t\t107,\n\t\t\t\t\t\t\t\t-48,\n\t\t\t\t\t\t\t\t108,\n\t\t\t\t\t\t\t\t109,\n\t\t\t\t\t\t\t\t110,\n\t\t\t\t\t\t\t\t111,\n\t\t\t\t\t\t\t\t112,\n\t\t\t\t\t\t\t\t113,\n\t\t\t\t\t\t\t\t114,\n\t\t\t\t\t\t\t\t115,\n\t\t\t\t\t\t\t\t116,\n\t\t\t\t\t\t\t\t117,\n\t\t\t\t\t\t\t\t118,\n\t\t\t\t\t\t\t\t119,\n\t\t\t\t\t\t\t\t120,\n\t\t\t\t\t\t\t\t121,\n\t\t\t\t\t\t\t\t122,\n\t\t\t\t\t\t\t\t123,\n\t\t\t\t\t\t\t\t124,\n\t\t\t\t\t\t\t\t125,\n\t\t\t\t\t\t\t\t126,\n\t\t\t\t\t\t\t\t127,\n\t\t\t\t\t\t\t\t128,\n\t\t\t\t\t\t\t\t129,\n\t\t\t\t\t\t\t\t130,\n\t\t\t\t\t\t\t\t131,\n\t\t\t\t\t\t\t\t132,\n\t\t\t\t\t\t\t\t133,\n\t\t\t\t\t\t\t\t134,\n\t\t\t\t\t\t\t\t-54,\n\t\t\t\t\t\t\t\t135,\n\t\t\t\t\t\t\t\t-52,\n\t\t\t\t\t\t\t\t136\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05958\",\n\t\t\t\t\t\t\t\"GEN\": \"Hochsauerlandkreis\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t137,\n\t\t\t\t\t\t\t\t138,\n\t\t\t\t\t\t\t\t139,\n\t\t\t\t\t\t\t\t140,\n\t\t\t\t\t\t\t\t141,\n\t\t\t\t\t\t\t\t142,\n\t\t\t\t\t\t\t\t143,\n\t\t\t\t\t\t\t\t144,\n\t\t\t\t\t\t\t\t145,\n\t\t\t\t\t\t\t\t146,\n\t\t\t\t\t\t\t\t-55,\n\t\t\t\t\t\t\t\t-135,\n\t\t\t\t\t\t\t\t147,\n\t\t\t\t\t\t\t\t-133,\n\t\t\t\t\t\t\t\t148,\n\t\t\t\t\t\t\t\t149,\n\t\t\t\t\t\t\t\t150,\n\t\t\t\t\t\t\t\t151,\n\t\t\t\t\t\t\t\t152,\n\t\t\t\t\t\t\t\t153,\n\t\t\t\t\t\t\t\t154,\n\t\t\t\t\t\t\t\t155,\n\t\t\t\t\t\t\t\t156,\n\t\t\t\t\t\t\t\t157\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05974\",\n\t\t\t\t\t\t\t\"GEN\": \"Soest\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t158,\n\t\t\t\t\t\t\t\t159,\n\t\t\t\t\t\t\t\t160,\n\t\t\t\t\t\t\t\t161,\n\t\t\t\t\t\t\t\t162,\n\t\t\t\t\t\t\t\t163,\n\t\t\t\t\t\t\t\t164,\n\t\t\t\t\t\t\t\t165,\n\t\t\t\t\t\t\t\t166,\n\t\t\t\t\t\t\t\t167,\n\t\t\t\t\t\t\t\t168,\n\t\t\t\t\t\t\t\t169,\n\t\t\t\t\t\t\t\t170,\n\t\t\t\t\t\t\t\t171,\n\t\t\t\t\t\t\t\t172,\n\t\t\t\t\t\t\t\t173,\n\t\t\t\t\t\t\t\t174,\n\t\t\t\t\t\t\t\t175\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05914\",\n\t\t\t\t\t\t\t\"GEN\": \"Hagen\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t176,\n\t\t\t\t\t\t\t\t-150,\n\t\t\t\t\t\t\t\t177,\n\t\t\t\t\t\t\t\t-131,\n\t\t\t\t\t\t\t\t178,\n\t\t\t\t\t\t\t\t-129,\n\t\t\t\t\t\t\t\t179,\n\t\t\t\t\t\t\t\t-127,\n\t\t\t\t\t\t\t\t180,\n\t\t\t\t\t\t\t\t-125,\n\t\t\t\t\t\t\t\t181,\n\t\t\t\t\t\t\t\t182,\n\t\t\t\t\t\t\t\t183,\n\t\t\t\t\t\t\t\t184,\n\t\t\t\t\t\t\t\t185,\n\t\t\t\t\t\t\t\t186,\n\t\t\t\t\t\t\t\t187,\n\t\t\t\t\t\t\t\t188,\n\t\t\t\t\t\t\t\t-86,\n\t\t\t\t\t\t\t\t189,\n\t\t\t\t\t\t\t\t-84,\n\t\t\t\t\t\t\t\t190,\n\t\t\t\t\t\t\t\t191,\n\t\t\t\t\t\t\t\t192,\n\t\t\t\t\t\t\t\t-162,\n\t\t\t\t\t\t\t\t193,\n\t\t\t\t\t\t\t\t-160,\n\t\t\t\t\t\t\t\t194,\n\t\t\t\t\t\t\t\t195,\n\t\t\t\t\t\t\t\t196,\n\t\t\t\t\t\t\t\t197,\n\t\t\t\t\t\t\t\t198,\n\t\t\t\t\t\t\t\t199,\n\t\t\t\t\t\t\t\t200,\n\t\t\t\t\t\t\t\t201\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05962\",\n\t\t\t\t\t\t\t\"GEN\": \"Märkischer Kreis\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t202,\n\t\t\t\t\t\t\t\t203,\n\t\t\t\t\t\t\t\t204,\n\t\t\t\t\t\t\t\t205,\n\t\t\t\t\t\t\t\t206,\n\t\t\t\t\t\t\t\t207,\n\t\t\t\t\t\t\t\t208,\n\t\t\t\t\t\t\t\t209,\n\t\t\t\t\t\t\t\t210,\n\t\t\t\t\t\t\t\t211,\n\t\t\t\t\t\t\t\t212\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05111\",\n\t\t\t\t\t\t\t\"GEN\": \"Düsseldorf\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t213,\n\t\t\t\t\t\t\t\t214,\n\t\t\t\t\t\t\t\t215,\n\t\t\t\t\t\t\t\t216,\n\t\t\t\t\t\t\t\t217,\n\t\t\t\t\t\t\t\t218,\n\t\t\t\t\t\t\t\t219,\n\t\t\t\t\t\t\t\t220,\n\t\t\t\t\t\t\t\t221,\n\t\t\t\t\t\t\t\t222,\n\t\t\t\t\t\t\t\t223,\n\t\t\t\t\t\t\t\t224,\n\t\t\t\t\t\t\t\t225,\n\t\t\t\t\t\t\t\t226,\n\t\t\t\t\t\t\t\t227,\n\t\t\t\t\t\t\t\t228,\n\t\t\t\t\t\t\t\t229,\n\t\t\t\t\t\t\t\t230,\n\t\t\t\t\t\t\t\t231,\n\t\t\t\t\t\t\t\t232\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05911\",\n\t\t\t\t\t\t\t\"GEN\": \"Bochum\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t233,\n\t\t\t\t\t\t\t\t234,\n\t\t\t\t\t\t\t\t235,\n\t\t\t\t\t\t\t\t236,\n\t\t\t\t\t\t\t\t237,\n\t\t\t\t\t\t\t\t238,\n\t\t\t\t\t\t\t\t239,\n\t\t\t\t\t\t\t\t240,\n\t\t\t\t\t\t\t\t-214,\n\t\t\t\t\t\t\t\t241,\n\t\t\t\t\t\t\t\t242,\n\t\t\t\t\t\t\t\t-11,\n\t\t\t\t\t\t\t\t243,\n\t\t\t\t\t\t\t\t244,\n\t\t\t\t\t\t\t\t245\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05913\",\n\t\t\t\t\t\t\t\"GEN\": \"Dortmund\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t246,\n\t\t\t\t\t\t\t\t247,\n\t\t\t\t\t\t\t\t248,\n\t\t\t\t\t\t\t\t249,\n\t\t\t\t\t\t\t\t250,\n\t\t\t\t\t\t\t\t251,\n\t\t\t\t\t\t\t\t252,\n\t\t\t\t\t\t\t\t253,\n\t\t\t\t\t\t\t\t254,\n\t\t\t\t\t\t\t\t255\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05154\",\n\t\t\t\t\t\t\t\"GEN\": \"Kleve\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t256,\n\t\t\t\t\t\t\t\t257,\n\t\t\t\t\t\t\t\t258,\n\t\t\t\t\t\t\t\t259,\n\t\t\t\t\t\t\t\t260,\n\t\t\t\t\t\t\t\t261,\n\t\t\t\t\t\t\t\t262,\n\t\t\t\t\t\t\t\t263,\n\t\t\t\t\t\t\t\t264,\n\t\t\t\t\t\t\t\t265,\n\t\t\t\t\t\t\t\t266,\n\t\t\t\t\t\t\t\t267,\n\t\t\t\t\t\t\t\t268,\n\t\t\t\t\t\t\t\t269,\n\t\t\t\t\t\t\t\t-254,\n\t\t\t\t\t\t\t\t270\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05166\",\n\t\t\t\t\t\t\t\"GEN\": \"Viersen\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t271,\n\t\t\t\t\t\t\t\t272,\n\t\t\t\t\t\t\t\t273,\n\t\t\t\t\t\t\t\t274,\n\t\t\t\t\t\t\t\t275,\n\t\t\t\t\t\t\t\t276,\n\t\t\t\t\t\t\t\t-42,\n\t\t\t\t\t\t\t\t277,\n\t\t\t\t\t\t\t\t-40,\n\t\t\t\t\t\t\t\t278,\n\t\t\t\t\t\t\t\t-38,\n\t\t\t\t\t\t\t\t279,\n\t\t\t\t\t\t\t\t280,\n\t\t\t\t\t\t\t\t281,\n\t\t\t\t\t\t\t\t282,\n\t\t\t\t\t\t\t\t283,\n\t\t\t\t\t\t\t\t284,\n\t\t\t\t\t\t\t\t285,\n\t\t\t\t\t\t\t\t286,\n\t\t\t\t\t\t\t\t287,\n\t\t\t\t\t\t\t\t288,\n\t\t\t\t\t\t\t\t289,\n\t\t\t\t\t\t\t\t290,\n\t\t\t\t\t\t\t\t291,\n\t\t\t\t\t\t\t\t292\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05766\",\n\t\t\t\t\t\t\t\"GEN\": \"Lippe\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-263,\n\t\t\t\t\t\t\t\t293,\n\t\t\t\t\t\t\t\t294,\n\t\t\t\t\t\t\t\t295,\n\t\t\t\t\t\t\t\t296,\n\t\t\t\t\t\t\t\t297,\n\t\t\t\t\t\t\t\t298,\n\t\t\t\t\t\t\t\t299,\n\t\t\t\t\t\t\t\t300,\n\t\t\t\t\t\t\t\t301,\n\t\t\t\t\t\t\t\t-265,\n\t\t\t\t\t\t\t\t302\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05116\",\n\t\t\t\t\t\t\t\"GEN\": \"Mönchengladbach\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-274,\n\t\t\t\t\t\t\t\t303,\n\t\t\t\t\t\t\t\t-272,\n\t\t\t\t\t\t\t\t304,\n\t\t\t\t\t\t\t\t-110,\n\t\t\t\t\t\t\t\t305,\n\t\t\t\t\t\t\t\t-46,\n\t\t\t\t\t\t\t\t306,\n\t\t\t\t\t\t\t\t-44,\n\t\t\t\t\t\t\t\t307,\n\t\t\t\t\t\t\t\t-276,\n\t\t\t\t\t\t\t\t308\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05762\",\n\t\t\t\t\t\t\t\"GEN\": \"Höxter\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-112,\n\t\t\t\t\t\t\t\t309,\n\t\t\t\t\t\t\t\t310,\n\t\t\t\t\t\t\t\t311,\n\t\t\t\t\t\t\t\t312,\n\t\t\t\t\t\t\t\t313,\n\t\t\t\t\t\t\t\t314,\n\t\t\t\t\t\t\t\t315,\n\t\t\t\t\t\t\t\t316,\n\t\t\t\t\t\t\t\t317,\n\t\t\t\t\t\t\t\t-116,\n\t\t\t\t\t\t\t\t318,\n\t\t\t\t\t\t\t\t-114,\n\t\t\t\t\t\t\t\t319\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05970\",\n\t\t\t\t\t\t\t\"GEN\": \"Siegen-Wittgenstein\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t320,\n\t\t\t\t\t\t\t\t321,\n\t\t\t\t\t\t\t\t322,\n\t\t\t\t\t\t\t\t-156,\n\t\t\t\t\t\t\t\t323,\n\t\t\t\t\t\t\t\t324,\n\t\t\t\t\t\t\t\t325,\n\t\t\t\t\t\t\t\t326,\n\t\t\t\t\t\t\t\t327,\n\t\t\t\t\t\t\t\t328,\n\t\t\t\t\t\t\t\t329,\n\t\t\t\t\t\t\t\t330,\n\t\t\t\t\t\t\t\t331,\n\t\t\t\t\t\t\t\t332\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05915\",\n\t\t\t\t\t\t\t\"GEN\": \"Hamm\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t333,\n\t\t\t\t\t\t\t\t334,\n\t\t\t\t\t\t\t\t335,\n\t\t\t\t\t\t\t\t336,\n\t\t\t\t\t\t\t\t337,\n\t\t\t\t\t\t\t\t338,\n\t\t\t\t\t\t\t\t339,\n\t\t\t\t\t\t\t\t340,\n\t\t\t\t\t\t\t\t-30,\n\t\t\t\t\t\t\t\t341,\n\t\t\t\t\t\t\t\t342,\n\t\t\t\t\t\t\t\t343,\n\t\t\t\t\t\t\t\t344,\n\t\t\t\t\t\t\t\t345,\n\t\t\t\t\t\t\t\t346,\n\t\t\t\t\t\t\t\t347,\n\t\t\t\t\t\t\t\t348,\n\t\t\t\t\t\t\t\t349,\n\t\t\t\t\t\t\t\t350,\n\t\t\t\t\t\t\t\t351,\n\t\t\t\t\t\t\t\t352,\n\t\t\t\t\t\t\t\t353,\n\t\t\t\t\t\t\t\t354,\n\t\t\t\t\t\t\t\t355,\n\t\t\t\t\t\t\t\t356,\n\t\t\t\t\t\t\t\t357,\n\t\t\t\t\t\t\t\t358,\n\t\t\t\t\t\t\t\t-251,\n\t\t\t\t\t\t\t\t359,\n\t\t\t\t\t\t\t\t-249,\n\t\t\t\t\t\t\t\t360,\n\t\t\t\t\t\t\t\t361,\n\t\t\t\t\t\t\t\t362\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05170\",\n\t\t\t\t\t\t\t\"GEN\": \"Wesel\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t363,\n\t\t\t\t\t\t\t\t364,\n\t\t\t\t\t\t\t\t365,\n\t\t\t\t\t\t\t\t366,\n\t\t\t\t\t\t\t\t367,\n\t\t\t\t\t\t\t\t368,\n\t\t\t\t\t\t\t\t369,\n\t\t\t\t\t\t\t\t370,\n\t\t\t\t\t\t\t\t371,\n\t\t\t\t\t\t\t\t372,\n\t\t\t\t\t\t\t\t373,\n\t\t\t\t\t\t\t\t374,\n\t\t\t\t\t\t\t\t375,\n\t\t\t\t\t\t\t\t-207,\n\t\t\t\t\t\t\t\t376,\n\t\t\t\t\t\t\t\t-205,\n\t\t\t\t\t\t\t\t377,\n\t\t\t\t\t\t\t\t378,\n\t\t\t\t\t\t\t\t379,\n\t\t\t\t\t\t\t\t380,\n\t\t\t\t\t\t\t\t381,\n\t\t\t\t\t\t\t\t382,\n\t\t\t\t\t\t\t\t383,\n\t\t\t\t\t\t\t\t384\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05158\",\n\t\t\t\t\t\t\t\"GEN\": \"Mettmann\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t385,\n\t\t\t\t\t\t\t\t386,\n\t\t\t\t\t\t\t\t387,\n\t\t\t\t\t\t\t\t388,\n\t\t\t\t\t\t\t\t389,\n\t\t\t\t\t\t\t\t390,\n\t\t\t\t\t\t\t\t391,\n\t\t\t\t\t\t\t\t392,\n\t\t\t\t\t\t\t\t393,\n\t\t\t\t\t\t\t\t394,\n\t\t\t\t\t\t\t\t395,\n\t\t\t\t\t\t\t\t396,\n\t\t\t\t\t\t\t\t397,\n\t\t\t\t\t\t\t\t398,\n\t\t\t\t\t\t\t\t399,\n\t\t\t\t\t\t\t\t400,\n\t\t\t\t\t\t\t\t401\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05366\",\n\t\t\t\t\t\t\t\"GEN\": \"Euskirchen\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t402,\n\t\t\t\t\t\t\t\t403,\n\t\t\t\t\t\t\t\t404,\n\t\t\t\t\t\t\t\t405,\n\t\t\t\t\t\t\t\t406,\n\t\t\t\t\t\t\t\t407,\n\t\t\t\t\t\t\t\t408,\n\t\t\t\t\t\t\t\t409,\n\t\t\t\t\t\t\t\t410,\n\t\t\t\t\t\t\t\t-259,\n\t\t\t\t\t\t\t\t411,\n\t\t\t\t\t\t\t\t-257,\n\t\t\t\t\t\t\t\t412,\n\t\t\t\t\t\t\t\t-357\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05114\",\n\t\t\t\t\t\t\t\"GEN\": \"Krefeld\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t413,\n\t\t\t\t\t\t\t\t\t414,\n\t\t\t\t\t\t\t\t\t415,\n\t\t\t\t\t\t\t\t\t416,\n\t\t\t\t\t\t\t\t\t417,\n\t\t\t\t\t\t\t\t\t418,\n\t\t\t\t\t\t\t\t\t-394,\n\t\t\t\t\t\t\t\t\t419,\n\t\t\t\t\t\t\t\t\t420,\n\t\t\t\t\t\t\t\t\t421,\n\t\t\t\t\t\t\t\t\t422\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t423\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"MultiPolygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05334\",\n\t\t\t\t\t\t\t\"GEN\": \"Städteregion Aachen\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-210,\n\t\t\t\t\t\t\t\t424,\n\t\t\t\t\t\t\t\t425,\n\t\t\t\t\t\t\t\t426,\n\t\t\t\t\t\t\t\t427,\n\t\t\t\t\t\t\t\t428,\n\t\t\t\t\t\t\t\t429,\n\t\t\t\t\t\t\t\t430,\n\t\t\t\t\t\t\t\t431,\n\t\t\t\t\t\t\t\t432,\n\t\t\t\t\t\t\t\t433,\n\t\t\t\t\t\t\t\t434,\n\t\t\t\t\t\t\t\t435,\n\t\t\t\t\t\t\t\t436,\n\t\t\t\t\t\t\t\t437,\n\t\t\t\t\t\t\t\t-299,\n\t\t\t\t\t\t\t\t438,\n\t\t\t\t\t\t\t\t-297,\n\t\t\t\t\t\t\t\t439,\n\t\t\t\t\t\t\t\t-295,\n\t\t\t\t\t\t\t\t440,\n\t\t\t\t\t\t\t\t-261,\n\t\t\t\t\t\t\t\t441,\n\t\t\t\t\t\t\t\t-410,\n\t\t\t\t\t\t\t\t442,\n\t\t\t\t\t\t\t\t443,\n\t\t\t\t\t\t\t\t444\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05162\",\n\t\t\t\t\t\t\t\"GEN\": \"Rhein-Kreis Neuss\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t445,\n\t\t\t\t\t\t\t\t446,\n\t\t\t\t\t\t\t\t447,\n\t\t\t\t\t\t\t\t448,\n\t\t\t\t\t\t\t\t-328,\n\t\t\t\t\t\t\t\t449,\n\t\t\t\t\t\t\t\t450,\n\t\t\t\t\t\t\t\t-325,\n\t\t\t\t\t\t\t\t451,\n\t\t\t\t\t\t\t\t452,\n\t\t\t\t\t\t\t\t-153,\n\t\t\t\t\t\t\t\t453,\n\t\t\t\t\t\t\t\t-201,\n\t\t\t\t\t\t\t\t454,\n\t\t\t\t\t\t\t\t-199,\n\t\t\t\t\t\t\t\t455,\n\t\t\t\t\t\t\t\t-197,\n\t\t\t\t\t\t\t\t456,\n\t\t\t\t\t\t\t\t-195,\n\t\t\t\t\t\t\t\t-159,\n\t\t\t\t\t\t\t\t-236,\n\t\t\t\t\t\t\t\t457,\n\t\t\t\t\t\t\t\t-234,\n\t\t\t\t\t\t\t\t458,\n\t\t\t\t\t\t\t\t-245,\n\t\t\t\t\t\t\t\t459,\n\t\t\t\t\t\t\t\t-9,\n\t\t\t\t\t\t\t\t460,\n\t\t\t\t\t\t\t\t-7,\n\t\t\t\t\t\t\t\t461,\n\t\t\t\t\t\t\t\t462,\n\t\t\t\t\t\t\t\t463,\n\t\t\t\t\t\t\t\t464,\n\t\t\t\t\t\t\t\t465\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05978\",\n\t\t\t\t\t\t\t\"GEN\": \"Unna\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t466,\n\t\t\t\t\t\t\t\t467,\n\t\t\t\t\t\t\t\t468,\n\t\t\t\t\t\t\t\t469,\n\t\t\t\t\t\t\t\t470,\n\t\t\t\t\t\t\t\t471,\n\t\t\t\t\t\t\t\t472,\n\t\t\t\t\t\t\t\t473,\n\t\t\t\t\t\t\t\t474,\n\t\t\t\t\t\t\t\t475,\n\t\t\t\t\t\t\t\t-370,\n\t\t\t\t\t\t\t\t476,\n\t\t\t\t\t\t\t\t-368,\n\t\t\t\t\t\t\t\t477\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05122\",\n\t\t\t\t\t\t\t\"GEN\": \"Solingen\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t478,\n\t\t\t\t\t\t\t\t-96,\n\t\t\t\t\t\t\t\t479,\n\t\t\t\t\t\t\t\t-94,\n\t\t\t\t\t\t\t\t480,\n\t\t\t\t\t\t\t\t-92,\n\t\t\t\t\t\t\t\t481,\n\t\t\t\t\t\t\t\t482,\n\t\t\t\t\t\t\t\t483,\n\t\t\t\t\t\t\t\t484,\n\t\t\t\t\t\t\t\t485,\n\t\t\t\t\t\t\t\t486,\n\t\t\t\t\t\t\t\t487,\n\t\t\t\t\t\t\t\t488,\n\t\t\t\t\t\t\t\t489,\n\t\t\t\t\t\t\t\t490,\n\t\t\t\t\t\t\t\t491,\n\t\t\t\t\t\t\t\t492,\n\t\t\t\t\t\t\t\t493,\n\t\t\t\t\t\t\t\t494,\n\t\t\t\t\t\t\t\t-475,\n\t\t\t\t\t\t\t\t495,\n\t\t\t\t\t\t\t\t-473,\n\t\t\t\t\t\t\t\t496,\n\t\t\t\t\t\t\t\t497,\n\t\t\t\t\t\t\t\t498\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05378\",\n\t\t\t\t\t\t\t\"GEN\": \"Rheinisch-Bergischer Kreis\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t499,\n\t\t\t\t\t\t\t\t-118,\n\t\t\t\t\t\t\t\t500,\n\t\t\t\t\t\t\t\t-317,\n\t\t\t\t\t\t\t\t501,\n\t\t\t\t\t\t\t\t-315,\n\t\t\t\t\t\t\t\t502,\n\t\t\t\t\t\t\t\t-313,\n\t\t\t\t\t\t\t\t503,\n\t\t\t\t\t\t\t\t-311,\n\t\t\t\t\t\t\t\t504,\n\t\t\t\t\t\t\t\t-88,\n\t\t\t\t\t\t\t\t505,\n\t\t\t\t\t\t\t\t-188,\n\t\t\t\t\t\t\t\t506,\n\t\t\t\t\t\t\t\t507,\n\t\t\t\t\t\t\t\t-185,\n\t\t\t\t\t\t\t\t508,\n\t\t\t\t\t\t\t\t-183,\n\t\t\t\t\t\t\t\t509,\n\t\t\t\t\t\t\t\t-123,\n\t\t\t\t\t\t\t\t510,\n\t\t\t\t\t\t\t\t511,\n\t\t\t\t\t\t\t\t-120\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05966\",\n\t\t\t\t\t\t\t\"GEN\": \"Olpe\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t512,\n\t\t\t\t\t\t\t\t513,\n\t\t\t\t\t\t\t\t514,\n\t\t\t\t\t\t\t\t515,\n\t\t\t\t\t\t\t\t516,\n\t\t\t\t\t\t\t\t517,\n\t\t\t\t\t\t\t\t518,\n\t\t\t\t\t\t\t\t519,\n\t\t\t\t\t\t\t\t520,\n\t\t\t\t\t\t\t\t521,\n\t\t\t\t\t\t\t\t522,\n\t\t\t\t\t\t\t\t523,\n\t\t\t\t\t\t\t\t524,\n\t\t\t\t\t\t\t\t525\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05515\",\n\t\t\t\t\t\t\t\"GEN\": \"Münster\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t526,\n\t\t\t\t\t\t\t\t527,\n\t\t\t\t\t\t\t\t528,\n\t\t\t\t\t\t\t\t529,\n\t\t\t\t\t\t\t\t-144,\n\t\t\t\t\t\t\t\t530,\n\t\t\t\t\t\t\t\t-142,\n\t\t\t\t\t\t\t\t531,\n\t\t\t\t\t\t\t\t-140,\n\t\t\t\t\t\t\t\t532,\n\t\t\t\t\t\t\t\t-138,\n\t\t\t\t\t\t\t\t533,\n\t\t\t\t\t\t\t\t534,\n\t\t\t\t\t\t\t\t535,\n\t\t\t\t\t\t\t\t-321,\n\t\t\t\t\t\t\t\t536,\n\t\t\t\t\t\t\t\t-332,\n\t\t\t\t\t\t\t\t537,\n\t\t\t\t\t\t\t\t538,\n\t\t\t\t\t\t\t\t539,\n\t\t\t\t\t\t\t\t-517,\n\t\t\t\t\t\t\t\t540,\n\t\t\t\t\t\t\t\t-515,\n\t\t\t\t\t\t\t\t541,\n\t\t\t\t\t\t\t\t542,\n\t\t\t\t\t\t\t\t543,\n\t\t\t\t\t\t\t\t544\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05570\",\n\t\t\t\t\t\t\t\"GEN\": \"Warendorf\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t545,\n\t\t\t\t\t\t\t\t546,\n\t\t\t\t\t\t\t\t-490,\n\t\t\t\t\t\t\t\t547,\n\t\t\t\t\t\t\t\t548,\n\t\t\t\t\t\t\t\t549,\n\t\t\t\t\t\t\t\t550,\n\t\t\t\t\t\t\t\t551,\n\t\t\t\t\t\t\t\t-430,\n\t\t\t\t\t\t\t\t552,\n\t\t\t\t\t\t\t\t-428,\n\t\t\t\t\t\t\t\t553\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05315\",\n\t\t\t\t\t\t\t\"GEN\": \"Köln\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t554,\n\t\t\t\t\t\t\t\t-551,\n\t\t\t\t\t\t\t\t555,\n\t\t\t\t\t\t\t\t556,\n\t\t\t\t\t\t\t\t557,\n\t\t\t\t\t\t\t\t558,\n\t\t\t\t\t\t\t\t559,\n\t\t\t\t\t\t\t\t-401,\n\t\t\t\t\t\t\t\t560,\n\t\t\t\t\t\t\t\t561,\n\t\t\t\t\t\t\t\t562,\n\t\t\t\t\t\t\t\t563,\n\t\t\t\t\t\t\t\t564,\n\t\t\t\t\t\t\t\t-432\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05362\",\n\t\t\t\t\t\t\t\"GEN\": \"Rhein-Erft-Kreis\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t565,\n\t\t\t\t\t\t\t\t566,\n\t\t\t\t\t\t\t\t567,\n\t\t\t\t\t\t\t\t568,\n\t\t\t\t\t\t\t\t569,\n\t\t\t\t\t\t\t\t570,\n\t\t\t\t\t\t\t\t571,\n\t\t\t\t\t\t\t\t572,\n\t\t\t\t\t\t\t\t573,\n\t\t\t\t\t\t\t\t574,\n\t\t\t\t\t\t\t\t-34,\n\t\t\t\t\t\t\t\t575,\n\t\t\t\t\t\t\t\t-32,\n\t\t\t\t\t\t\t\t576,\n\t\t\t\t\t\t\t\t-340,\n\t\t\t\t\t\t\t\t577,\n\t\t\t\t\t\t\t\t-338,\n\t\t\t\t\t\t\t\t578,\n\t\t\t\t\t\t\t\t-336,\n\t\t\t\t\t\t\t\t579,\n\t\t\t\t\t\t\t\t-334,\n\t\t\t\t\t\t\t\t580,\n\t\t\t\t\t\t\t\t-362,\n\t\t\t\t\t\t\t\t581,\n\t\t\t\t\t\t\t\t-247,\n\t\t\t\t\t\t\t\t582\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05554\",\n\t\t\t\t\t\t\t\"GEN\": \"Borken\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t583,\n\t\t\t\t\t\t\t\t584,\n\t\t\t\t\t\t\t\t585,\n\t\t\t\t\t\t\t\t586,\n\t\t\t\t\t\t\t\t-523,\n\t\t\t\t\t\t\t\t587,\n\t\t\t\t\t\t\t\t-521,\n\t\t\t\t\t\t\t\t588,\n\t\t\t\t\t\t\t\t-519,\n\t\t\t\t\t\t\t\t589,\n\t\t\t\t\t\t\t\t-539,\n\t\t\t\t\t\t\t\t590,\n\t\t\t\t\t\t\t\t-330,\n\t\t\t\t\t\t\t\t591,\n\t\t\t\t\t\t\t\t-448,\n\t\t\t\t\t\t\t\t592,\n\t\t\t\t\t\t\t\t-446,\n\t\t\t\t\t\t\t\t593,\n\t\t\t\t\t\t\t\t-465,\n\t\t\t\t\t\t\t\t594,\n\t\t\t\t\t\t\t\t-463,\n\t\t\t\t\t\t\t\t595,\n\t\t\t\t\t\t\t\t-5,\n\t\t\t\t\t\t\t\t596,\n\t\t\t\t\t\t\t\t-3,\n\t\t\t\t\t\t\t\t597,\n\t\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t\t598,\n\t\t\t\t\t\t\t\t599,\n\t\t\t\t\t\t\t\t-573,\n\t\t\t\t\t\t\t\t600,\n\t\t\t\t\t\t\t\t-571,\n\t\t\t\t\t\t\t\t601,\n\t\t\t\t\t\t\t\t-569,\n\t\t\t\t\t\t\t\t602,\n\t\t\t\t\t\t\t\t-567,\n\t\t\t\t\t\t\t\t603,\n\t\t\t\t\t\t\t\t604\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05558\",\n\t\t\t\t\t\t\t\"GEN\": \"Coesfeld\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-527,\n\t\t\t\t\t\t\t\t605,\n\t\t\t\t\t\t\t\t-544,\n\t\t\t\t\t\t\t\t606,\n\t\t\t\t\t\t\t\t607,\n\t\t\t\t\t\t\t\t-513,\n\t\t\t\t\t\t\t\t608,\n\t\t\t\t\t\t\t\t-525,\n\t\t\t\t\t\t\t\t609,\n\t\t\t\t\t\t\t\t-586,\n\t\t\t\t\t\t\t\t610,\n\t\t\t\t\t\t\t\t-584,\n\t\t\t\t\t\t\t\t611,\n\t\t\t\t\t\t\t\t-604,\n\t\t\t\t\t\t\t\t-566,\n\t\t\t\t\t\t\t\t612\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566\",\n\t\t\t\t\t\t\t\"GEN\": \"Steinfurt\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-19,\n\t\t\t\t\t\t\t\t613,\n\t\t\t\t\t\t\t\t614,\n\t\t\t\t\t\t\t\t615,\n\t\t\t\t\t\t\t\t616,\n\t\t\t\t\t\t\t\t-225,\n\t\t\t\t\t\t\t\t617,\n\t\t\t\t\t\t\t\t618,\n\t\t\t\t\t\t\t\t619,\n\t\t\t\t\t\t\t\t-21,\n\t\t\t\t\t\t\t\t620\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05513\",\n\t\t\t\t\t\t\t\"GEN\": \"Gelsenkirchen\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-14,\n\t\t\t\t\t\t\t\t621,\n\t\t\t\t\t\t\t\t-232,\n\t\t\t\t\t\t\t\t622,\n\t\t\t\t\t\t\t\t-230,\n\t\t\t\t\t\t\t\t623,\n\t\t\t\t\t\t\t\t624,\n\t\t\t\t\t\t\t\t-227,\n\t\t\t\t\t\t\t\t625,\n\t\t\t\t\t\t\t\t-616,\n\t\t\t\t\t\t\t\t626,\n\t\t\t\t\t\t\t\t-16,\n\t\t\t\t\t\t\t\t627\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05916\",\n\t\t\t\t\t\t\t\"GEN\": \"Herne\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-492,\n\t\t\t\t\t\t\t\t628,\n\t\t\t\t\t\t\t\t-546,\n\t\t\t\t\t\t\t\t629,\n\t\t\t\t\t\t\t\t630,\n\t\t\t\t\t\t\t\t-374,\n\t\t\t\t\t\t\t\t631,\n\t\t\t\t\t\t\t\t632,\n\t\t\t\t\t\t\t\t633\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05316\",\n\t\t\t\t\t\t\t\"GEN\": \"Leverkusen\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-90,\n\t\t\t\t\t\t\t\t634,\n\t\t\t\t\t\t\t\t-66,\n\t\t\t\t\t\t\t\t635,\n\t\t\t\t\t\t\t\t-64,\n\t\t\t\t\t\t\t\t636,\n\t\t\t\t\t\t\t\t637,\n\t\t\t\t\t\t\t\t-61,\n\t\t\t\t\t\t\t\t638,\n\t\t\t\t\t\t\t\t639,\n\t\t\t\t\t\t\t\t640,\n\t\t\t\t\t\t\t\t-70,\n\t\t\t\t\t\t\t\t641,\n\t\t\t\t\t\t\t\t-68,\n\t\t\t\t\t\t\t\t642,\n\t\t\t\t\t\t\t\t643,\n\t\t\t\t\t\t\t\t-391,\n\t\t\t\t\t\t\t\t644,\n\t\t\t\t\t\t\t\t-389,\n\t\t\t\t\t\t\t\t645,\n\t\t\t\t\t\t\t\t-387,\n\t\t\t\t\t\t\t\t646,\n\t\t\t\t\t\t\t\t647,\n\t\t\t\t\t\t\t\t648,\n\t\t\t\t\t\t\t\t-558,\n\t\t\t\t\t\t\t\t649,\n\t\t\t\t\t\t\t\t650,\n\t\t\t\t\t\t\t\t-549,\n\t\t\t\t\t\t\t\t651,\n\t\t\t\t\t\t\t\t-488,\n\t\t\t\t\t\t\t\t652,\n\t\t\t\t\t\t\t\t653,\n\t\t\t\t\t\t\t\t-485,\n\t\t\t\t\t\t\t\t654,\n\t\t\t\t\t\t\t\t-483,\n\t\t\t\t\t\t\t\t655\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382\",\n\t\t\t\t\t\t\t\"GEN\": \"Rhein-Sieg-Kreis\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t656,\n\t\t\t\t\t\t\t\t657,\n\t\t\t\t\t\t\t\t-104,\n\t\t\t\t\t\t\t\t658,\n\t\t\t\t\t\t\t\t659,\n\t\t\t\t\t\t\t\t660,\n\t\t\t\t\t\t\t\t661,\n\t\t\t\t\t\t\t\t662,\n\t\t\t\t\t\t\t\t663,\n\t\t\t\t\t\t\t\t664,\n\t\t\t\t\t\t\t\t665,\n\t\t\t\t\t\t\t\t666,\n\t\t\t\t\t\t\t\t667,\n\t\t\t\t\t\t\t\t668,\n\t\t\t\t\t\t\t\t-468,\n\t\t\t\t\t\t\t\t669,\n\t\t\t\t\t\t\t\t-478,\n\t\t\t\t\t\t\t\t670,\n\t\t\t\t\t\t\t\t-366,\n\t\t\t\t\t\t\t\t671,\n\t\t\t\t\t\t\t\t-364,\n\t\t\t\t\t\t\t\t672,\n\t\t\t\t\t\t\t\t673,\n\t\t\t\t\t\t\t\t674\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05124\",\n\t\t\t\t\t\t\t\"GEN\": \"Wuppertal\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t675,\n\t\t\t\t\t\t\t\t676,\n\t\t\t\t\t\t\t\t677,\n\t\t\t\t\t\t\t\t-285,\n\t\t\t\t\t\t\t\t678,\n\t\t\t\t\t\t\t\t-283,\n\t\t\t\t\t\t\t\t679,\n\t\t\t\t\t\t\t\t680,\n\t\t\t\t\t\t\t\t681,\n\t\t\t\t\t\t\t\t682,\n\t\t\t\t\t\t\t\t683,\n\t\t\t\t\t\t\t\t684,\n\t\t\t\t\t\t\t\t685\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05711\",\n\t\t\t\t\t\t\t\"GEN\": \"Bielefeld\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-663,\n\t\t\t\t\t\t\t\t686,\n\t\t\t\t\t\t\t\t-661,\n\t\t\t\t\t\t\t\t687,\n\t\t\t\t\t\t\t\t688,\n\t\t\t\t\t\t\t\t-100,\n\t\t\t\t\t\t\t\t689,\n\t\t\t\t\t\t\t\t-98,\n\t\t\t\t\t\t\t\t690,\n\t\t\t\t\t\t\t\t691,\n\t\t\t\t\t\t\t\t-498,\n\t\t\t\t\t\t\t\t692,\n\t\t\t\t\t\t\t\t693,\n\t\t\t\t\t\t\t\t-470,\n\t\t\t\t\t\t\t\t694,\n\t\t\t\t\t\t\t\t-668,\n\t\t\t\t\t\t\t\t695,\n\t\t\t\t\t\t\t\t-666,\n\t\t\t\t\t\t\t\t696,\n\t\t\t\t\t\t\t\t697\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05120\",\n\t\t\t\t\t\t\t\"GEN\": \"Remscheid\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t698,\n\t\t\t\t\t\t\t\t-301,\n\t\t\t\t\t\t\t\t699,\n\t\t\t\t\t\t\t\t700,\n\t\t\t\t\t\t\t\t-436,\n\t\t\t\t\t\t\t\t701,\n\t\t\t\t\t\t\t\t702,\n\t\t\t\t\t\t\t\t703,\n\t\t\t\t\t\t\t\t704,\n\t\t\t\t\t\t\t\t705,\n\t\t\t\t\t\t\t\t706,\n\t\t\t\t\t\t\t\t-421,\n\t\t\t\t\t\t\t\t707,\n\t\t\t\t\t\t\t\t-268,\n\t\t\t\t\t\t\t\t708\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05370\",\n\t\t\t\t\t\t\t\"GEN\": \"Heinsberg\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t709,\n\t\t\t\t\t\t\t\t710,\n\t\t\t\t\t\t\t\t-564,\n\t\t\t\t\t\t\t\t711,\n\t\t\t\t\t\t\t\t-562,\n\t\t\t\t\t\t\t\t712,\n\t\t\t\t\t\t\t\t-399,\n\t\t\t\t\t\t\t\t713,\n\t\t\t\t\t\t\t\t-397,\n\t\t\t\t\t\t\t\t714,\n\t\t\t\t\t\t\t\t715,\n\t\t\t\t\t\t\t\t-416,\n\t\t\t\t\t\t\t\t716,\n\t\t\t\t\t\t\t\t-414,\n\t\t\t\t\t\t\t\t717,\n\t\t\t\t\t\t\t\t718,\n\t\t\t\t\t\t\t\t-706,\n\t\t\t\t\t\t\t\t719,\n\t\t\t\t\t\t\t\t-704\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05358\",\n\t\t\t\t\t\t\t\"GEN\": \"Düren\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-26,\n\t\t\t\t\t\t\t\t720,\n\t\t\t\t\t\t\t\t-24,\n\t\t\t\t\t\t\t\t721,\n\t\t\t\t\t\t\t\t722,\n\t\t\t\t\t\t\t\t723,\n\t\t\t\t\t\t\t\t724,\n\t\t\t\t\t\t\t\t725,\n\t\t\t\t\t\t\t\t-344,\n\t\t\t\t\t\t\t\t726,\n\t\t\t\t\t\t\t\t727\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05512\",\n\t\t\t\t\t\t\t\"GEN\": \"Bottrop\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t728,\n\t\t\t\t\t\t\t\t729,\n\t\t\t\t\t\t\t\t730,\n\t\t\t\t\t\t\t\t731,\n\t\t\t\t\t\t\t\t732,\n\t\t\t\t\t\t\t\t733,\n\t\t\t\t\t\t\t\t734,\n\t\t\t\t\t\t\t\t-348,\n\t\t\t\t\t\t\t\t735,\n\t\t\t\t\t\t\t\t-346,\n\t\t\t\t\t\t\t\t736,\n\t\t\t\t\t\t\t\t-725\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05119\",\n\t\t\t\t\t\t\t\"GEN\": \"Oberhausen\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-350,\n\t\t\t\t\t\t\t\t737,\n\t\t\t\t\t\t\t\t-734,\n\t\t\t\t\t\t\t\t738,\n\t\t\t\t\t\t\t\t739,\n\t\t\t\t\t\t\t\t740,\n\t\t\t\t\t\t\t\t741,\n\t\t\t\t\t\t\t\t-203,\n\t\t\t\t\t\t\t\t742,\n\t\t\t\t\t\t\t\t-212,\n\t\t\t\t\t\t\t\t743,\n\t\t\t\t\t\t\t\t-406,\n\t\t\t\t\t\t\t\t744,\n\t\t\t\t\t\t\t\t-404,\n\t\t\t\t\t\t\t\t745,\n\t\t\t\t\t\t\t\t-355,\n\t\t\t\t\t\t\t\t746,\n\t\t\t\t\t\t\t\t-353,\n\t\t\t\t\t\t\t\t747,\n\t\t\t\t\t\t\t\t748\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05112\",\n\t\t\t\t\t\t\t\"GEN\": \"Duisburg\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-619,\n\t\t\t\t\t\t\t\t749,\n\t\t\t\t\t\t\t\t-224,\n\t\t\t\t\t\t\t\t750,\n\t\t\t\t\t\t\t\t-222,\n\t\t\t\t\t\t\t\t751,\n\t\t\t\t\t\t\t\t752,\n\t\t\t\t\t\t\t\t753,\n\t\t\t\t\t\t\t\t-383,\n\t\t\t\t\t\t\t\t754,\n\t\t\t\t\t\t\t\t755,\n\t\t\t\t\t\t\t\t756,\n\t\t\t\t\t\t\t\t-730,\n\t\t\t\t\t\t\t\t757,\n\t\t\t\t\t\t\t\t-723,\n\t\t\t\t\t\t\t\t758,\n\t\t\t\t\t\t\t\t759\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05113\",\n\t\t\t\t\t\t\t\"GEN\": \"Essen\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t760,\n\t\t\t\t\t\t\t\t761,\n\t\t\t\t\t\t\t\t762,\n\t\t\t\t\t\t\t\t763,\n\t\t\t\t\t\t\t\t764,\n\t\t\t\t\t\t\t\t765,\n\t\t\t\t\t\t\t\t766,\n\t\t\t\t\t\t\t\t767,\n\t\t\t\t\t\t\t\t-290,\n\t\t\t\t\t\t\t\t768,\n\t\t\t\t\t\t\t\t769,\n\t\t\t\t\t\t\t\t-287,\n\t\t\t\t\t\t\t\t770,\n\t\t\t\t\t\t\t\t-677,\n\t\t\t\t\t\t\t\t771,\n\t\t\t\t\t\t\t\t-686,\n\t\t\t\t\t\t\t\t772,\n\t\t\t\t\t\t\t\t773,\n\t\t\t\t\t\t\t\t774,\n\t\t\t\t\t\t\t\t775\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05758\",\n\t\t\t\t\t\t\t\"GEN\": \"Herford\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-292,\n\t\t\t\t\t\t\t\t776,\n\t\t\t\t\t\t\t\t-767,\n\t\t\t\t\t\t\t\t777,\n\t\t\t\t\t\t\t\t-765,\n\t\t\t\t\t\t\t\t778,\n\t\t\t\t\t\t\t\t-763,\n\t\t\t\t\t\t\t\t779,\n\t\t\t\t\t\t\t\t-761,\n\t\t\t\t\t\t\t\t780\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05770\",\n\t\t\t\t\t\t\t\"GEN\": \"Minden-Lübbecke\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-775,\n\t\t\t\t\t\t\t\t781,\n\t\t\t\t\t\t\t\t-683,\n\t\t\t\t\t\t\t\t782,\n\t\t\t\t\t\t\t\t-681,\n\t\t\t\t\t\t\t\t783,\n\t\t\t\t\t\t\t\t-281,\n\t\t\t\t\t\t\t\t784,\n\t\t\t\t\t\t\t\t-36,\n\t\t\t\t\t\t\t\t785,\n\t\t\t\t\t\t\t\t-59,\n\t\t\t\t\t\t\t\t786,\n\t\t\t\t\t\t\t\t-57,\n\t\t\t\t\t\t\t\t787,\n\t\t\t\t\t\t\t\t-146,\n\t\t\t\t\t\t\t\t788,\n\t\t\t\t\t\t\t\t-529,\n\t\t\t\t\t\t\t\t789\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05754\",\n\t\t\t\t\t\t\t\"GEN\": \"Gütersloh\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-756,\n\t\t\t\t\t\t\t\t790,\n\t\t\t\t\t\t\t\t-381,\n\t\t\t\t\t\t\t\t791,\n\t\t\t\t\t\t\t\t792,\n\t\t\t\t\t\t\t\t-740,\n\t\t\t\t\t\t\t\t793,\n\t\t\t\t\t\t\t\t-732,\n\t\t\t\t\t\t\t\t794\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05117\",\n\t\t\t\t\t\t\t\"GEN\": \"Mülheim an der Ruhr\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-240,\n\t\t\t\t\t\t\t\t795,\n\t\t\t\t\t\t\t\t-238,\n\t\t\t\t\t\t\t\t796,\n\t\t\t\t\t\t\t\t797,\n\t\t\t\t\t\t\t\t-174,\n\t\t\t\t\t\t\t\t798,\n\t\t\t\t\t\t\t\t-172,\n\t\t\t\t\t\t\t\t799,\n\t\t\t\t\t\t\t\t-170,\n\t\t\t\t\t\t\t\t800,\n\t\t\t\t\t\t\t\t-168,\n\t\t\t\t\t\t\t\t801,\n\t\t\t\t\t\t\t\t-166,\n\t\t\t\t\t\t\t\t802,\n\t\t\t\t\t\t\t\t803,\n\t\t\t\t\t\t\t\t804,\n\t\t\t\t\t\t\t\t-192,\n\t\t\t\t\t\t\t\t805,\n\t\t\t\t\t\t\t\t806,\n\t\t\t\t\t\t\t\t-81,\n\t\t\t\t\t\t\t\t807,\n\t\t\t\t\t\t\t\t808,\n\t\t\t\t\t\t\t\t809,\n\t\t\t\t\t\t\t\t810,\n\t\t\t\t\t\t\t\t-76,\n\t\t\t\t\t\t\t\t811,\n\t\t\t\t\t\t\t\t-74,\n\t\t\t\t\t\t\t\t812,\n\t\t\t\t\t\t\t\t-106,\n\t\t\t\t\t\t\t\t813,\n\t\t\t\t\t\t\t\t-657,\n\t\t\t\t\t\t\t\t814,\n\t\t\t\t\t\t\t\t815,\n\t\t\t\t\t\t\t\t-673,\n\t\t\t\t\t\t\t\t-385,\n\t\t\t\t\t\t\t\t816,\n\t\t\t\t\t\t\t\t-753,\n\t\t\t\t\t\t\t\t817,\n\t\t\t\t\t\t\t\t-220,\n\t\t\t\t\t\t\t\t818,\n\t\t\t\t\t\t\t\t-218,\n\t\t\t\t\t\t\t\t819,\n\t\t\t\t\t\t\t\t-216,\n\t\t\t\t\t\t\t\t820\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05954\",\n\t\t\t\t\t\t\t\"GEN\": \"Ennepe-Ruhr-Kreis\",\n\t\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t\"crs\": {\n\t\t\t\"type\": \"name\",\n\t\t\t\"properties\": {\n\t\t\t\t\"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\"\n\t\t\t}\n\t\t}\n\t};\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"05111\": {\n\t\t\t\"c16\": 2391,\n\t\t\t\"ca16\": 230,\n\t\t\t\"q16\": 9.6,\n\t\t\t\"hz16\": 391,\n\t\t\t\"c\": \"5\"\n\t\t},\n\t\t\"05112\": {\n\t\t\t\"c16\": 1630,\n\t\t\t\"ca16\": 258,\n\t\t\t\"q16\": 15.8,\n\t\t\t\"hz16\": 332,\n\t\t\t\"c\": \"4\"\n\t\t},\n\t\t\"05113\": {\n\t\t\t\"c16\": 2218,\n\t\t\t\"ca16\": 295,\n\t\t\t\"q16\": 13.3,\n\t\t\t\"hz16\": 381,\n\t\t\t\"c\": \"4\"\n\t\t},\n\t\t\"05114\": {\n\t\t\t\"c16\": 760,\n\t\t\t\"ca16\": 153,\n\t\t\t\"q16\": 20.1,\n\t\t\t\"hz16\": 338,\n\t\t\t\"c\": \"4\"\n\t\t},\n\t\t\"05116\": {\n\t\t\t\"c16\": 826,\n\t\t\t\"ca16\": 83,\n\t\t\t\"q16\": 10,\n\t\t\t\"hz16\": 318,\n\t\t\t\"c\": \"3\"\n\t\t},\n\t\t\"05117\": {\n\t\t\t\"c16\": 667,\n\t\t\t\"ca16\": 100,\n\t\t\t\"q16\": 15,\n\t\t\t\"hz16\": 394,\n\t\t\t\"c\": \"5\"\n\t\t},\n\t\t\"05119\": {\n\t\t\t\"c16\": 745,\n\t\t\t\"ca16\": 130,\n\t\t\t\"q16\": 17.4,\n\t\t\t\"hz16\": 353,\n\t\t\t\"c\": \"4\"\n\t\t},\n\t\t\"05120\": {\n\t\t\t\"c16\": 224,\n\t\t\t\"ca16\": 39,\n\t\t\t\"q16\": 17.4,\n\t\t\t\"hz16\": 205,\n\t\t\t\"c\": \"1\"\n\t\t},\n\t\t\"05122\": {\n\t\t\t\"c16\": 400,\n\t\t\t\"ca16\": 59,\n\t\t\t\"q16\": 14.8,\n\t\t\t\"hz16\": 252,\n\t\t\t\"c\": \"2\"\n\t\t},\n\t\t\"05124\": {\n\t\t\t\"c16\": 1216,\n\t\t\t\"ca16\": 202,\n\t\t\t\"q16\": 16.6,\n\t\t\t\"hz16\": 347,\n\t\t\t\"c\": \"4\"\n\t\t},\n\t\t\"05154\": {\n\t\t\t\"c16\": 769,\n\t\t\t\"ca16\": 181,\n\t\t\t\"q16\": 23.5,\n\t\t\t\"hz16\": 248,\n\t\t\t\"c\": \"2\"\n\t\t},\n\t\t\"05158\": {\n\t\t\t\"c16\": 1492,\n\t\t\t\"ca16\": 318,\n\t\t\t\"q16\": 21.3,\n\t\t\t\"hz16\": 309,\n\t\t\t\"c\": \"3\"\n\t\t},\n\t\t\"05162\": {\n\t\t\t\"c16\": 1436,\n\t\t\t\"ca16\": 173,\n\t\t\t\"q16\": 12,\n\t\t\t\"hz16\": 319,\n\t\t\t\"c\": \"3\"\n\t\t},\n\t\t\"05166\": {\n\t\t\t\"c16\": 877,\n\t\t\t\"ca16\": 96,\n\t\t\t\"q16\": 10.9,\n\t\t\t\"hz16\": 295,\n\t\t\t\"c\": \"3\"\n\t\t},\n\t\t\"05170\": {\n\t\t\t\"c16\": 1416,\n\t\t\t\"ca16\": 227,\n\t\t\t\"q16\": 16,\n\t\t\t\"hz16\": 306,\n\t\t\t\"c\": \"3\"\n\t\t},\n\t\t\"05314\": {\n\t\t\t\"c16\": 961,\n\t\t\t\"ca16\": 180,\n\t\t\t\"q16\": 18.7,\n\t\t\t\"hz16\": 301,\n\t\t\t\"c\": \"3\"\n\t\t},\n\t\t\"05315\": {\n\t\t\t\"c16\": 3938,\n\t\t\t\"ca16\": 421,\n\t\t\t\"q16\": 10.7,\n\t\t\t\"hz16\": 371,\n\t\t\t\"c\": \"4\"\n\t\t},\n\t\t\"05316\": {\n\t\t\t\"c16\": 675,\n\t\t\t\"ca16\": 76,\n\t\t\t\"q16\": 11.3,\n\t\t\t\"hz16\": 413,\n\t\t\t\"c\": \"5\"\n\t\t},\n\t\t\"05334\": {\n\t\t\t\"c16\": 1799,\n\t\t\t\"ca16\": 313,\n\t\t\t\"q16\": 17.4,\n\t\t\t\"hz16\": 325,\n\t\t\t\"c\": \"3\"\n\t\t},\n\t\t\"05358\": {\n\t\t\t\"c16\": 752,\n\t\t\t\"ca16\": 149,\n\t\t\t\"q16\": 19.8,\n\t\t\t\"hz16\": 286,\n\t\t\t\"c\": \"3\"\n\t\t},\n\t\t\"05362\": {\n\t\t\t\"c16\": 1231,\n\t\t\t\"ca16\": 217,\n\t\t\t\"q16\": 17.6,\n\t\t\t\"hz16\": 264,\n\t\t\t\"c\": \"2\"\n\t\t},\n\t\t\"05366\": {\n\t\t\t\"c16\": 493,\n\t\t\t\"ca16\": 70,\n\t\t\t\"q16\": 14.2,\n\t\t\t\"hz16\": 258,\n\t\t\t\"c\": \"2\"\n\t\t},\n\t\t\"05370\": {\n\t\t\t\"c16\": 694,\n\t\t\t\"ca16\": 142,\n\t\t\t\"q16\": 20.5,\n\t\t\t\"hz16\": 275,\n\t\t\t\"c\": \"2\"\n\t\t},\n\t\t\"05374\": {\n\t\t\t\"c16\": 522,\n\t\t\t\"ca16\": 120,\n\t\t\t\"q16\": 23,\n\t\t\t\"hz16\": 191,\n\t\t\t\"c\": \"1\"\n\t\t},\n\t\t\"05378\": {\n\t\t\t\"c16\": 743,\n\t\t\t\"ca16\": 99,\n\t\t\t\"q16\": 13.3,\n\t\t\t\"hz16\": 263,\n\t\t\t\"c\": \"2\"\n\t\t},\n\t\t\"05382\": {\n\t\t\t\"c16\": 1729,\n\t\t\t\"ca16\": 319,\n\t\t\t\"q16\": 18.4,\n\t\t\t\"hz16\": 290,\n\t\t\t\"c\": \"3\"\n\t\t},\n\t\t\"05512\": {\n\t\t\t\"c16\": 382,\n\t\t\t\"ca16\": 47,\n\t\t\t\"q16\": 12.3,\n\t\t\t\"hz16\": 326,\n\t\t\t\"c\": \"3\"\n\t\t},\n\t\t\"05513\": {\n\t\t\t\"c16\": 873,\n\t\t\t\"ca16\": 198,\n\t\t\t\"q16\": 22.7,\n\t\t\t\"hz16\": 335,\n\t\t\t\"c\": \"4\"\n\t\t},\n\t\t\"05515\": {\n\t\t\t\"c16\": 849,\n\t\t\t\"ca16\": 156,\n\t\t\t\"q16\": 18.4,\n\t\t\t\"hz16\": 274,\n\t\t\t\"c\": \"2\"\n\t\t},\n\t\t\"05554\": {\n\t\t\t\"c16\": 759,\n\t\t\t\"ca16\": 152,\n\t\t\t\"q16\": 20,\n\t\t\t\"hz16\": 205,\n\t\t\t\"c\": \"1\"\n\t\t},\n\t\t\"05558\": {\n\t\t\t\"c16\": 588,\n\t\t\t\"ca16\": 156,\n\t\t\t\"q16\": 26.5,\n\t\t\t\"hz16\": 269,\n\t\t\t\"c\": \"2\"\n\t\t},\n\t\t\"05562\": {\n\t\t\t\"c16\": 2350,\n\t\t\t\"ca16\": 402,\n\t\t\t\"q16\": 17.1,\n\t\t\t\"hz16\": 380,\n\t\t\t\"c\": \"4\"\n\t\t},\n\t\t\"05566\": {\n\t\t\t\"c16\": 749,\n\t\t\t\"ca16\": 136,\n\t\t\t\"q16\": 18.2,\n\t\t\t\"hz16\": 169,\n\t\t\t\"c\": \"0\"\n\t\t},\n\t\t\"05570\": {\n\t\t\t\"c16\": 827,\n\t\t\t\"ca16\": 161,\n\t\t\t\"q16\": 19.5,\n\t\t\t\"hz16\": 298,\n\t\t\t\"c\": \"3\"\n\t\t},\n\t\t\"05711\": {\n\t\t\t\"c16\": 745,\n\t\t\t\"ca16\": 135,\n\t\t\t\"q16\": 18.1,\n\t\t\t\"hz16\": 224,\n\t\t\t\"c\": \"1\"\n\t\t},\n\t\t\"05754\": {\n\t\t\t\"c16\": 654,\n\t\t\t\"ca16\": 180,\n\t\t\t\"q16\": 27.5,\n\t\t\t\"hz16\": 181,\n\t\t\t\"c\": \"1\"\n\t\t},\n\t\t\"05758\": {\n\t\t\t\"c16\": 562,\n\t\t\t\"ca16\": 61,\n\t\t\t\"q16\": 10.9,\n\t\t\t\"hz16\": 223,\n\t\t\t\"c\": \"1\"\n\t\t},\n\t\t\"05762\": {\n\t\t\t\"c16\": 185,\n\t\t\t\"ca16\": 23,\n\t\t\t\"q16\": 12.4,\n\t\t\t\"hz16\": 128,\n\t\t\t\"c\": \"0\"\n\t\t},\n\t\t\"05766\": {\n\t\t\t\"c16\": 458,\n\t\t\t\"ca16\": 79,\n\t\t\t\"q16\": 17.2,\n\t\t\t\"hz16\": 131,\n\t\t\t\"c\": \"0\"\n\t\t},\n\t\t\"05770\": {\n\t\t\t\"c16\": 581,\n\t\t\t\"ca16\": 111,\n\t\t\t\"q16\": 19.1,\n\t\t\t\"hz16\": 186,\n\t\t\t\"c\": \"1\"\n\t\t},\n\t\t\"05774\": {\n\t\t\t\"c16\": 492,\n\t\t\t\"ca16\": 119,\n\t\t\t\"q16\": 24.2,\n\t\t\t\"hz16\": 162,\n\t\t\t\"c\": \"0\"\n\t\t},\n\t\t\"05911\": {\n\t\t\t\"c16\": 1283,\n\t\t\t\"ca16\": 133,\n\t\t\t\"q16\": 10.4,\n\t\t\t\"hz16\": 352,\n\t\t\t\"c\": \"4\"\n\t\t},\n\t\t\"05913\": {\n\t\t\t\"c16\": 2844,\n\t\t\t\"ca16\": 356,\n\t\t\t\"q16\": 12.5,\n\t\t\t\"hz16\": 485,\n\t\t\t\"c\": \"6\"\n\t\t},\n\t\t\"05914\": {\n\t\t\t\"c16\": 575,\n\t\t\t\"ca16\": 71,\n\t\t\t\"q16\": 12.3,\n\t\t\t\"hz16\": 304,\n\t\t\t\"c\": \"3\"\n\t\t},\n\t\t\"05915\": {\n\t\t\t\"c16\": 534,\n\t\t\t\"ca16\": 115,\n\t\t\t\"q16\": 21.5,\n\t\t\t\"hz16\": 298,\n\t\t\t\"c\": \"3\"\n\t\t},\n\t\t\"05916\": {\n\t\t\t\"c16\": 615,\n\t\t\t\"ca16\": 110,\n\t\t\t\"q16\": 17.9,\n\t\t\t\"hz16\": 395,\n\t\t\t\"c\": \"5\"\n\t\t},\n\t\t\"05954\": {\n\t\t\t\"c16\": 1101,\n\t\t\t\"ca16\": 200,\n\t\t\t\"q16\": 18.2,\n\t\t\t\"hz16\": 338,\n\t\t\t\"c\": \"4\"\n\t\t},\n\t\t\"05958\": {\n\t\t\t\"c16\": 417,\n\t\t\t\"ca16\": 76,\n\t\t\t\"q16\": 18.2,\n\t\t\t\"hz16\": 158,\n\t\t\t\"c\": \"0\"\n\t\t},\n\t\t\"05962\": {\n\t\t\t\"c16\": 905,\n\t\t\t\"ca16\": 200,\n\t\t\t\"q16\": 22.1,\n\t\t\t\"hz16\": 217,\n\t\t\t\"c\": \"1\"\n\t\t},\n\t\t\"05966\": {\n\t\t\t\"c16\": 236,\n\t\t\t\"ca16\": 34,\n\t\t\t\"q16\": 14.4,\n\t\t\t\"hz16\": 173,\n\t\t\t\"c\": \"0\"\n\t\t},\n\t\t\"05970\": {\n\t\t\t\"c16\": 406,\n\t\t\t\"ca16\": 83,\n\t\t\t\"q16\": 20.4,\n\t\t\t\"hz16\": 145,\n\t\t\t\"c\": \"0\"\n\t\t},\n\t\t\"05974\": {\n\t\t\t\"c16\": 601,\n\t\t\t\"ca16\": 144,\n\t\t\t\"q16\": 24,\n\t\t\t\"hz16\": 198,\n\t\t\t\"c\": \"1\"\n\t\t},\n\t\t\"05978\": {\n\t\t\t\"c16\": 1401,\n\t\t\t\"ca16\": 201,\n\t\t\t\"q16\": 14.3,\n\t\t\t\"hz16\": 354,\n\t\t\t\"c\": \"4\"\n\t\t}\n\t};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://github.com/topojson/topojson Version 3.0.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.topojson = global.topojson || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar transform = function(transform) {\n\t  if (transform == null) return identity;\n\t  var x0,\n\t      y0,\n\t      kx = transform.scale[0],\n\t      ky = transform.scale[1],\n\t      dx = transform.translate[0],\n\t      dy = transform.translate[1];\n\t  return function(input, i) {\n\t    if (!i) x0 = y0 = 0;\n\t    var j = 2, n = input.length, output = new Array(n);\n\t    output[0] = (x0 += input[0]) * kx + dx;\n\t    output[1] = (y0 += input[1]) * ky + dy;\n\t    while (j < n) output[j] = input[j], ++j;\n\t    return output;\n\t  };\n\t};\n\t\n\tvar bbox = function(topology) {\n\t  var t = transform(topology.transform), key,\n\t      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\t\n\t  function bboxPoint(p) {\n\t    p = t(p);\n\t    if (p[0] < x0) x0 = p[0];\n\t    if (p[0] > x1) x1 = p[0];\n\t    if (p[1] < y0) y0 = p[1];\n\t    if (p[1] > y1) y1 = p[1];\n\t  }\n\t\n\t  function bboxGeometry(o) {\n\t    switch (o.type) {\n\t      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n\t      case \"Point\": bboxPoint(o.coordinates); break;\n\t      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n\t    }\n\t  }\n\t\n\t  topology.arcs.forEach(function(arc) {\n\t    var i = -1, n = arc.length, p;\n\t    while (++i < n) {\n\t      p = t(arc[i], i);\n\t      if (p[0] < x0) x0 = p[0];\n\t      if (p[0] > x1) x1 = p[0];\n\t      if (p[1] < y0) y0 = p[1];\n\t      if (p[1] > y1) y1 = p[1];\n\t    }\n\t  });\n\t\n\t  for (key in topology.objects) {\n\t    bboxGeometry(topology.objects[key]);\n\t  }\n\t\n\t  return [x0, y0, x1, y1];\n\t};\n\t\n\tvar reverse = function(array, n) {\n\t  var t, j = array.length, i = j - n;\n\t  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n\t};\n\t\n\tvar feature = function(topology, o) {\n\t  return o.type === \"GeometryCollection\"\n\t      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature$1(topology, o); })}\n\t      : feature$1(topology, o);\n\t};\n\t\n\tfunction feature$1(topology, o) {\n\t  var id = o.id,\n\t      bbox = o.bbox,\n\t      properties = o.properties == null ? {} : o.properties,\n\t      geometry = object(topology, o);\n\t  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n\t      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n\t      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n\t}\n\t\n\tfunction object(topology, o) {\n\t  var transformPoint = transform(topology.transform),\n\t      arcs = topology.arcs;\n\t\n\t  function arc(i, points) {\n\t    if (points.length) points.pop();\n\t    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n\t      points.push(transformPoint(a[k], k));\n\t    }\n\t    if (i < 0) reverse(points, n);\n\t  }\n\t\n\t  function point(p) {\n\t    return transformPoint(p);\n\t  }\n\t\n\t  function line(arcs) {\n\t    var points = [];\n\t    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n\t    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n\t    return points;\n\t  }\n\t\n\t  function ring(arcs) {\n\t    var points = line(arcs);\n\t    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n\t    return points;\n\t  }\n\t\n\t  function polygon(arcs) {\n\t    return arcs.map(ring);\n\t  }\n\t\n\t  function geometry(o) {\n\t    var type = o.type, coordinates;\n\t    switch (type) {\n\t      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n\t      case \"Point\": coordinates = point(o.coordinates); break;\n\t      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n\t      case \"LineString\": coordinates = line(o.arcs); break;\n\t      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n\t      case \"Polygon\": coordinates = polygon(o.arcs); break;\n\t      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n\t      default: return null;\n\t    }\n\t    return {type: type, coordinates: coordinates};\n\t  }\n\t\n\t  return geometry(o);\n\t}\n\t\n\tvar stitch = function(topology, arcs) {\n\t  var stitchedArcs = {},\n\t      fragmentByStart = {},\n\t      fragmentByEnd = {},\n\t      fragments = [],\n\t      emptyIndex = -1;\n\t\n\t  // Stitch empty arcs first, since they may be subsumed by other arcs.\n\t  arcs.forEach(function(i, j) {\n\t    var arc = topology.arcs[i < 0 ? ~i : i], t;\n\t    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n\t      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n\t    }\n\t  });\n\t\n\t  arcs.forEach(function(i) {\n\t    var e = ends(i),\n\t        start = e[0],\n\t        end = e[1],\n\t        f, g;\n\t\n\t    if (f = fragmentByEnd[start]) {\n\t      delete fragmentByEnd[f.end];\n\t      f.push(i);\n\t      f.end = end;\n\t      if (g = fragmentByStart[end]) {\n\t        delete fragmentByStart[g.start];\n\t        var fg = g === f ? f : f.concat(g);\n\t        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n\t      } else {\n\t        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t      }\n\t    } else if (f = fragmentByStart[end]) {\n\t      delete fragmentByStart[f.start];\n\t      f.unshift(i);\n\t      f.start = start;\n\t      if (g = fragmentByEnd[start]) {\n\t        delete fragmentByEnd[g.end];\n\t        var gf = g === f ? f : g.concat(f);\n\t        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n\t      } else {\n\t        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t      }\n\t    } else {\n\t      f = [i];\n\t      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n\t    }\n\t  });\n\t\n\t  function ends(i) {\n\t    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n\t    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n\t    else p1 = arc[arc.length - 1];\n\t    return i < 0 ? [p1, p0] : [p0, p1];\n\t  }\n\t\n\t  function flush(fragmentByEnd, fragmentByStart) {\n\t    for (var k in fragmentByEnd) {\n\t      var f = fragmentByEnd[k];\n\t      delete fragmentByStart[f.start];\n\t      delete f.start;\n\t      delete f.end;\n\t      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n\t      fragments.push(f);\n\t    }\n\t  }\n\t\n\t  flush(fragmentByEnd, fragmentByStart);\n\t  flush(fragmentByStart, fragmentByEnd);\n\t  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\t\n\t  return fragments;\n\t};\n\t\n\tvar mesh = function(topology) {\n\t  return object(topology, meshArcs.apply(this, arguments));\n\t};\n\t\n\tfunction meshArcs(topology, object$$1, filter) {\n\t  var arcs, i, n;\n\t  if (arguments.length > 1) arcs = extractArcs(topology, object$$1, filter);\n\t  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n\t  return {type: \"MultiLineString\", arcs: stitch(topology, arcs)};\n\t}\n\t\n\tfunction extractArcs(topology, object$$1, filter) {\n\t  var arcs = [],\n\t      geomsByArc = [],\n\t      geom;\n\t\n\t  function extract0(i) {\n\t    var j = i < 0 ? ~i : i;\n\t    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n\t  }\n\t\n\t  function extract1(arcs) {\n\t    arcs.forEach(extract0);\n\t  }\n\t\n\t  function extract2(arcs) {\n\t    arcs.forEach(extract1);\n\t  }\n\t\n\t  function extract3(arcs) {\n\t    arcs.forEach(extract2);\n\t  }\n\t\n\t  function geometry(o) {\n\t    switch (geom = o, o.type) {\n\t      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n\t      case \"LineString\": extract1(o.arcs); break;\n\t      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n\t      case \"MultiPolygon\": extract3(o.arcs); break;\n\t    }\n\t  }\n\t\n\t  geometry(object$$1);\n\t\n\t  geomsByArc.forEach(filter == null\n\t      ? function(geoms) { arcs.push(geoms[0].i); }\n\t      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\t\n\t  return arcs;\n\t}\n\t\n\tfunction planarRingArea(ring) {\n\t  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n\t  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n\t  return Math.abs(area); // Note: doubled area!\n\t}\n\t\n\tvar merge = function(topology) {\n\t  return object(topology, mergeArcs.apply(this, arguments));\n\t};\n\t\n\tfunction mergeArcs(topology, objects) {\n\t  var polygonsByArc = {},\n\t      polygons = [],\n\t      groups = [];\n\t\n\t  objects.forEach(geometry);\n\t\n\t  function geometry(o) {\n\t    switch (o.type) {\n\t      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n\t      case \"Polygon\": extract(o.arcs); break;\n\t      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n\t    }\n\t  }\n\t\n\t  function extract(polygon) {\n\t    polygon.forEach(function(ring) {\n\t      ring.forEach(function(arc) {\n\t        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n\t      });\n\t    });\n\t    polygons.push(polygon);\n\t  }\n\t\n\t  function area(ring) {\n\t    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n\t  }\n\t\n\t  polygons.forEach(function(polygon) {\n\t    if (!polygon._) {\n\t      var group = [],\n\t          neighbors = [polygon];\n\t      polygon._ = 1;\n\t      groups.push(group);\n\t      while (polygon = neighbors.pop()) {\n\t        group.push(polygon);\n\t        polygon.forEach(function(ring) {\n\t          ring.forEach(function(arc) {\n\t            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n\t              if (!polygon._) {\n\t                polygon._ = 1;\n\t                neighbors.push(polygon);\n\t              }\n\t            });\n\t          });\n\t        });\n\t      }\n\t    }\n\t  });\n\t\n\t  polygons.forEach(function(polygon) {\n\t    delete polygon._;\n\t  });\n\t\n\t  return {\n\t    type: \"MultiPolygon\",\n\t    arcs: groups.map(function(polygons) {\n\t      var arcs = [], n;\n\t\n\t      // Extract the exterior (unique) arcs.\n\t      polygons.forEach(function(polygon) {\n\t        polygon.forEach(function(ring) {\n\t          ring.forEach(function(arc) {\n\t            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n\t              arcs.push(arc);\n\t            }\n\t          });\n\t        });\n\t      });\n\t\n\t      // Stitch the arcs into one or more rings.\n\t      arcs = stitch(topology, arcs);\n\t\n\t      // If more than one ring is returned,\n\t      // at most one of these rings can be the exterior;\n\t      // choose the one with the greatest absolute area.\n\t      if ((n = arcs.length) > 1) {\n\t        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n\t          if ((ki = area(arcs[i])) > k) {\n\t            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n\t          }\n\t        }\n\t      }\n\t\n\t      return arcs;\n\t    })\n\t  };\n\t}\n\t\n\tvar bisect = function(a, x) {\n\t  var lo = 0, hi = a.length;\n\t  while (lo < hi) {\n\t    var mid = lo + hi >>> 1;\n\t    if (a[mid] < x) lo = mid + 1;\n\t    else hi = mid;\n\t  }\n\t  return lo;\n\t};\n\t\n\tvar neighbors = function(objects) {\n\t  var indexesByArc = {}, // arc index -> array of object indexes\n\t      neighbors = objects.map(function() { return []; });\n\t\n\t  function line(arcs, i) {\n\t    arcs.forEach(function(a) {\n\t      if (a < 0) a = ~a;\n\t      var o = indexesByArc[a];\n\t      if (o) o.push(i);\n\t      else indexesByArc[a] = [i];\n\t    });\n\t  }\n\t\n\t  function polygon(arcs, i) {\n\t    arcs.forEach(function(arc) { line(arc, i); });\n\t  }\n\t\n\t  function geometry(o, i) {\n\t    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n\t    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n\t  }\n\t\n\t  var geometryType = {\n\t    LineString: line,\n\t    MultiLineString: polygon,\n\t    Polygon: polygon,\n\t    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n\t  };\n\t\n\t  objects.forEach(geometry);\n\t\n\t  for (var i in indexesByArc) {\n\t    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n\t      for (var k = j + 1; k < m; ++k) {\n\t        var ij = indexes[j], ik = indexes[k], n;\n\t        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n\t        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n\t      }\n\t    }\n\t  }\n\t\n\t  return neighbors;\n\t};\n\t\n\tvar untransform = function(transform) {\n\t  if (transform == null) return identity;\n\t  var x0,\n\t      y0,\n\t      kx = transform.scale[0],\n\t      ky = transform.scale[1],\n\t      dx = transform.translate[0],\n\t      dy = transform.translate[1];\n\t  return function(input, i) {\n\t    if (!i) x0 = y0 = 0;\n\t    var j = 2,\n\t        n = input.length,\n\t        output = new Array(n),\n\t        x1 = Math.round((input[0] - dx) / kx),\n\t        y1 = Math.round((input[1] - dy) / ky);\n\t    output[0] = x1 - x0, x0 = x1;\n\t    output[1] = y1 - y0, y0 = y1;\n\t    while (j < n) output[j] = input[j], ++j;\n\t    return output;\n\t  };\n\t};\n\t\n\tvar quantize = function(topology, transform) {\n\t  if (topology.transform) throw new Error(\"already quantized\");\n\t\n\t  if (!transform || !transform.scale) {\n\t    if (!((n = Math.floor(transform)) >= 2)) throw new Error(\"n must be \\u22652\");\n\t    box = topology.bbox || bbox(topology);\n\t    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;\n\t    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};\n\t  } else {\n\t    box = topology.bbox;\n\t  }\n\t\n\t  var t = untransform(transform), box, key, inputs = topology.objects, outputs = {};\n\t\n\t  function quantizePoint(point) {\n\t    return t(point);\n\t  }\n\t\n\t  function quantizeGeometry(input) {\n\t    var output;\n\t    switch (input.type) {\n\t      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n\t      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n\t      case \"MultiPoint\": output = {type: \"MultiPoint\", coordinates: input.coordinates.map(quantizePoint)}; break;\n\t      default: return input;\n\t    }\n\t    if (input.id != null) output.id = input.id;\n\t    if (input.bbox != null) output.bbox = input.bbox;\n\t    if (input.properties != null) output.properties = input.properties;\n\t    return output;\n\t  }\n\t\n\t  function quantizeArc(input) {\n\t    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic\n\t    output[0] = t(input[0], 0);\n\t    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points\n\t    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points\n\t    output.length = j;\n\t    return output;\n\t  }\n\t\n\t  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);\n\t\n\t  return {\n\t    type: \"Topology\",\n\t    bbox: box,\n\t    transform: transform,\n\t    objects: outputs,\n\t    arcs: topology.arcs.map(quantizeArc)\n\t  };\n\t};\n\t\n\t// Computes the bounding box of the specified hash of GeoJSON objects.\n\tvar bounds = function(objects) {\n\t  var x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  function boundGeometry(geometry) {\n\t    if (geometry != null && boundGeometryType.hasOwnProperty(geometry.type)) boundGeometryType[geometry.type](geometry);\n\t  }\n\t\n\t  var boundGeometryType = {\n\t    GeometryCollection: function(o) { o.geometries.forEach(boundGeometry); },\n\t    Point: function(o) { boundPoint(o.coordinates); },\n\t    MultiPoint: function(o) { o.coordinates.forEach(boundPoint); },\n\t    LineString: function(o) { boundLine(o.arcs); },\n\t    MultiLineString: function(o) { o.arcs.forEach(boundLine); },\n\t    Polygon: function(o) { o.arcs.forEach(boundLine); },\n\t    MultiPolygon: function(o) { o.arcs.forEach(boundMultiLine); }\n\t  };\n\t\n\t  function boundPoint(coordinates) {\n\t    var x = coordinates[0],\n\t        y = coordinates[1];\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  function boundLine(coordinates) {\n\t    coordinates.forEach(boundPoint);\n\t  }\n\t\n\t  function boundMultiLine(coordinates) {\n\t    coordinates.forEach(boundLine);\n\t  }\n\t\n\t  for (var key in objects) {\n\t    boundGeometry(objects[key]);\n\t  }\n\t\n\t  return x1 >= x0 && y1 >= y0 ? [x0, y0, x1, y1] : undefined;\n\t};\n\t\n\tvar hashset = function(size, hash, equal, type, empty) {\n\t  if (arguments.length === 3) {\n\t    type = Array;\n\t    empty = null;\n\t  }\n\t\n\t  var store = new type(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n\t      mask = size - 1;\n\t\n\t  for (var i = 0; i < size; ++i) {\n\t    store[i] = empty;\n\t  }\n\t\n\t  function add(value) {\n\t    var index = hash(value) & mask,\n\t        match = store[index],\n\t        collisions = 0;\n\t    while (match != empty) {\n\t      if (equal(match, value)) return true;\n\t      if (++collisions >= size) throw new Error(\"full hashset\");\n\t      match = store[index = (index + 1) & mask];\n\t    }\n\t    store[index] = value;\n\t    return true;\n\t  }\n\t\n\t  function has(value) {\n\t    var index = hash(value) & mask,\n\t        match = store[index],\n\t        collisions = 0;\n\t    while (match != empty) {\n\t      if (equal(match, value)) return true;\n\t      if (++collisions >= size) break;\n\t      match = store[index = (index + 1) & mask];\n\t    }\n\t    return false;\n\t  }\n\t\n\t  function values() {\n\t    var values = [];\n\t    for (var i = 0, n = store.length; i < n; ++i) {\n\t      var match = store[i];\n\t      if (match != empty) values.push(match);\n\t    }\n\t    return values;\n\t  }\n\t\n\t  return {\n\t    add: add,\n\t    has: has,\n\t    values: values\n\t  };\n\t};\n\t\n\tvar hashmap = function(size, hash, equal, keyType, keyEmpty, valueType) {\n\t  if (arguments.length === 3) {\n\t    keyType = valueType = Array;\n\t    keyEmpty = null;\n\t  }\n\t\n\t  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n\t      valstore = new valueType(size),\n\t      mask = size - 1;\n\t\n\t  for (var i = 0; i < size; ++i) {\n\t    keystore[i] = keyEmpty;\n\t  }\n\t\n\t  function set(key, value) {\n\t    var index = hash(key) & mask,\n\t        matchKey = keystore[index],\n\t        collisions = 0;\n\t    while (matchKey != keyEmpty) {\n\t      if (equal(matchKey, key)) return valstore[index] = value;\n\t      if (++collisions >= size) throw new Error(\"full hashmap\");\n\t      matchKey = keystore[index = (index + 1) & mask];\n\t    }\n\t    keystore[index] = key;\n\t    valstore[index] = value;\n\t    return value;\n\t  }\n\t\n\t  function maybeSet(key, value) {\n\t    var index = hash(key) & mask,\n\t        matchKey = keystore[index],\n\t        collisions = 0;\n\t    while (matchKey != keyEmpty) {\n\t      if (equal(matchKey, key)) return valstore[index];\n\t      if (++collisions >= size) throw new Error(\"full hashmap\");\n\t      matchKey = keystore[index = (index + 1) & mask];\n\t    }\n\t    keystore[index] = key;\n\t    valstore[index] = value;\n\t    return value;\n\t  }\n\t\n\t  function get(key, missingValue) {\n\t    var index = hash(key) & mask,\n\t        matchKey = keystore[index],\n\t        collisions = 0;\n\t    while (matchKey != keyEmpty) {\n\t      if (equal(matchKey, key)) return valstore[index];\n\t      if (++collisions >= size) break;\n\t      matchKey = keystore[index = (index + 1) & mask];\n\t    }\n\t    return missingValue;\n\t  }\n\t\n\t  function keys() {\n\t    var keys = [];\n\t    for (var i = 0, n = keystore.length; i < n; ++i) {\n\t      var matchKey = keystore[i];\n\t      if (matchKey != keyEmpty) keys.push(matchKey);\n\t    }\n\t    return keys;\n\t  }\n\t\n\t  return {\n\t    set: set,\n\t    maybeSet: maybeSet, // set if unset\n\t    get: get,\n\t    keys: keys\n\t  };\n\t};\n\t\n\tvar equalPoint = function(pointA, pointB) {\n\t  return pointA[0] === pointB[0] && pointA[1] === pointB[1];\n\t};\n\t\n\t// TODO if quantized, use simpler Int32 hashing?\n\t\n\tvar buffer = new ArrayBuffer(16);\n\tvar floats = new Float64Array(buffer);\n\tvar uints = new Uint32Array(buffer);\n\t\n\tvar hashPoint = function(point) {\n\t  floats[0] = point[0];\n\t  floats[1] = point[1];\n\t  var hash = uints[0] ^ uints[1];\n\t  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n\t  return hash & 0x7fffffff;\n\t};\n\t\n\t// Given an extracted (pre-)topology, identifies all of the junctions. These are\n\t// the points at which arcs (lines or rings) will need to be cut so that each\n\t// arc is represented uniquely.\n\t//\n\t// A junction is a point where at least one arc deviates from another arc going\n\t// through the same point. For example, consider the point B. If there is a arc\n\t// through ABC and another arc through CBA, then B is not a junction because in\n\t// both cases the adjacent point pairs are {A,C}. However, if there is an\n\t// additional arc ABD, then {A,D} != {A,C}, and thus B becomes a junction.\n\t//\n\t// For a closed ring ABCA, the first point A’s adjacent points are the second\n\t// and last point {B,C}. For a line, the first and last point are always\n\t// considered junctions, even if the line is closed; this ensures that a closed\n\t// line is never rotated.\n\tvar join = function(topology) {\n\t  var coordinates = topology.coordinates,\n\t      lines = topology.lines,\n\t      rings = topology.rings,\n\t      indexes = index(),\n\t      visitedByIndex = new Int32Array(coordinates.length),\n\t      leftByIndex = new Int32Array(coordinates.length),\n\t      rightByIndex = new Int32Array(coordinates.length),\n\t      junctionByIndex = new Int8Array(coordinates.length),\n\t      junctionCount = 0, // upper bound on number of junctions\n\t      i, n,\n\t      previousIndex,\n\t      currentIndex,\n\t      nextIndex;\n\t\n\t  for (i = 0, n = coordinates.length; i < n; ++i) {\n\t    visitedByIndex[i] = leftByIndex[i] = rightByIndex[i] = -1;\n\t  }\n\t\n\t  for (i = 0, n = lines.length; i < n; ++i) {\n\t    var line = lines[i],\n\t        lineStart = line[0],\n\t        lineEnd = line[1];\n\t    currentIndex = indexes[lineStart];\n\t    nextIndex = indexes[++lineStart];\n\t    ++junctionCount, junctionByIndex[currentIndex] = 1; // start\n\t    while (++lineStart <= lineEnd) {\n\t      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[lineStart]);\n\t    }\n\t    ++junctionCount, junctionByIndex[nextIndex] = 1; // end\n\t  }\n\t\n\t  for (i = 0, n = coordinates.length; i < n; ++i) {\n\t    visitedByIndex[i] = -1;\n\t  }\n\t\n\t  for (i = 0, n = rings.length; i < n; ++i) {\n\t    var ring = rings[i],\n\t        ringStart = ring[0] + 1,\n\t        ringEnd = ring[1];\n\t    previousIndex = indexes[ringEnd - 1];\n\t    currentIndex = indexes[ringStart - 1];\n\t    nextIndex = indexes[ringStart];\n\t    sequence(i, previousIndex, currentIndex, nextIndex);\n\t    while (++ringStart <= ringEnd) {\n\t      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[ringStart]);\n\t    }\n\t  }\n\t\n\t  function sequence(i, previousIndex, currentIndex, nextIndex) {\n\t    if (visitedByIndex[currentIndex] === i) return; // ignore self-intersection\n\t    visitedByIndex[currentIndex] = i;\n\t    var leftIndex = leftByIndex[currentIndex];\n\t    if (leftIndex >= 0) {\n\t      var rightIndex = rightByIndex[currentIndex];\n\t      if ((leftIndex !== previousIndex || rightIndex !== nextIndex)\n\t        && (leftIndex !== nextIndex || rightIndex !== previousIndex)) {\n\t        ++junctionCount, junctionByIndex[currentIndex] = 1;\n\t      }\n\t    } else {\n\t      leftByIndex[currentIndex] = previousIndex;\n\t      rightByIndex[currentIndex] = nextIndex;\n\t    }\n\t  }\n\t\n\t  function index() {\n\t    var indexByPoint = hashmap(coordinates.length * 1.4, hashIndex, equalIndex, Int32Array, -1, Int32Array),\n\t        indexes = new Int32Array(coordinates.length);\n\t\n\t    for (var i = 0, n = coordinates.length; i < n; ++i) {\n\t      indexes[i] = indexByPoint.maybeSet(i, i);\n\t    }\n\t\n\t    return indexes;\n\t  }\n\t\n\t  function hashIndex(i) {\n\t    return hashPoint(coordinates[i]);\n\t  }\n\t\n\t  function equalIndex(i, j) {\n\t    return equalPoint(coordinates[i], coordinates[j]);\n\t  }\n\t\n\t  visitedByIndex = leftByIndex = rightByIndex = null;\n\t\n\t  var junctionByPoint = hashset(junctionCount * 1.4, hashPoint, equalPoint), j;\n\t\n\t  // Convert back to a standard hashset by point for caller convenience.\n\t  for (i = 0, n = coordinates.length; i < n; ++i) {\n\t    if (junctionByIndex[j = indexes[i]]) {\n\t      junctionByPoint.add(coordinates[j]);\n\t    }\n\t  }\n\t\n\t  return junctionByPoint;\n\t};\n\t\n\t// Given an extracted (pre-)topology, cuts (or rotates) arcs so that all shared\n\t// point sequences are identified. The topology can then be subsequently deduped\n\t// to remove exact duplicate arcs.\n\tvar cut = function(topology) {\n\t  var junctions = join(topology),\n\t      coordinates = topology.coordinates,\n\t      lines = topology.lines,\n\t      rings = topology.rings,\n\t      next,\n\t      i, n;\n\t\n\t  for (i = 0, n = lines.length; i < n; ++i) {\n\t    var line = lines[i],\n\t        lineMid = line[0],\n\t        lineEnd = line[1];\n\t    while (++lineMid < lineEnd) {\n\t      if (junctions.has(coordinates[lineMid])) {\n\t        next = {0: lineMid, 1: line[1]};\n\t        line[1] = lineMid;\n\t        line = line.next = next;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (i = 0, n = rings.length; i < n; ++i) {\n\t    var ring = rings[i],\n\t        ringStart = ring[0],\n\t        ringMid = ringStart,\n\t        ringEnd = ring[1],\n\t        ringFixed = junctions.has(coordinates[ringStart]);\n\t    while (++ringMid < ringEnd) {\n\t      if (junctions.has(coordinates[ringMid])) {\n\t        if (ringFixed) {\n\t          next = {0: ringMid, 1: ring[1]};\n\t          ring[1] = ringMid;\n\t          ring = ring.next = next;\n\t        } else { // For the first junction, we can rotate rather than cut.\n\t          rotateArray(coordinates, ringStart, ringEnd, ringEnd - ringMid);\n\t          coordinates[ringEnd] = coordinates[ringStart];\n\t          ringFixed = true;\n\t          ringMid = ringStart; // restart; we may have skipped junctions\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return topology;\n\t};\n\t\n\tfunction rotateArray(array, start, end, offset) {\n\t  reverse$1(array, start, end);\n\t  reverse$1(array, start, start + offset);\n\t  reverse$1(array, start + offset, end);\n\t}\n\t\n\tfunction reverse$1(array, start, end) {\n\t  for (var mid = start + ((end-- - start) >> 1), t; start < mid; ++start, --end) {\n\t    t = array[start], array[start] = array[end], array[end] = t;\n\t  }\n\t}\n\t\n\t// Given a cut topology, combines duplicate arcs.\n\tvar dedup = function(topology) {\n\t  var coordinates = topology.coordinates,\n\t      lines = topology.lines, line,\n\t      rings = topology.rings, ring,\n\t      arcCount = lines.length + rings.length,\n\t      i, n;\n\t\n\t  delete topology.lines;\n\t  delete topology.rings;\n\t\n\t  // Count the number of (non-unique) arcs to initialize the hashmap safely.\n\t  for (i = 0, n = lines.length; i < n; ++i) {\n\t    line = lines[i]; while (line = line.next) ++arcCount;\n\t  }\n\t  for (i = 0, n = rings.length; i < n; ++i) {\n\t    ring = rings[i]; while (ring = ring.next) ++arcCount;\n\t  }\n\t\n\t  var arcsByEnd = hashmap(arcCount * 2 * 1.4, hashPoint, equalPoint),\n\t      arcs = topology.arcs = [];\n\t\n\t  for (i = 0, n = lines.length; i < n; ++i) {\n\t    line = lines[i];\n\t    do {\n\t      dedupLine(line);\n\t    } while (line = line.next);\n\t  }\n\t\n\t  for (i = 0, n = rings.length; i < n; ++i) {\n\t    ring = rings[i];\n\t    if (ring.next) { // arc is no longer closed\n\t      do {\n\t        dedupLine(ring);\n\t      } while (ring = ring.next);\n\t    } else {\n\t      dedupRing(ring);\n\t    }\n\t  }\n\t\n\t  function dedupLine(arc) {\n\t    var startPoint,\n\t        endPoint,\n\t        startArcs, startArc,\n\t        endArcs, endArc,\n\t        i, n;\n\t\n\t    // Does this arc match an existing arc in order?\n\t    if (startArcs = arcsByEnd.get(startPoint = coordinates[arc[0]])) {\n\t      for (i = 0, n = startArcs.length; i < n; ++i) {\n\t        startArc = startArcs[i];\n\t        if (equalLine(startArc, arc)) {\n\t          arc[0] = startArc[0];\n\t          arc[1] = startArc[1];\n\t          return;\n\t        }\n\t      }\n\t    }\n\t\n\t    // Does this arc match an existing arc in reverse order?\n\t    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[1]])) {\n\t      for (i = 0, n = endArcs.length; i < n; ++i) {\n\t        endArc = endArcs[i];\n\t        if (reverseEqualLine(endArc, arc)) {\n\t          arc[1] = endArc[0];\n\t          arc[0] = endArc[1];\n\t          return;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (startArcs) startArcs.push(arc); else arcsByEnd.set(startPoint, [arc]);\n\t    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n\t    arcs.push(arc);\n\t  }\n\t\n\t  function dedupRing(arc) {\n\t    var endPoint,\n\t        endArcs,\n\t        endArc,\n\t        i, n;\n\t\n\t    // Does this arc match an existing line in order, or reverse order?\n\t    // Rings are closed, so their start point and end point is the same.\n\t    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0]])) {\n\t      for (i = 0, n = endArcs.length; i < n; ++i) {\n\t        endArc = endArcs[i];\n\t        if (equalRing(endArc, arc)) {\n\t          arc[0] = endArc[0];\n\t          arc[1] = endArc[1];\n\t          return;\n\t        }\n\t        if (reverseEqualRing(endArc, arc)) {\n\t          arc[0] = endArc[1];\n\t          arc[1] = endArc[0];\n\t          return;\n\t        }\n\t      }\n\t    }\n\t\n\t    // Otherwise, does this arc match an existing ring in order, or reverse order?\n\t    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n\t      for (i = 0, n = endArcs.length; i < n; ++i) {\n\t        endArc = endArcs[i];\n\t        if (equalRing(endArc, arc)) {\n\t          arc[0] = endArc[0];\n\t          arc[1] = endArc[1];\n\t          return;\n\t        }\n\t        if (reverseEqualRing(endArc, arc)) {\n\t          arc[0] = endArc[1];\n\t          arc[1] = endArc[0];\n\t          return;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n\t    arcs.push(arc);\n\t  }\n\t\n\t  function equalLine(arcA, arcB) {\n\t    var ia = arcA[0], ib = arcB[0],\n\t        ja = arcA[1], jb = arcB[1];\n\t    if (ia - ja !== ib - jb) return false;\n\t    for (; ia <= ja; ++ia, ++ib) if (!equalPoint(coordinates[ia], coordinates[ib])) return false;\n\t    return true;\n\t  }\n\t\n\t  function reverseEqualLine(arcA, arcB) {\n\t    var ia = arcA[0], ib = arcB[0],\n\t        ja = arcA[1], jb = arcB[1];\n\t    if (ia - ja !== ib - jb) return false;\n\t    for (; ia <= ja; ++ia, --jb) if (!equalPoint(coordinates[ia], coordinates[jb])) return false;\n\t    return true;\n\t  }\n\t\n\t  function equalRing(arcA, arcB) {\n\t    var ia = arcA[0], ib = arcB[0],\n\t        ja = arcA[1], jb = arcB[1],\n\t        n = ja - ia;\n\t    if (n !== jb - ib) return false;\n\t    var ka = findMinimumOffset(arcA),\n\t        kb = findMinimumOffset(arcB);\n\t    for (var i = 0; i < n; ++i) {\n\t      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[ib + (i + kb) % n])) return false;\n\t    }\n\t    return true;\n\t  }\n\t\n\t  function reverseEqualRing(arcA, arcB) {\n\t    var ia = arcA[0], ib = arcB[0],\n\t        ja = arcA[1], jb = arcB[1],\n\t        n = ja - ia;\n\t    if (n !== jb - ib) return false;\n\t    var ka = findMinimumOffset(arcA),\n\t        kb = n - findMinimumOffset(arcB);\n\t    for (var i = 0; i < n; ++i) {\n\t      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[jb - (i + kb) % n])) return false;\n\t    }\n\t    return true;\n\t  }\n\t\n\t  // Rings are rotated to a consistent, but arbitrary, start point.\n\t  // This is necessary to detect when a ring and a rotated copy are dupes.\n\t  function findMinimumOffset(arc) {\n\t    var start = arc[0],\n\t        end = arc[1],\n\t        mid = start,\n\t        minimum = mid,\n\t        minimumPoint = coordinates[mid];\n\t    while (++mid < end) {\n\t      var point = coordinates[mid];\n\t      if (point[0] < minimumPoint[0] || point[0] === minimumPoint[0] && point[1] < minimumPoint[1]) {\n\t        minimum = mid;\n\t        minimumPoint = point;\n\t      }\n\t    }\n\t    return minimum - start;\n\t  }\n\t\n\t  return topology;\n\t};\n\t\n\t// Given an array of arcs in absolute (but already quantized!) coordinates,\n\t// converts to fixed-point delta encoding.\n\t// This is a destructive operation that modifies the given arcs!\n\tvar delta = function(arcs) {\n\t  var i = -1,\n\t      n = arcs.length;\n\t\n\t  while (++i < n) {\n\t    var arc = arcs[i],\n\t        j = 0,\n\t        k = 1,\n\t        m = arc.length,\n\t        point = arc[0],\n\t        x0 = point[0],\n\t        y0 = point[1],\n\t        x1,\n\t        y1;\n\t\n\t    while (++j < m) {\n\t      point = arc[j], x1 = point[0], y1 = point[1];\n\t      if (x1 !== x0 || y1 !== y0) arc[k++] = [x1 - x0, y1 - y0], x0 = x1, y0 = y1;\n\t    }\n\t\n\t    if (k === 1) arc[k++] = [0, 0]; // Each arc must be an array of two or more positions.\n\t\n\t    arc.length = k;\n\t  }\n\t\n\t  return arcs;\n\t};\n\t\n\t// Extracts the lines and rings from the specified hash of geometry objects.\n\t//\n\t// Returns an object with three properties:\n\t//\n\t// * coordinates - shared buffer of [x, y] coordinates\n\t// * lines - lines extracted from the hash, of the form [start, end]\n\t// * rings - rings extracted from the hash, of the form [start, end]\n\t//\n\t// For each ring or line, start and end represent inclusive indexes into the\n\t// coordinates buffer. For rings (and closed lines), coordinates[start] equals\n\t// coordinates[end].\n\t//\n\t// For each line or polygon geometry in the input hash, including nested\n\t// geometries as in geometry collections, the `coordinates` array is replaced\n\t// with an equivalent `arcs` array that, for each line (for line string\n\t// geometries) or ring (for polygon geometries), points to one of the above\n\t// lines or rings.\n\tvar extract = function(objects) {\n\t  var index = -1,\n\t      lines = [],\n\t      rings = [],\n\t      coordinates = [];\n\t\n\t  function extractGeometry(geometry) {\n\t    if (geometry && extractGeometryType.hasOwnProperty(geometry.type)) extractGeometryType[geometry.type](geometry);\n\t  }\n\t\n\t  var extractGeometryType = {\n\t    GeometryCollection: function(o) { o.geometries.forEach(extractGeometry); },\n\t    LineString: function(o) { o.arcs = extractLine(o.arcs); },\n\t    MultiLineString: function(o) { o.arcs = o.arcs.map(extractLine); },\n\t    Polygon: function(o) { o.arcs = o.arcs.map(extractRing); },\n\t    MultiPolygon: function(o) { o.arcs = o.arcs.map(extractMultiRing); }\n\t  };\n\t\n\t  function extractLine(line) {\n\t    for (var i = 0, n = line.length; i < n; ++i) coordinates[++index] = line[i];\n\t    var arc = {0: index - n + 1, 1: index};\n\t    lines.push(arc);\n\t    return arc;\n\t  }\n\t\n\t  function extractRing(ring) {\n\t    for (var i = 0, n = ring.length; i < n; ++i) coordinates[++index] = ring[i];\n\t    var arc = {0: index - n + 1, 1: index};\n\t    rings.push(arc);\n\t    return arc;\n\t  }\n\t\n\t  function extractMultiRing(rings) {\n\t    return rings.map(extractRing);\n\t  }\n\t\n\t  for (var key in objects) {\n\t    extractGeometry(objects[key]);\n\t  }\n\t\n\t  return {\n\t    type: \"Topology\",\n\t    coordinates: coordinates,\n\t    lines: lines,\n\t    rings: rings,\n\t    objects: objects\n\t  };\n\t};\n\t\n\t// Given a hash of GeoJSON objects, returns a hash of GeoJSON geometry objects.\n\t// Any null input geometry objects are represented as {type: null} in the output.\n\t// Any feature.{id,properties,bbox} are transferred to the output geometry object.\n\t// Each output geometry object is a shallow copy of the input (e.g., properties, coordinates)!\n\tvar geometry = function(inputs) {\n\t  var outputs = {}, key;\n\t  for (key in inputs) outputs[key] = geomifyObject(inputs[key]);\n\t  return outputs;\n\t};\n\t\n\tfunction geomifyObject(input) {\n\t  return input == null ? {type: null}\n\t      : (input.type === \"FeatureCollection\" ? geomifyFeatureCollection\n\t      : input.type === \"Feature\" ? geomifyFeature\n\t      : geomifyGeometry)(input);\n\t}\n\t\n\tfunction geomifyFeatureCollection(input) {\n\t  var output = {type: \"GeometryCollection\", geometries: input.features.map(geomifyFeature)};\n\t  if (input.bbox != null) output.bbox = input.bbox;\n\t  return output;\n\t}\n\t\n\tfunction geomifyFeature(input) {\n\t  var output = geomifyGeometry(input.geometry), key; // eslint-disable-line no-unused-vars\n\t  if (input.id != null) output.id = input.id;\n\t  if (input.bbox != null) output.bbox = input.bbox;\n\t  for (key in input.properties) { output.properties = input.properties; break; }\n\t  return output;\n\t}\n\t\n\tfunction geomifyGeometry(input) {\n\t  if (input == null) return {type: null};\n\t  var output = input.type === \"GeometryCollection\" ? {type: \"GeometryCollection\", geometries: input.geometries.map(geomifyGeometry)}\n\t      : input.type === \"Point\" || input.type === \"MultiPoint\" ? {type: input.type, coordinates: input.coordinates}\n\t      : {type: input.type, arcs: input.coordinates}; // TODO Check for unknown types?\n\t  if (input.bbox != null) output.bbox = input.bbox;\n\t  return output;\n\t}\n\t\n\tvar prequantize = function(objects, bbox, n) {\n\t  var x0 = bbox[0],\n\t      y0 = bbox[1],\n\t      x1 = bbox[2],\n\t      y1 = bbox[3],\n\t      kx = x1 - x0 ? (n - 1) / (x1 - x0) : 1,\n\t      ky = y1 - y0 ? (n - 1) / (y1 - y0) : 1;\n\t\n\t  function quantizePoint(input) {\n\t    return [Math.round((input[0] - x0) * kx), Math.round((input[1] - y0) * ky)];\n\t  }\n\t\n\t  function quantizePoints(input, m) {\n\t    var i = -1,\n\t        j = 0,\n\t        n = input.length,\n\t        output = new Array(n), // pessimistic\n\t        pi,\n\t        px,\n\t        py,\n\t        x,\n\t        y;\n\t\n\t    while (++i < n) {\n\t      pi = input[i];\n\t      x = Math.round((pi[0] - x0) * kx);\n\t      y = Math.round((pi[1] - y0) * ky);\n\t      if (x !== px || y !== py) output[j++] = [px = x, py = y]; // non-coincident points\n\t    }\n\t\n\t    output.length = j;\n\t    while (j < m) j = output.push([output[0][0], output[0][1]]);\n\t    return output;\n\t  }\n\t\n\t  function quantizeLine(input) {\n\t    return quantizePoints(input, 2);\n\t  }\n\t\n\t  function quantizeRing(input) {\n\t    return quantizePoints(input, 4);\n\t  }\n\t\n\t  function quantizePolygon(input) {\n\t    return input.map(quantizeRing);\n\t  }\n\t\n\t  function quantizeGeometry(o) {\n\t    if (o != null && quantizeGeometryType.hasOwnProperty(o.type)) quantizeGeometryType[o.type](o);\n\t  }\n\t\n\t  var quantizeGeometryType = {\n\t    GeometryCollection: function(o) { o.geometries.forEach(quantizeGeometry); },\n\t    Point: function(o) { o.coordinates = quantizePoint(o.coordinates); },\n\t    MultiPoint: function(o) { o.coordinates = o.coordinates.map(quantizePoint); },\n\t    LineString: function(o) { o.arcs = quantizeLine(o.arcs); },\n\t    MultiLineString: function(o) { o.arcs = o.arcs.map(quantizeLine); },\n\t    Polygon: function(o) { o.arcs = quantizePolygon(o.arcs); },\n\t    MultiPolygon: function(o) { o.arcs = o.arcs.map(quantizePolygon); }\n\t  };\n\t\n\t  for (var key in objects) {\n\t    quantizeGeometry(objects[key]);\n\t  }\n\t\n\t  return {\n\t    scale: [1 / kx, 1 / ky],\n\t    translate: [x0, y0]\n\t  };\n\t};\n\t\n\t// Constructs the TopoJSON Topology for the specified hash of features.\n\t// Each object in the specified hash must be a GeoJSON object,\n\t// meaning FeatureCollection, a Feature or a geometry object.\n\tvar topology = function(objects, quantization) {\n\t  var bbox = bounds(objects = geometry(objects)),\n\t      transform = quantization > 0 && bbox && prequantize(objects, bbox, quantization),\n\t      topology = dedup(cut(extract(objects))),\n\t      coordinates = topology.coordinates,\n\t      indexByArc = hashmap(topology.arcs.length * 1.4, hashArc, equalArc);\n\t\n\t  objects = topology.objects; // for garbage collection\n\t  topology.bbox = bbox;\n\t  topology.arcs = topology.arcs.map(function(arc, i) {\n\t    indexByArc.set(arc, i);\n\t    return coordinates.slice(arc[0], arc[1] + 1);\n\t  });\n\t\n\t  delete topology.coordinates;\n\t  coordinates = null;\n\t\n\t  function indexGeometry(geometry$$1) {\n\t    if (geometry$$1 && indexGeometryType.hasOwnProperty(geometry$$1.type)) indexGeometryType[geometry$$1.type](geometry$$1);\n\t  }\n\t\n\t  var indexGeometryType = {\n\t    GeometryCollection: function(o) { o.geometries.forEach(indexGeometry); },\n\t    LineString: function(o) { o.arcs = indexArcs(o.arcs); },\n\t    MultiLineString: function(o) { o.arcs = o.arcs.map(indexArcs); },\n\t    Polygon: function(o) { o.arcs = o.arcs.map(indexArcs); },\n\t    MultiPolygon: function(o) { o.arcs = o.arcs.map(indexMultiArcs); }\n\t  };\n\t\n\t  function indexArcs(arc) {\n\t    var indexes = [];\n\t    do {\n\t      var index = indexByArc.get(arc);\n\t      indexes.push(arc[0] < arc[1] ? index : ~index);\n\t    } while (arc = arc.next);\n\t    return indexes;\n\t  }\n\t\n\t  function indexMultiArcs(arcs) {\n\t    return arcs.map(indexArcs);\n\t  }\n\t\n\t  for (var key in objects) {\n\t    indexGeometry(objects[key]);\n\t  }\n\t\n\t  if (transform) {\n\t    topology.transform = transform;\n\t    topology.arcs = delta(topology.arcs);\n\t  }\n\t\n\t  return topology;\n\t};\n\t\n\tfunction hashArc(arc) {\n\t  var i = arc[0], j = arc[1], t;\n\t  if (j < i) t = i, i = j, j = t;\n\t  return i + 31 * j;\n\t}\n\t\n\tfunction equalArc(arcA, arcB) {\n\t  var ia = arcA[0], ja = arcA[1],\n\t      ib = arcB[0], jb = arcB[1], t;\n\t  if (ja < ia) t = ia, ia = ja, ja = t;\n\t  if (jb < ib) t = ib, ib = jb, jb = t;\n\t  return ia === ib && ja === jb;\n\t}\n\t\n\tvar prune = function(topology) {\n\t  var oldObjects = topology.objects,\n\t      newObjects = {},\n\t      oldArcs = topology.arcs,\n\t      newArcs = [],\n\t      newArcIndex = -1,\n\t      newIndexByOldIndex = new Array(oldArcs.length),\n\t      key;\n\t\n\t  function pruneGeometry(input) {\n\t    var output;\n\t    switch (input.type) {\n\t      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(pruneGeometry)}; break;\n\t      case \"LineString\": output = {type: \"LineString\", arcs: pruneArcs(input.arcs)}; break;\n\t      case \"MultiLineString\": output = {type: \"MultiLineString\", arcs: input.arcs.map(pruneArcs)}; break;\n\t      case \"Polygon\": output = {type: \"Polygon\", arcs: input.arcs.map(pruneArcs)}; break;\n\t      case \"MultiPolygon\": output = {type: \"MultiPolygon\", arcs: input.arcs.map(pruneMultiArcs)}; break;\n\t      default: return input;\n\t    }\n\t    if (input.id != null) output.id = input.id;\n\t    if (input.bbox != null) output.bbox = input.bbox;\n\t    if (input.properties != null) output.properties = input.properties;\n\t    return output;\n\t  }\n\t\n\t  function pruneArc(oldIndex) {\n\t    var oldReverse = oldIndex < 0 && (oldIndex = ~oldIndex, true), newIndex;\n\t\n\t    // If this is the first instance of this arc, record it under its new index.\n\t    if ((newIndex = newIndexByOldIndex[oldIndex]) == null) {\n\t      newIndexByOldIndex[oldIndex] = newIndex = ++newArcIndex;\n\t      newArcs[newIndex] = oldArcs[oldIndex];\n\t    }\n\t\n\t    return oldReverse ? ~newIndex : newIndex;\n\t  }\n\t\n\t  function pruneArcs(arcs) {\n\t    return arcs.map(pruneArc);\n\t  }\n\t\n\t  function pruneMultiArcs(arcs) {\n\t    return arcs.map(pruneArcs);\n\t  }\n\t\n\t  for (key in oldObjects) {\n\t    newObjects[key] = pruneGeometry(oldObjects[key]);\n\t  }\n\t\n\t  return {\n\t    type: \"Topology\",\n\t    bbox: topology.bbox,\n\t    transform: topology.transform,\n\t    objects: newObjects,\n\t    arcs: newArcs\n\t  };\n\t};\n\t\n\tvar filter = function(topology, filter) {\n\t  var oldObjects = topology.objects,\n\t      newObjects = {},\n\t      key;\n\t\n\t  if (filter == null) filter = filterTrue;\n\t\n\t  function filterGeometry(input) {\n\t    var output, arcs;\n\t    switch (input.type) {\n\t      case \"Polygon\": {\n\t        arcs = filterRings(input.arcs);\n\t        output = arcs ? {type: \"Polygon\", arcs: arcs} : {type: null};\n\t        break;\n\t      }\n\t      case \"MultiPolygon\": {\n\t        arcs = input.arcs.map(filterRings).filter(filterIdentity);\n\t        output = arcs.length ? {type: \"MultiPolygon\", arcs: arcs} : {type: null};\n\t        break;\n\t      }\n\t      case \"GeometryCollection\": {\n\t        arcs = input.geometries.map(filterGeometry).filter(filterNotNull);\n\t        output = arcs.length ? {type: \"GeometryCollection\", geometries: arcs} : {type: null};\n\t        break;\n\t      }\n\t      default: return input;\n\t    }\n\t    if (input.id != null) output.id = input.id;\n\t    if (input.bbox != null) output.bbox = input.bbox;\n\t    if (input.properties != null) output.properties = input.properties;\n\t    return output;\n\t  }\n\t\n\t  function filterRings(arcs) {\n\t    return arcs.length && filterExteriorRing(arcs[0]) // if the exterior is small, ignore any holes\n\t        ? [arcs[0]].concat(arcs.slice(1).filter(filterInteriorRing))\n\t        : null;\n\t  }\n\t\n\t  function filterExteriorRing(ring) {\n\t    return filter(ring, false);\n\t  }\n\t\n\t  function filterInteriorRing(ring) {\n\t    return filter(ring, true);\n\t  }\n\t\n\t  for (key in oldObjects) {\n\t    newObjects[key] = filterGeometry(oldObjects[key]);\n\t  }\n\t\n\t  return prune({\n\t    type: \"Topology\",\n\t    bbox: topology.bbox,\n\t    transform: topology.transform,\n\t    objects: newObjects,\n\t    arcs: topology.arcs\n\t  });\n\t};\n\t\n\tfunction filterTrue() {\n\t  return true;\n\t}\n\t\n\tfunction filterIdentity(x) {\n\t  return x;\n\t}\n\t\n\tfunction filterNotNull(geometry) {\n\t  return geometry.type != null;\n\t}\n\t\n\tvar filterAttached = function(topology) {\n\t  var uniqueRingByArc = {}, // arc index -> index of unique associated ring, or -1 if used by multiple rings\n\t      ringIndex = 0,\n\t      name;\n\t\n\t  function testGeometry(o) {\n\t    switch (o.type) {\n\t      case \"GeometryCollection\": o.geometries.forEach(testGeometry); break;\n\t      case \"Polygon\": testArcs(o.arcs); break;\n\t      case \"MultiPolygon\": o.arcs.forEach(testArcs); break;\n\t    }\n\t  }\n\t\n\t  function testArcs(arcs) {\n\t    for (var i = 0, n = arcs.length; i < n; ++i, ++ringIndex) {\n\t      for (var ring = arcs[i], j = 0, m = ring.length; j < m; ++j) {\n\t        var arc = ring[j];\n\t        if (arc < 0) arc = ~arc;\n\t        var uniqueRing = uniqueRingByArc[arc];\n\t        if (uniqueRing >= 0 && uniqueRing !== ringIndex) uniqueRingByArc[arc] = -1;\n\t        else uniqueRingByArc[arc] = ringIndex;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (name in topology.objects) {\n\t    testGeometry(topology.objects[name]);\n\t  }\n\t\n\t  return function(ring) {\n\t    for (var j = 0, m = ring.length, arc; j < m; ++j) {\n\t      if (arc = ring[j], uniqueRingByArc[arc < 0 ? ~arc : arc] < 0) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  };\n\t};\n\t\n\tfunction planarTriangleArea(triangle) {\n\t  var a = triangle[0], b = triangle[1], c = triangle[2];\n\t  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1])) / 2;\n\t}\n\t\n\tfunction planarRingArea$1(ring) {\n\t  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n\t  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n\t  return Math.abs(area) / 2;\n\t}\n\t\n\tvar filterWeight = function(topology, minWeight, weight) {\n\t  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\t\n\t  if (weight == null) weight = planarRingArea$1;\n\t\n\t  return function(ring, interior) {\n\t    return weight(feature(topology, {type: \"Polygon\", arcs: [ring]}).geometry.coordinates[0], interior) >= minWeight;\n\t  };\n\t};\n\t\n\tvar filterAttachedWeight = function(topology, minWeight, weight) {\n\t  var a = filterAttached(topology),\n\t      w = filterWeight(topology, minWeight, weight);\n\t  return function(ring, interior) {\n\t    return a(ring, interior) || w(ring, interior);\n\t  };\n\t};\n\t\n\tfunction compare(a, b) {\n\t  return a[1][2] - b[1][2];\n\t}\n\t\n\tvar newHeap = function() {\n\t  var heap = {},\n\t      array = [],\n\t      size = 0;\n\t\n\t  heap.push = function(object) {\n\t    up(array[object._ = size] = object, size++);\n\t    return size;\n\t  };\n\t\n\t  heap.pop = function() {\n\t    if (size <= 0) return;\n\t    var removed = array[0], object;\n\t    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n\t    return removed;\n\t  };\n\t\n\t  heap.remove = function(removed) {\n\t    var i = removed._, object;\n\t    if (array[i] !== removed) return; // invalid request\n\t    if (i !== --size) object = array[size], (compare(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n\t    return i;\n\t  };\n\t\n\t  function up(object, i) {\n\t    while (i > 0) {\n\t      var j = ((i + 1) >> 1) - 1,\n\t          parent = array[j];\n\t      if (compare(object, parent) >= 0) break;\n\t      array[parent._ = i] = parent;\n\t      array[object._ = i = j] = object;\n\t    }\n\t  }\n\t\n\t  function down(object, i) {\n\t    while (true) {\n\t      var r = (i + 1) << 1,\n\t          l = r - 1,\n\t          j = i,\n\t          child = array[j];\n\t      if (l < size && compare(array[l], child) < 0) child = array[j = l];\n\t      if (r < size && compare(array[r], child) < 0) child = array[j = r];\n\t      if (j === i) break;\n\t      array[child._ = i] = child;\n\t      array[object._ = i = j] = object;\n\t    }\n\t  }\n\t\n\t  return heap;\n\t};\n\t\n\tfunction copy(point) {\n\t  return [point[0], point[1], 0];\n\t}\n\t\n\tvar presimplify = function(topology, weight) {\n\t  var point = topology.transform ? transform(topology.transform) : copy,\n\t      heap = newHeap();\n\t\n\t  if (weight == null) weight = planarTriangleArea;\n\t\n\t  var arcs = topology.arcs.map(function(arc) {\n\t    var triangles = [],\n\t        maxWeight = 0,\n\t        triangle,\n\t        i,\n\t        n;\n\t\n\t    arc = arc.map(point);\n\t\n\t    for (i = 1, n = arc.length - 1; i < n; ++i) {\n\t      triangle = [arc[i - 1], arc[i], arc[i + 1]];\n\t      triangle[1][2] = weight(triangle);\n\t      triangles.push(triangle);\n\t      heap.push(triangle);\n\t    }\n\t\n\t    // Always keep the arc endpoints!\n\t    arc[0][2] = arc[n][2] = Infinity;\n\t\n\t    for (i = 0, n = triangles.length; i < n; ++i) {\n\t      triangle = triangles[i];\n\t      triangle.previous = triangles[i - 1];\n\t      triangle.next = triangles[i + 1];\n\t    }\n\t\n\t    while (triangle = heap.pop()) {\n\t      var previous = triangle.previous,\n\t          next = triangle.next;\n\t\n\t      // If the weight of the current point is less than that of the previous\n\t      // point to be eliminated, use the latter’s weight instead. This ensures\n\t      // that the current point cannot be eliminated without eliminating\n\t      // previously- eliminated points.\n\t      if (triangle[1][2] < maxWeight) triangle[1][2] = maxWeight;\n\t      else maxWeight = triangle[1][2];\n\t\n\t      if (previous) {\n\t        previous.next = next;\n\t        previous[2] = triangle[2];\n\t        update(previous);\n\t      }\n\t\n\t      if (next) {\n\t        next.previous = previous;\n\t        next[0] = triangle[0];\n\t        update(next);\n\t      }\n\t    }\n\t\n\t    return arc;\n\t  });\n\t\n\t  function update(triangle) {\n\t    heap.remove(triangle);\n\t    triangle[1][2] = weight(triangle);\n\t    heap.push(triangle);\n\t  }\n\t\n\t  return {\n\t    type: \"Topology\",\n\t    bbox: topology.bbox,\n\t    objects: topology.objects,\n\t    arcs: arcs\n\t  };\n\t};\n\t\n\tvar quantile = function(topology, p) {\n\t  var array = [];\n\t\n\t  topology.arcs.forEach(function(arc) {\n\t    arc.forEach(function(point) {\n\t      if (isFinite(point[2])) { // Ignore endpoints, whose weight is Infinity.\n\t        array.push(point[2]);\n\t      }\n\t    });\n\t  });\n\t\n\t  return array.length && quantile$1(array.sort(descending), p);\n\t};\n\t\n\tfunction quantile$1(array, p) {\n\t  if (!(n = array.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return array[0];\n\t  if (p >= 1) return array[n - 1];\n\t  var n,\n\t      h = (n - 1) * p,\n\t      i = Math.floor(h),\n\t      a = array[i],\n\t      b = array[i + 1];\n\t  return a + (b - a) * (h - i);\n\t}\n\t\n\tfunction descending(a, b) {\n\t  return b - a;\n\t}\n\t\n\tvar simplify = function(topology, minWeight) {\n\t  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\t\n\t  // Remove points whose weight is less than the minimum weight.\n\t  var arcs = topology.arcs.map(function(input) {\n\t    var i = -1,\n\t        j = 0,\n\t        n = input.length,\n\t        output = new Array(n), // pessimistic\n\t        point;\n\t\n\t    while (++i < n) {\n\t      if ((point = input[i])[2] >= minWeight) {\n\t        output[j++] = [point[0], point[1]];\n\t      }\n\t    }\n\t\n\t    output.length = j;\n\t    return output;\n\t  });\n\t\n\t  return {\n\t    type: \"Topology\",\n\t    transform: topology.transform,\n\t    bbox: topology.bbox,\n\t    objects: topology.objects,\n\t    arcs: arcs\n\t  };\n\t};\n\t\n\tvar pi = Math.PI;\n\tvar tau = 2 * pi;\n\tvar quarterPi = pi / 4;\n\tvar radians = pi / 180;\n\tvar atan2 = Math.atan2;\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\t\n\tfunction halfArea(ring, closed) {\n\t  var i = 0,\n\t      n = ring.length,\n\t      sum = 0,\n\t      point = ring[closed ? i++ : n - 1],\n\t      lambda0, lambda1 = point[0] * radians,\n\t      phi1 = (point[1] * radians) / 2 + quarterPi,\n\t      cosPhi0, cosPhi1 = cos(phi1),\n\t      sinPhi0, sinPhi1 = sin(phi1);\n\t\n\t  for (; i < n; ++i) {\n\t    point = ring[i];\n\t    lambda0 = lambda1, lambda1 = point[0] * radians;\n\t    phi1 = (point[1] * radians) / 2 + quarterPi;\n\t    cosPhi0 = cosPhi1, cosPhi1 = cos(phi1);\n\t    sinPhi0 = sinPhi1, sinPhi1 = sin(phi1);\n\t\n\t    // Spherical excess E for a spherical triangle with vertices: south pole,\n\t    // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t    // See https://github.com/d3/d3-geo/blob/master/README.md#geoArea\n\t    var dLambda = lambda1 - lambda0,\n\t        sdLambda = dLambda >= 0 ? 1 : -1,\n\t        adLambda = sdLambda * dLambda,\n\t        k = sinPhi0 * sinPhi1,\n\t        u = cosPhi0 * cosPhi1 + k * cos(adLambda),\n\t        v = k * sdLambda * sin(adLambda);\n\t    sum += atan2(v, u);\n\t  }\n\t\n\t  return sum;\n\t}\n\t\n\tfunction sphericalRingArea(ring, interior) {\n\t  var sum = halfArea(ring, true);\n\t  if (interior) sum *= -1;\n\t  return (sum < 0 ? tau + sum : sum) * 2;\n\t}\n\t\n\tfunction sphericalTriangleArea(t) {\n\t  var sum = halfArea(t, false);\n\t  return (sum < 0 ? tau + sum : sum) * 2;\n\t}\n\t\n\texports.bbox = bbox;\n\texports.feature = feature;\n\texports.mesh = mesh;\n\texports.meshArcs = meshArcs;\n\texports.merge = merge;\n\texports.mergeArcs = mergeArcs;\n\texports.neighbors = neighbors;\n\texports.quantize = quantize;\n\texports.transform = transform;\n\texports.untransform = untransform;\n\texports.topology = topology;\n\texports.filter = filter;\n\texports.filterAttached = filterAttached;\n\texports.filterAttachedWeight = filterAttachedWeight;\n\texports.filterWeight = filterWeight;\n\texports.planarRingArea = planarRingArea$1;\n\texports.planarTriangleArea = planarTriangleArea;\n\texports.presimplify = presimplify;\n\texports.quantile = quantile;\n\texports.simplify = simplify;\n\texports.sphericalRingArea = sphericalRingArea;\n\texports.sphericalTriangleArea = sphericalTriangleArea;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 61d87dff1a259230437e","/* Riot v3.4.4, @license MIT */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.riot = global.riot || {})));\n}(this, (function (exports) { 'use strict';\n\nvar __TAGS_CACHE = [];\nvar __TAG_IMPL = {};\nvar GLOBAL_MIXIN = '__global_mixin';\nvar ATTRS_PREFIX = 'riot-';\nvar REF_DIRECTIVES = ['ref', 'data-ref'];\nvar IS_DIRECTIVE = 'data-is';\nvar CONDITIONAL_DIRECTIVE = 'if';\nvar LOOP_DIRECTIVE = 'each';\nvar LOOP_NO_REORDER_DIRECTIVE = 'no-reorder';\nvar SHOW_DIRECTIVE = 'show';\nvar HIDE_DIRECTIVE = 'hide';\nvar RIOT_EVENTS_KEY = '__riot-events__';\nvar T_STRING = 'string';\nvar T_OBJECT = 'object';\nvar T_UNDEF  = 'undefined';\nvar T_FUNCTION = 'function';\nvar XLINK_NS = 'http://www.w3.org/1999/xlink';\nvar XLINK_REGEX = /^xlink:(\\w+)/;\nvar WIN = typeof window === T_UNDEF ? undefined : window;\nvar RE_SPECIAL_TAGS = /^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?|opt(?:ion|group))$/;\nvar RE_SPECIAL_TAGS_NO_OPTION = /^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?)$/;\nvar RE_EVENTS_PREFIX = /^on/;\nvar RE_RESERVED_NAMES = /^(?:_(?:item|id|parent)|update|root|(?:un)?mount|mixin|is(?:Mounted|Loop)|tags|refs|parent|opts|trigger|o(?:n|ff|ne))$/;\nvar RE_HTML_ATTRS = /([-\\w]+) ?= ?(?:\"([^\"]*)|'([^']*)|({[^}]*}))/g;\nvar CASE_SENSITIVE_ATTRIBUTES = { 'viewbox': 'viewBox' };\nvar RE_BOOL_ATTRS = /^(?:disabled|checked|readonly|required|allowfullscreen|auto(?:focus|play)|compact|controls|default|formnovalidate|hidden|ismap|itemscope|loop|multiple|muted|no(?:resize|shade|validate|wrap)?|open|reversed|seamless|selected|sortable|truespeed|typemustmatch)$/;\nvar IE_VERSION = (WIN && WIN.document || {}).documentMode | 0;\n\n/**\n * Check Check if the passed argument is undefined\n * @param   { String } value -\n * @returns { Boolean } -\n */\nfunction isBoolAttr(value) {\n  return RE_BOOL_ATTRS.test(value)\n}\n\n/**\n * Check if passed argument is a function\n * @param   { * } value -\n * @returns { Boolean } -\n */\nfunction isFunction(value) {\n  return typeof value === T_FUNCTION\n}\n\n/**\n * Check if passed argument is an object, exclude null\n * NOTE: use isObject(x) && !isArray(x) to excludes arrays.\n * @param   { * } value -\n * @returns { Boolean } -\n */\nfunction isObject(value) {\n  return value && typeof value === T_OBJECT // typeof null is 'object'\n}\n\n/**\n * Check if passed argument is undefined\n * @param   { * } value -\n * @returns { Boolean } -\n */\nfunction isUndefined(value) {\n  return typeof value === T_UNDEF\n}\n\n/**\n * Check if passed argument is a string\n * @param   { * } value -\n * @returns { Boolean } -\n */\nfunction isString(value) {\n  return typeof value === T_STRING\n}\n\n/**\n * Check if passed argument is empty. Different from falsy, because we dont consider 0 or false to be blank\n * @param { * } value -\n * @returns { Boolean } -\n */\nfunction isBlank(value) {\n  return isUndefined(value) || value === null || value === ''\n}\n\n/**\n * Check if passed argument is a kind of array\n * @param   { * } value -\n * @returns { Boolean } -\n */\nfunction isArray(value) {\n  return Array.isArray(value) || value instanceof Array\n}\n\n/**\n * Check whether object's property could be overridden\n * @param   { Object }  obj - source object\n * @param   { String }  key - object property\n * @returns { Boolean } -\n */\nfunction isWritable(obj, key) {\n  var descriptor = Object.getOwnPropertyDescriptor(obj, key);\n  return isUndefined(obj[key]) || descriptor && descriptor.writable\n}\n\n/**\n * Check if passed argument is a reserved name\n * @param   { String } value -\n * @returns { Boolean } -\n */\nfunction isReservedName(value) {\n  return RE_RESERVED_NAMES.test(value)\n}\n\nvar check = Object.freeze({\n\tisBoolAttr: isBoolAttr,\n\tisFunction: isFunction,\n\tisObject: isObject,\n\tisUndefined: isUndefined,\n\tisString: isString,\n\tisBlank: isBlank,\n\tisArray: isArray,\n\tisWritable: isWritable,\n\tisReservedName: isReservedName\n});\n\n/**\n * Shorter and fast way to select multiple nodes in the DOM\n * @param   { String } selector - DOM selector\n * @param   { Object } ctx - DOM node where the targets of our search will is located\n * @returns { Object } dom nodes found\n */\nfunction $$(selector, ctx) {\n  return Array.prototype.slice.call((ctx || document).querySelectorAll(selector))\n}\n\n/**\n * Shorter and fast way to select a single node in the DOM\n * @param   { String } selector - unique dom selector\n * @param   { Object } ctx - DOM node where the target of our search will is located\n * @returns { Object } dom node found\n */\nfunction $(selector, ctx) {\n  return (ctx || document).querySelector(selector)\n}\n\n/**\n * Create a document fragment\n * @returns { Object } document fragment\n */\nfunction createFrag() {\n  return document.createDocumentFragment()\n}\n\n/**\n * Create a document text node\n * @returns { Object } create a text node to use as placeholder\n */\nfunction createDOMPlaceholder() {\n  return document.createTextNode('')\n}\n\n/**\n * Create a generic DOM node\n * @param   { String } name - name of the DOM node we want to create\n * @returns { Object } DOM node just created\n */\nfunction mkEl(name) {\n  return document.createElement(name)\n}\n\n/**\n * Set the inner html of any DOM node SVGs included\n * @param { Object } container - DOM node where we'll inject new html\n * @param { String } html - html to inject\n */\n/* istanbul ignore next */\nfunction setInnerHTML(container, html) {\n  if (!isUndefined(container.innerHTML))\n    { container.innerHTML = html; }\n    // some browsers do not support innerHTML on the SVGs tags\n  else {\n    var doc = new DOMParser().parseFromString(html, 'application/xml');\n    var node = container.ownerDocument.importNode(doc.documentElement, true);\n    container.appendChild(node);\n  }\n}\n\n/**\n * Toggle the visibility of any DOM node\n * @param   { Object }  dom - DOM node we want to hide\n * @param   { Boolean } show - do we want to show it?\n */\n\nfunction toggleVisibility(dom, show) {\n  dom.style.display = show ? '' : 'none';\n  dom['hidden'] = show ? false : true;\n}\n\n/**\n * Remove any DOM attribute from a node\n * @param   { Object } dom - DOM node we want to update\n * @param   { String } name - name of the property we want to remove\n */\nfunction remAttr(dom, name) {\n  dom.removeAttribute(name);\n}\n\n/**\n * Convert a style object to a string\n * @param   { Object } style - style object we need to parse\n * @returns { String } resulting css string\n * @example\n * styleObjectToString({ color: 'red', height: '10px'}) // => 'color: red; height: 10px'\n */\nfunction styleObjectToString(style) {\n  return Object.keys(style).reduce(function (acc, prop) {\n    return (acc + \" \" + prop + \": \" + (style[prop]) + \";\")\n  }, '')\n}\n\n/**\n * Get the value of any DOM attribute on a node\n * @param   { Object } dom - DOM node we want to parse\n * @param   { String } name - name of the attribute we want to get\n * @returns { String | undefined } name of the node attribute whether it exists\n */\nfunction getAttr(dom, name) {\n  return dom.getAttribute(name)\n}\n\n/**\n * Set any DOM attribute\n * @param { Object } dom - DOM node we want to update\n * @param { String } name - name of the property we want to set\n * @param { String } val - value of the property we want to set\n */\nfunction setAttr(dom, name, val) {\n  var xlink = XLINK_REGEX.exec(name);\n  if (xlink && xlink[1])\n    { dom.setAttributeNS(XLINK_NS, xlink[1], val); }\n  else\n    { dom.setAttribute(name, val); }\n}\n\n/**\n * Insert safely a tag to fix #1962 #1649\n * @param   { HTMLElement } root - children container\n * @param   { HTMLElement } curr - node to insert\n * @param   { HTMLElement } next - node that should preceed the current node inserted\n */\nfunction safeInsert(root, curr, next) {\n  root.insertBefore(curr, next.parentNode && next);\n}\n\n/**\n * Minimize risk: only zero or one _space_ between attr & value\n * @param   { String }   html - html string we want to parse\n * @param   { Function } fn - callback function to apply on any attribute found\n */\nfunction walkAttrs(html, fn) {\n  if (!html)\n    { return }\n  var m;\n  while (m = RE_HTML_ATTRS.exec(html))\n    { fn(m[1].toLowerCase(), m[2] || m[3] || m[4]); }\n}\n\n/**\n * Walk down recursively all the children tags starting dom node\n * @param   { Object }   dom - starting node where we will start the recursion\n * @param   { Function } fn - callback to transform the child node just found\n * @param   { Object }   context - fn can optionally return an object, which is passed to children\n */\nfunction walkNodes(dom, fn, context) {\n  if (dom) {\n    var res = fn(dom, context);\n    var next;\n    // stop the recursion\n    if (res === false) { return }\n\n    dom = dom.firstChild;\n\n    while (dom) {\n      next = dom.nextSibling;\n      walkNodes(dom, fn, res);\n      dom = next;\n    }\n  }\n}\n\nvar dom = Object.freeze({\n\t$$: $$,\n\t$: $,\n\tcreateFrag: createFrag,\n\tcreateDOMPlaceholder: createDOMPlaceholder,\n\tmkEl: mkEl,\n\tsetInnerHTML: setInnerHTML,\n\ttoggleVisibility: toggleVisibility,\n\tremAttr: remAttr,\n\tstyleObjectToString: styleObjectToString,\n\tgetAttr: getAttr,\n\tsetAttr: setAttr,\n\tsafeInsert: safeInsert,\n\twalkAttrs: walkAttrs,\n\twalkNodes: walkNodes\n});\n\nvar styleNode;\nvar cssTextProp;\nvar byName = {};\nvar remainder = [];\nvar needsInject = false;\n\n// skip the following code on the server\nif (WIN) {\n  styleNode = (function () {\n    // create a new style element with the correct type\n    var newNode = mkEl('style');\n    setAttr(newNode, 'type', 'text/css');\n\n    // replace any user node or insert the new one into the head\n    var userNode = $('style[type=riot]');\n    /* istanbul ignore next */\n    if (userNode) {\n      if (userNode.id) { newNode.id = userNode.id; }\n      userNode.parentNode.replaceChild(newNode, userNode);\n    }\n    else { document.getElementsByTagName('head')[0].appendChild(newNode); }\n\n    return newNode\n  })();\n  cssTextProp = styleNode.styleSheet;\n}\n\n/**\n * Object that will be used to inject and manage the css of every tag instance\n */\nvar styleManager = {\n  styleNode: styleNode,\n  /**\n   * Save a tag style to be later injected into DOM\n   * @param { String } css - css string\n   * @param { String } name - if it's passed we will map the css to a tagname\n   */\n  add: function add(css, name) {\n    if (name) { byName[name] = css; }\n    else { remainder.push(css); }\n    needsInject = true;\n  },\n  /**\n   * Inject all previously saved tag styles into DOM\n   * innerHTML seems slow: http://jsperf.com/riot-insert-style\n   */\n  inject: function inject() {\n    if (!WIN || !needsInject) { return }\n    needsInject = false;\n    var style = Object.keys(byName)\n      .map(function(k) { return byName[k] })\n      .concat(remainder).join('\\n');\n    /* istanbul ignore next */\n    if (cssTextProp) { cssTextProp.cssText = style; }\n    else { styleNode.innerHTML = style; }\n  }\n};\n\n/**\n * The riot template engine\n * @version v3.0.3\n */\n/**\n * riot.util.brackets\n *\n * - `brackets    ` - Returns a string or regex based on its parameter\n * - `brackets.set` - Change the current riot brackets\n *\n * @module\n */\n\n/* global riot */\n\n/* istanbul ignore next */\nvar brackets = (function (UNDEF) {\n\n  var\n    REGLOB = 'g',\n\n    R_MLCOMMS = /\\/\\*[^*]*\\*+(?:[^*\\/][^*]*\\*+)*\\//g,\n\n    R_STRINGS = /\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|`[^`\\\\]*(?:\\\\[\\S\\s][^`\\\\]*)*`/g,\n\n    S_QBLOCKS = R_STRINGS.source + '|' +\n      /(?:\\breturn\\s+|(?:[$\\w\\)\\]]|\\+\\+|--)\\s*(\\/)(?![*\\/]))/.source + '|' +\n      /\\/(?=[^*\\/])[^[\\/\\\\]*(?:(?:\\[(?:\\\\.|[^\\]\\\\]*)*\\]|\\\\.)[^[\\/\\\\]*)*?(\\/)[gim]*/.source,\n\n    UNSUPPORTED = RegExp('[\\\\' + 'x00-\\\\x1F<>a-zA-Z0-9\\'\",;\\\\\\\\]'),\n\n    NEED_ESCAPE = /(?=[[\\]()*+?.^$|])/g,\n\n    FINDBRACES = {\n      '(': RegExp('([()])|'   + S_QBLOCKS, REGLOB),\n      '[': RegExp('([[\\\\]])|' + S_QBLOCKS, REGLOB),\n      '{': RegExp('([{}])|'   + S_QBLOCKS, REGLOB)\n    },\n\n    DEFAULT = '{ }';\n\n  var _pairs = [\n    '{', '}',\n    '{', '}',\n    /{[^}]*}/,\n    /\\\\([{}])/g,\n    /\\\\({)|{/g,\n    RegExp('\\\\\\\\(})|([[({])|(})|' + S_QBLOCKS, REGLOB),\n    DEFAULT,\n    /^\\s*{\\^?\\s*([$\\w]+)(?:\\s*,\\s*(\\S+))?\\s+in\\s+(\\S.*)\\s*}/,\n    /(^|[^\\\\]){=[\\S\\s]*?}/\n  ];\n\n  var\n    cachedBrackets = UNDEF,\n    _regex,\n    _cache = [],\n    _settings;\n\n  function _loopback (re) { return re }\n\n  function _rewrite (re, bp) {\n    if (!bp) { bp = _cache; }\n    return new RegExp(\n      re.source.replace(/{/g, bp[2]).replace(/}/g, bp[3]), re.global ? REGLOB : ''\n    )\n  }\n\n  function _create (pair) {\n    if (pair === DEFAULT) { return _pairs }\n\n    var arr = pair.split(' ');\n\n    if (arr.length !== 2 || UNSUPPORTED.test(pair)) {\n      throw new Error('Unsupported brackets \"' + pair + '\"')\n    }\n    arr = arr.concat(pair.replace(NEED_ESCAPE, '\\\\').split(' '));\n\n    arr[4] = _rewrite(arr[1].length > 1 ? /{[\\S\\s]*?}/ : _pairs[4], arr);\n    arr[5] = _rewrite(pair.length > 3 ? /\\\\({|})/g : _pairs[5], arr);\n    arr[6] = _rewrite(_pairs[6], arr);\n    arr[7] = RegExp('\\\\\\\\(' + arr[3] + ')|([[({])|(' + arr[3] + ')|' + S_QBLOCKS, REGLOB);\n    arr[8] = pair;\n    return arr\n  }\n\n  function _brackets (reOrIdx) {\n    return reOrIdx instanceof RegExp ? _regex(reOrIdx) : _cache[reOrIdx]\n  }\n\n  _brackets.split = function split (str, tmpl, _bp) {\n    // istanbul ignore next: _bp is for the compiler\n    if (!_bp) { _bp = _cache; }\n\n    var\n      parts = [],\n      match,\n      isexpr,\n      start,\n      pos,\n      re = _bp[6];\n\n    isexpr = start = re.lastIndex = 0;\n\n    while ((match = re.exec(str))) {\n\n      pos = match.index;\n\n      if (isexpr) {\n\n        if (match[2]) {\n          re.lastIndex = skipBraces(str, match[2], re.lastIndex);\n          continue\n        }\n        if (!match[3]) {\n          continue\n        }\n      }\n\n      if (!match[1]) {\n        unescapeStr(str.slice(start, pos));\n        start = re.lastIndex;\n        re = _bp[6 + (isexpr ^= 1)];\n        re.lastIndex = start;\n      }\n    }\n\n    if (str && start < str.length) {\n      unescapeStr(str.slice(start));\n    }\n\n    return parts\n\n    function unescapeStr (s) {\n      if (tmpl || isexpr) {\n        parts.push(s && s.replace(_bp[5], '$1'));\n      } else {\n        parts.push(s);\n      }\n    }\n\n    function skipBraces (s, ch, ix) {\n      var\n        match,\n        recch = FINDBRACES[ch];\n\n      recch.lastIndex = ix;\n      ix = 1;\n      while ((match = recch.exec(s))) {\n        if (match[1] &&\n          !(match[1] === ch ? ++ix : --ix)) { break }\n      }\n      return ix ? s.length : recch.lastIndex\n    }\n  };\n\n  _brackets.hasExpr = function hasExpr (str) {\n    return _cache[4].test(str)\n  };\n\n  _brackets.loopKeys = function loopKeys (expr) {\n    var m = expr.match(_cache[9]);\n\n    return m\n      ? { key: m[1], pos: m[2], val: _cache[0] + m[3].trim() + _cache[1] }\n      : { val: expr.trim() }\n  };\n\n  _brackets.array = function array (pair) {\n    return pair ? _create(pair) : _cache\n  };\n\n  function _reset (pair) {\n    if ((pair || (pair = DEFAULT)) !== _cache[8]) {\n      _cache = _create(pair);\n      _regex = pair === DEFAULT ? _loopback : _rewrite;\n      _cache[9] = _regex(_pairs[9]);\n    }\n    cachedBrackets = pair;\n  }\n\n  function _setSettings (o) {\n    var b;\n\n    o = o || {};\n    b = o.brackets;\n    Object.defineProperty(o, 'brackets', {\n      set: _reset,\n      get: function () { return cachedBrackets },\n      enumerable: true\n    });\n    _settings = o;\n    _reset(b);\n  }\n\n  Object.defineProperty(_brackets, 'settings', {\n    set: _setSettings,\n    get: function () { return _settings }\n  });\n\n  /* istanbul ignore next: in the browser riot is always in the scope */\n  _brackets.settings = typeof riot !== 'undefined' && riot.settings || {};\n  _brackets.set = _reset;\n\n  _brackets.R_STRINGS = R_STRINGS;\n  _brackets.R_MLCOMMS = R_MLCOMMS;\n  _brackets.S_QBLOCKS = S_QBLOCKS;\n\n  return _brackets\n\n})();\n\n/**\n * @module tmpl\n *\n * tmpl          - Root function, returns the template value, render with data\n * tmpl.hasExpr  - Test the existence of a expression inside a string\n * tmpl.loopKeys - Get the keys for an 'each' loop (used by `_each`)\n */\n\n/* istanbul ignore next */\nvar tmpl = (function () {\n\n  var _cache = {};\n\n  function _tmpl (str, data) {\n    if (!str) { return str }\n\n    return (_cache[str] || (_cache[str] = _create(str))).call(data, _logErr)\n  }\n\n  _tmpl.hasExpr = brackets.hasExpr;\n\n  _tmpl.loopKeys = brackets.loopKeys;\n\n  // istanbul ignore next\n  _tmpl.clearCache = function () { _cache = {}; };\n\n  _tmpl.errorHandler = null;\n\n  function _logErr (err, ctx) {\n\n    err.riotData = {\n      tagName: ctx && ctx.__ && ctx.__.tagName,\n      _riot_id: ctx && ctx._riot_id  //eslint-disable-line camelcase\n    };\n\n    if (_tmpl.errorHandler) { _tmpl.errorHandler(err); }\n    else if (\n      typeof console !== 'undefined' &&\n      typeof console.error === 'function'\n    ) {\n      if (err.riotData.tagName) {\n        console.error('Riot template error thrown in the <%s> tag', err.riotData.tagName);\n      }\n      console.error(err);\n    }\n  }\n\n  function _create (str) {\n    var expr = _getTmpl(str);\n\n    if (expr.slice(0, 11) !== 'try{return ') { expr = 'return ' + expr; }\n\n    return new Function('E', expr + ';')    // eslint-disable-line no-new-func\n  }\n\n  var\n    CH_IDEXPR = String.fromCharCode(0x2057),\n    RE_CSNAME = /^(?:(-?[_A-Za-z\\xA0-\\xFF][-\\w\\xA0-\\xFF]*)|\\u2057(\\d+)~):/,\n    RE_QBLOCK = RegExp(brackets.S_QBLOCKS, 'g'),\n    RE_DQUOTE = /\\u2057/g,\n    RE_QBMARK = /\\u2057(\\d+)~/g;\n\n  function _getTmpl (str) {\n    var\n      qstr = [],\n      expr,\n      parts = brackets.split(str.replace(RE_DQUOTE, '\"'), 1);\n\n    if (parts.length > 2 || parts[0]) {\n      var i, j, list = [];\n\n      for (i = j = 0; i < parts.length; ++i) {\n\n        expr = parts[i];\n\n        if (expr && (expr = i & 1\n\n            ? _parseExpr(expr, 1, qstr)\n\n            : '\"' + expr\n                .replace(/\\\\/g, '\\\\\\\\')\n                .replace(/\\r\\n?|\\n/g, '\\\\n')\n                .replace(/\"/g, '\\\\\"') +\n              '\"'\n\n          )) { list[j++] = expr; }\n\n      }\n\n      expr = j < 2 ? list[0]\n           : '[' + list.join(',') + '].join(\"\")';\n\n    } else {\n\n      expr = _parseExpr(parts[1], 0, qstr);\n    }\n\n    if (qstr[0]) {\n      expr = expr.replace(RE_QBMARK, function (_, pos) {\n        return qstr[pos]\n          .replace(/\\r/g, '\\\\r')\n          .replace(/\\n/g, '\\\\n')\n      });\n    }\n    return expr\n  }\n\n  var\n    RE_BREND = {\n      '(': /[()]/g,\n      '[': /[[\\]]/g,\n      '{': /[{}]/g\n    };\n\n  function _parseExpr (expr, asText, qstr) {\n\n    expr = expr\n          .replace(RE_QBLOCK, function (s, div) {\n            return s.length > 2 && !div ? CH_IDEXPR + (qstr.push(s) - 1) + '~' : s\n          })\n          .replace(/\\s+/g, ' ').trim()\n          .replace(/\\ ?([[\\({},?\\.:])\\ ?/g, '$1');\n\n    if (expr) {\n      var\n        list = [],\n        cnt = 0,\n        match;\n\n      while (expr &&\n            (match = expr.match(RE_CSNAME)) &&\n            !match.index\n        ) {\n        var\n          key,\n          jsb,\n          re = /,|([[{(])|$/g;\n\n        expr = RegExp.rightContext;\n        key  = match[2] ? qstr[match[2]].slice(1, -1).trim().replace(/\\s+/g, ' ') : match[1];\n\n        while (jsb = (match = re.exec(expr))[1]) { skipBraces(jsb, re); }\n\n        jsb  = expr.slice(0, match.index);\n        expr = RegExp.rightContext;\n\n        list[cnt++] = _wrapExpr(jsb, 1, key);\n      }\n\n      expr = !cnt ? _wrapExpr(expr, asText)\n           : cnt > 1 ? '[' + list.join(',') + '].join(\" \").trim()' : list[0];\n    }\n    return expr\n\n    function skipBraces (ch, re) {\n      var\n        mm,\n        lv = 1,\n        ir = RE_BREND[ch];\n\n      ir.lastIndex = re.lastIndex;\n      while (mm = ir.exec(expr)) {\n        if (mm[0] === ch) { ++lv; }\n        else if (!--lv) { break }\n      }\n      re.lastIndex = lv ? expr.length : ir.lastIndex;\n    }\n  }\n\n  // istanbul ignore next: not both\n  var // eslint-disable-next-line max-len\n    JS_CONTEXT = '\"in this?this:' + (typeof window !== 'object' ? 'global' : 'window') + ').',\n    JS_VARNAME = /[,{][\\$\\w]+(?=:)|(^ *|[^$\\w\\.{])(?!(?:typeof|true|false|null|undefined|in|instanceof|is(?:Finite|NaN)|void|NaN|new|Date|RegExp|Math)(?![$\\w]))([$_A-Za-z][$\\w]*)/g,\n    JS_NOPROPS = /^(?=(\\.[$\\w]+))\\1(?:[^.[(]|$)/;\n\n  function _wrapExpr (expr, asText, key) {\n    var tb;\n\n    expr = expr.replace(JS_VARNAME, function (match, p, mvar, pos, s) {\n      if (mvar) {\n        pos = tb ? 0 : pos + match.length;\n\n        if (mvar !== 'this' && mvar !== 'global' && mvar !== 'window') {\n          match = p + '(\"' + mvar + JS_CONTEXT + mvar;\n          if (pos) { tb = (s = s[pos]) === '.' || s === '(' || s === '['; }\n        } else if (pos) {\n          tb = !JS_NOPROPS.test(s.slice(pos));\n        }\n      }\n      return match\n    });\n\n    if (tb) {\n      expr = 'try{return ' + expr + '}catch(e){E(e,this)}';\n    }\n\n    if (key) {\n\n      expr = (tb\n          ? 'function(){' + expr + '}.call(this)' : '(' + expr + ')'\n        ) + '?\"' + key + '\":\"\"';\n\n    } else if (asText) {\n\n      expr = 'function(v){' + (tb\n          ? expr.replace('return ', 'v=') : 'v=(' + expr + ')'\n        ) + ';return v||v===0?v:\"\"}.call(this)';\n    }\n\n    return expr\n  }\n\n  _tmpl.version = brackets.version = 'v3.0.3';\n\n  return _tmpl\n\n})();\n\n/* istanbul ignore next */\nvar observable$1 = function(el) {\n\n  /**\n   * Extend the original object or create a new empty one\n   * @type { Object }\n   */\n\n  el = el || {};\n\n  /**\n   * Private variables\n   */\n  var callbacks = {},\n    slice = Array.prototype.slice;\n\n  /**\n   * Public Api\n   */\n\n  // extend the el object adding the observable methods\n  Object.defineProperties(el, {\n    /**\n     * Listen to the given `event` ands\n     * execute the `callback` each time an event is triggered.\n     * @param  { String } event - event id\n     * @param  { Function } fn - callback function\n     * @returns { Object } el\n     */\n    on: {\n      value: function(event, fn) {\n        if (typeof fn == 'function')\n          { (callbacks[event] = callbacks[event] || []).push(fn); }\n        return el\n      },\n      enumerable: false,\n      writable: false,\n      configurable: false\n    },\n\n    /**\n     * Removes the given `event` listeners\n     * @param   { String } event - event id\n     * @param   { Function } fn - callback function\n     * @returns { Object } el\n     */\n    off: {\n      value: function(event, fn) {\n        if (event == '*' && !fn) { callbacks = {}; }\n        else {\n          if (fn) {\n            var arr = callbacks[event];\n            for (var i = 0, cb; cb = arr && arr[i]; ++i) {\n              if (cb == fn) { arr.splice(i--, 1); }\n            }\n          } else { delete callbacks[event]; }\n        }\n        return el\n      },\n      enumerable: false,\n      writable: false,\n      configurable: false\n    },\n\n    /**\n     * Listen to the given `event` and\n     * execute the `callback` at most once\n     * @param   { String } event - event id\n     * @param   { Function } fn - callback function\n     * @returns { Object } el\n     */\n    one: {\n      value: function(event, fn) {\n        function on() {\n          el.off(event, on);\n          fn.apply(el, arguments);\n        }\n        return el.on(event, on)\n      },\n      enumerable: false,\n      writable: false,\n      configurable: false\n    },\n\n    /**\n     * Execute all callback functions that listen to\n     * the given `event`\n     * @param   { String } event - event id\n     * @returns { Object } el\n     */\n    trigger: {\n      value: function(event) {\n        var arguments$1 = arguments;\n\n\n        // getting the arguments\n        var arglen = arguments.length - 1,\n          args = new Array(arglen),\n          fns,\n          fn,\n          i;\n\n        for (i = 0; i < arglen; i++) {\n          args[i] = arguments$1[i + 1]; // skip first argument\n        }\n\n        fns = slice.call(callbacks[event] || [], 0);\n\n        for (i = 0; fn = fns[i]; ++i) {\n          fn.apply(el, args);\n        }\n\n        if (callbacks['*'] && event != '*')\n          { el.trigger.apply(el, ['*', event].concat(args)); }\n\n        return el\n      },\n      enumerable: false,\n      writable: false,\n      configurable: false\n    }\n  });\n\n  return el\n\n};\n\n/**\n * Specialized function for looping an array-like collection with `each={}`\n * @param   { Array } list - collection of items\n * @param   {Function} fn - callback function\n * @returns { Array } the array looped\n */\nfunction each(list, fn) {\n  var len = list ? list.length : 0;\n  var i = 0;\n  for (; i < len; ++i) {\n    fn(list[i], i);\n  }\n  return list\n}\n\n/**\n * Check whether an array contains an item\n * @param   { Array } array - target array\n * @param   { * } item - item to test\n * @returns { Boolean } -\n */\nfunction contains(array, item) {\n  return array.indexOf(item) !== -1\n}\n\n/**\n * Convert a string containing dashes to camel case\n * @param   { String } str - input string\n * @returns { String } my-string -> myString\n */\nfunction toCamel(str) {\n  return str.replace(/-(\\w)/g, function (_, c) { return c.toUpperCase(); })\n}\n\n/**\n * Faster String startsWith alternative\n * @param   { String } str - source string\n * @param   { String } value - test string\n * @returns { Boolean } -\n */\nfunction startsWith(str, value) {\n  return str.slice(0, value.length) === value\n}\n\n/**\n * Helper function to set an immutable property\n * @param   { Object } el - object where the new property will be set\n * @param   { String } key - object key where the new property will be stored\n * @param   { * } value - value of the new property\n * @param   { Object } options - set the propery overriding the default options\n * @returns { Object } - the initial object\n */\nfunction defineProperty(el, key, value, options) {\n  Object.defineProperty(el, key, extend({\n    value: value,\n    enumerable: false,\n    writable: false,\n    configurable: true\n  }, options));\n  return el\n}\n\n/**\n * Extend any object with other properties\n * @param   { Object } src - source object\n * @returns { Object } the resulting extended object\n *\n * var obj = { foo: 'baz' }\n * extend(obj, {bar: 'bar', foo: 'bar'})\n * console.log(obj) => {bar: 'bar', foo: 'bar'}\n *\n */\nfunction extend(src) {\n  var obj, args = arguments;\n  for (var i = 1; i < args.length; ++i) {\n    if (obj = args[i]) {\n      for (var key in obj) {\n        // check if this property of the source object could be overridden\n        if (isWritable(src, key))\n          { src[key] = obj[key]; }\n      }\n    }\n  }\n  return src\n}\n\nvar misc = Object.freeze({\n\teach: each,\n\tcontains: contains,\n\ttoCamel: toCamel,\n\tstartsWith: startsWith,\n\tdefineProperty: defineProperty,\n\textend: extend\n});\n\nvar settings$1 = extend(Object.create(brackets.settings), {\n  skipAnonymousTags: true\n});\n\n/**\n * Trigger DOM events\n * @param   { HTMLElement } dom - dom element target of the event\n * @param   { Function } handler - user function\n * @param   { Object } e - event object\n */\nfunction handleEvent(dom, handler, e) {\n  var ptag = this.__.parent,\n    item = this.__.item;\n\n  if (!item)\n    { while (ptag && !item) {\n      item = ptag.__.item;\n      ptag = ptag.__.parent;\n    } }\n\n  // override the event properties\n  /* istanbul ignore next */\n  if (isWritable(e, 'currentTarget')) { e.currentTarget = dom; }\n  /* istanbul ignore next */\n  if (isWritable(e, 'target')) { e.target = e.srcElement; }\n  /* istanbul ignore next */\n  if (isWritable(e, 'which')) { e.which = e.charCode || e.keyCode; }\n\n  e.item = item;\n\n  handler.call(this, e);\n\n  if (!e.preventUpdate) {\n    var p = getImmediateCustomParentTag(this);\n    // fixes #2083\n    if (p.isMounted) { p.update(); }\n  }\n}\n\n/**\n * Attach an event to a DOM node\n * @param { String } name - event name\n * @param { Function } handler - event callback\n * @param { Object } dom - dom node\n * @param { Tag } tag - tag instance\n */\nfunction setEventHandler(name, handler, dom, tag) {\n  var eventName,\n    cb = handleEvent.bind(tag, dom, handler);\n\n  // avoid to bind twice the same event\n  // possible fix for #2332\n  dom[name] = null;\n\n  // normalize event name\n  eventName = name.replace(RE_EVENTS_PREFIX, '');\n\n  // cache the listener into the listeners array\n  if (!contains(tag.__.listeners, dom)) { tag.__.listeners.push(dom); }\n  if (!dom[RIOT_EVENTS_KEY]) { dom[RIOT_EVENTS_KEY] = {}; }\n  if (dom[RIOT_EVENTS_KEY][name]) { dom.removeEventListener(eventName, dom[RIOT_EVENTS_KEY][name]); }\n\n  dom[RIOT_EVENTS_KEY][name] = cb;\n  dom.addEventListener(eventName, cb, false);\n}\n\n/**\n * Update dynamically created data-is tags with changing expressions\n * @param { Object } expr - expression tag and expression info\n * @param { Tag }    parent - parent for tag creation\n * @param { String } tagName - tag implementation we want to use\n */\nfunction updateDataIs(expr, parent, tagName) {\n  var conf, isVirtual, head, ref;\n\n  if (expr.tag && expr.tagName === tagName) {\n    expr.tag.update();\n    return\n  }\n\n  isVirtual = expr.dom.tagName === 'VIRTUAL';\n  // sync _parent to accommodate changing tagnames\n  if (expr.tag) {\n    // need placeholder before unmount\n    if(isVirtual) {\n      head = expr.tag.__.head;\n      ref = createDOMPlaceholder();\n      head.parentNode.insertBefore(ref, head);\n    }\n\n    expr.tag.unmount(true);\n  }\n\n  if (!isString(tagName)) { return }\n\n  expr.impl = __TAG_IMPL[tagName];\n  conf = {root: expr.dom, parent: parent, hasImpl: true, tagName: tagName};\n  expr.tag = initChildTag(expr.impl, conf, expr.dom.innerHTML, parent);\n  each(expr.attrs, function (a) { return setAttr(expr.tag.root, a.name, a.value); });\n  expr.tagName = tagName;\n  expr.tag.mount();\n  if (isVirtual)\n    { makeReplaceVirtual(expr.tag, ref || expr.tag.root); } // root exist first time, after use placeholder\n\n  // parent is the placeholder tag, not the dynamic tag so clean up\n  parent.__.onUnmount = function() {\n    var delName = expr.tag.opts.dataIs,\n      tags = expr.tag.parent.tags,\n      _tags = expr.tag.__.parent.tags;\n    arrayishRemove(tags, delName, expr.tag);\n    arrayishRemove(_tags, delName, expr.tag);\n    expr.tag.unmount();\n  };\n}\n\n/**\n * Nomalize any attribute removing the \"riot-\" prefix\n * @param   { String } attrName - original attribute name\n * @returns { String } valid html attribute name\n */\nfunction normalizeAttrName(attrName) {\n  if (!attrName) { return null }\n  attrName = attrName.replace(ATTRS_PREFIX, '');\n  if (CASE_SENSITIVE_ATTRIBUTES[attrName]) { attrName = CASE_SENSITIVE_ATTRIBUTES[attrName]; }\n  return attrName\n}\n\n/**\n * Update on single tag expression\n * @this Tag\n * @param { Object } expr - expression logic\n * @returns { undefined }\n */\nfunction updateExpression(expr) {\n  if (this.root && getAttr(this.root,'virtualized')) { return }\n\n  var dom = expr.dom,\n    // remove the riot- prefix\n    attrName = normalizeAttrName(expr.attr),\n    isToggle = contains([SHOW_DIRECTIVE, HIDE_DIRECTIVE], attrName),\n    isVirtual = expr.root && expr.root.tagName === 'VIRTUAL',\n    parent = dom && (expr.parent || dom.parentNode),\n    // detect the style attributes\n    isStyleAttr = attrName === 'style',\n    isClassAttr = attrName === 'class',\n    hasValue,\n    isObj,\n    value;\n\n  // if it's a tag we could totally skip the rest\n  if (expr._riot_id) {\n    if (expr.isMounted) {\n      expr.update();\n    // if it hasn't been mounted yet, do that now.\n    } else {\n      expr.mount();\n      if (isVirtual) {\n        makeReplaceVirtual(expr, expr.root);\n      }\n    }\n    return\n  }\n  // if this expression has the update method it means it can handle the DOM changes by itself\n  if (expr.update) { return expr.update() }\n\n  // ...it seems to be a simple expression so we try to calculat its value\n  value = tmpl(expr.expr, isToggle ? extend(Object.create(this.parent), this) : this);\n  hasValue = !isBlank(value);\n  isObj = isObject(value);\n\n  // convert the style/class objects to strings\n  if (isObj) {\n    isObj = !isClassAttr && !isStyleAttr;\n    if (isClassAttr) {\n      value = tmpl(JSON.stringify(value), this);\n    } else if (isStyleAttr) {\n      value = styleObjectToString(value);\n    }\n  }\n\n  // remove original attribute\n  if (expr.attr && (!expr.isAttrRemoved || !hasValue)) {\n    remAttr(dom, expr.attr);\n    expr.isAttrRemoved = true;\n  }\n\n  // for the boolean attributes we don't need the value\n  // we can convert it to checked=true to checked=checked\n  if (expr.bool) { value = value ? attrName : false; }\n  if (expr.isRtag) { return updateDataIs(expr, this, value) }\n  if (expr.wasParsedOnce && expr.value === value) { return }\n\n  // update the expression value\n  expr.value = value;\n  expr.wasParsedOnce = true;\n\n  // if the value is an object we can not do much more with it\n  if (isObj && !isToggle) { return }\n  // avoid to render undefined/null values\n  if (isBlank(value)) { value = ''; }\n\n  // textarea and text nodes have no attribute name\n  if (!attrName) {\n    // about #815 w/o replace: the browser converts the value to a string,\n    // the comparison by \"==\" does too, but not in the server\n    value += '';\n    // test for parent avoids error with invalid assignment to nodeValue\n    if (parent) {\n      // cache the parent node because somehow it will become null on IE\n      // on the next iteration\n      expr.parent = parent;\n      if (parent.tagName === 'TEXTAREA') {\n        parent.value = value;                    // #1113\n        if (!IE_VERSION) { dom.nodeValue = value; }  // #1625 IE throws here, nodeValue\n      }                                         // will be available on 'updated'\n      else { dom.nodeValue = value; }\n    }\n    return\n  }\n\n\n  // event handler\n  if (isFunction(value)) {\n    setEventHandler(attrName, value, dom, this);\n  // show / hide\n  } else if (isToggle) {\n    toggleVisibility(dom, attrName === HIDE_DIRECTIVE ? !value : value);\n  // handle attributes\n  } else {\n    if (expr.bool) {\n      dom[attrName] = value;\n    }\n\n    if (attrName === 'value' && dom.value !== value) {\n      dom.value = value;\n    }\n\n    if (hasValue && value !== false) {\n      setAttr(dom, attrName, value);\n    }\n\n    // make sure that in case of style changes\n    // the element stays hidden\n    if (isStyleAttr && dom.hidden) { toggleVisibility(dom, false); }\n  }\n}\n\n/**\n * Update all the expressions in a Tag instance\n * @this Tag\n * @param { Array } expressions - expression that must be re evaluated\n */\nfunction updateAllExpressions(expressions) {\n  each(expressions, updateExpression.bind(this));\n}\n\nvar IfExpr = {\n  init: function init(dom, tag, expr) {\n    remAttr(dom, CONDITIONAL_DIRECTIVE);\n    this.tag = tag;\n    this.expr = expr;\n    this.stub = document.createTextNode('');\n    this.pristine = dom;\n\n    var p = dom.parentNode;\n    p.insertBefore(this.stub, dom);\n    p.removeChild(dom);\n\n    return this\n  },\n  update: function update() {\n    this.value = tmpl(this.expr, this.tag);\n\n    if (this.value && !this.current) { // insert\n      this.current = this.pristine.cloneNode(true);\n      this.stub.parentNode.insertBefore(this.current, this.stub);\n      this.expressions = [];\n      parseExpressions.apply(this.tag, [this.current, this.expressions, true]);\n    } else if (!this.value && this.current) { // remove\n      unmountAll(this.expressions);\n      if (this.current._tag) {\n        this.current._tag.unmount();\n      } else if (this.current.parentNode) {\n        this.current.parentNode.removeChild(this.current);\n      }\n      this.current = null;\n      this.expressions = [];\n    }\n\n    if (this.value) { updateAllExpressions.call(this.tag, this.expressions); }\n  },\n  unmount: function unmount() {\n    unmountAll(this.expressions || []);\n    delete this.pristine;\n    delete this.parentNode;\n    delete this.stub;\n  }\n};\n\nvar RefExpr = {\n  init: function init(dom, parent, attrName, attrValue) {\n    this.dom = dom;\n    this.attr = attrName;\n    this.rawValue = attrValue;\n    this.parent = parent;\n    this.hasExp = tmpl.hasExpr(attrValue);\n    return this\n  },\n  update: function update() {\n    var old = this.value;\n    var customParent = this.parent && getImmediateCustomParentTag(this.parent);\n    // if the referenced element is a custom tag, then we set the tag itself, rather than DOM\n    var tagOrDom = this.tag || this.dom;\n\n    this.value = this.hasExp ? tmpl(this.rawValue, this.parent) : this.rawValue;\n\n    // the name changed, so we need to remove it from the old key (if present)\n    if (!isBlank(old) && customParent) { arrayishRemove(customParent.refs, old, tagOrDom); }\n    if (!isBlank(this.value)) {\n      // add it to the refs of parent tag (this behavior was changed >=3.0)\n      if (customParent) { arrayishAdd(\n        customParent.refs,\n        this.value,\n        tagOrDom,\n        // use an array if it's a looped node and the ref is not an expression\n        null,\n        this.parent.__.index\n      ); }\n    }\n\n    // if it's the first time we pass here let's remove the ref attribute\n    // #2329\n    if (!old) { remAttr(this.dom, this.attr); }\n  },\n  unmount: function unmount() {\n    var tagOrDom = this.tag || this.dom;\n    var customParent = this.parent && getImmediateCustomParentTag(this.parent);\n    if (!isBlank(this.value) && customParent)\n      { arrayishRemove(customParent.refs, this.value, tagOrDom); }\n    delete this.dom;\n    delete this.parent;\n  }\n};\n\n/**\n * Convert the item looped into an object used to extend the child tag properties\n * @param   { Object } expr - object containing the keys used to extend the children tags\n * @param   { * } key - value to assign to the new object returned\n * @param   { * } val - value containing the position of the item in the array\n * @param   { Object } base - prototype object for the new item\n * @returns { Object } - new object containing the values of the original item\n *\n * The variables 'key' and 'val' are arbitrary.\n * They depend on the collection type looped (Array, Object)\n * and on the expression used on the each tag\n *\n */\nfunction mkitem(expr, key, val, base) {\n  var item = base ? Object.create(base) : {};\n  item[expr.key] = key;\n  if (expr.pos) { item[expr.pos] = val; }\n  return item\n}\n\n/**\n * Unmount the redundant tags\n * @param   { Array } items - array containing the current items to loop\n * @param   { Array } tags - array containing all the children tags\n */\nfunction unmountRedundant(items, tags) {\n  var i = tags.length,\n    j = items.length;\n\n  while (i > j) {\n    i--;\n    remove.apply(tags[i], [tags, i]);\n  }\n}\n\n\n/**\n * Remove a child tag\n * @this Tag\n * @param   { Array } tags - tags collection\n * @param   { Number } i - index of the tag to remove\n */\nfunction remove(tags, i) {\n  tags.splice(i, 1);\n  this.unmount();\n  arrayishRemove(this.parent, this, this.__.tagName, true);\n}\n\n/**\n * Move the nested custom tags in non custom loop tags\n * @this Tag\n * @param   { Number } i - current position of the loop tag\n */\nfunction moveNestedTags(i) {\n  var this$1 = this;\n\n  each(Object.keys(this.tags), function (tagName) {\n    moveChildTag.apply(this$1.tags[tagName], [tagName, i]);\n  });\n}\n\n/**\n * Move a child tag\n * @this Tag\n * @param   { HTMLElement } root - dom node containing all the loop children\n * @param   { Tag } nextTag - instance of the next tag preceding the one we want to move\n * @param   { Boolean } isVirtual - is it a virtual tag?\n */\nfunction move(root, nextTag, isVirtual) {\n  if (isVirtual)\n    { moveVirtual.apply(this, [root, nextTag]); }\n  else\n    { safeInsert(root, this.root, nextTag.root); }\n}\n\n/**\n * Insert and mount a child tag\n * @this Tag\n * @param   { HTMLElement } root - dom node containing all the loop children\n * @param   { Tag } nextTag - instance of the next tag preceding the one we want to insert\n * @param   { Boolean } isVirtual - is it a virtual tag?\n */\nfunction insert(root, nextTag, isVirtual) {\n  if (isVirtual)\n    { makeVirtual.apply(this, [root, nextTag]); }\n  else\n    { safeInsert(root, this.root, nextTag.root); }\n}\n\n/**\n * Append a new tag into the DOM\n * @this Tag\n * @param   { HTMLElement } root - dom node containing all the loop children\n * @param   { Boolean } isVirtual - is it a virtual tag?\n */\nfunction append(root, isVirtual) {\n  if (isVirtual)\n    { makeVirtual.call(this, root); }\n  else\n    { root.appendChild(this.root); }\n}\n\n/**\n * Manage tags having the 'each'\n * @param   { HTMLElement } dom - DOM node we need to loop\n * @param   { Tag } parent - parent tag instance where the dom node is contained\n * @param   { String } expr - string contained in the 'each' attribute\n * @returns { Object } expression object for this each loop\n */\nfunction _each(dom, parent, expr) {\n\n  // remove the each property from the original tag\n  remAttr(dom, LOOP_DIRECTIVE);\n\n  var mustReorder = typeof getAttr(dom, LOOP_NO_REORDER_DIRECTIVE) !== T_STRING || remAttr(dom, LOOP_NO_REORDER_DIRECTIVE),\n    tagName = getTagName(dom),\n    impl = __TAG_IMPL[tagName],\n    parentNode = dom.parentNode,\n    placeholder = createDOMPlaceholder(),\n    child = getTag(dom),\n    ifExpr = getAttr(dom, CONDITIONAL_DIRECTIVE),\n    tags = [],\n    oldItems = [],\n    hasKeys,\n    isLoop = true,\n    isAnonymous = !__TAG_IMPL[tagName],\n    isVirtual = dom.tagName === 'VIRTUAL';\n\n  // parse the each expression\n  expr = tmpl.loopKeys(expr);\n  expr.isLoop = true;\n\n  if (ifExpr) { remAttr(dom, CONDITIONAL_DIRECTIVE); }\n\n  // insert a marked where the loop tags will be injected\n  parentNode.insertBefore(placeholder, dom);\n  parentNode.removeChild(dom);\n\n  expr.update = function updateEach() {\n    // get the new items collection\n    expr.value = tmpl(expr.val, parent);\n\n    var frag = createFrag(),\n      items = expr.value,\n      isObject$$1 = !isArray(items) && !isString(items),\n      root = placeholder.parentNode;\n\n    // if this DOM was removed the update here is useless\n    // this condition fixes also a weird async issue on IE in our unit test\n    if (!root) { return }\n\n    // object loop. any changes cause full redraw\n    if (isObject$$1) {\n      hasKeys = items || false;\n      items = hasKeys ?\n        Object.keys(items).map(function (key) {\n          return mkitem(expr, items[key], key)\n        }) : [];\n    } else {\n      hasKeys = false;\n    }\n\n    if (ifExpr) {\n      items = items.filter(function(item, i) {\n        if (expr.key && !isObject$$1)\n          { return !!tmpl(ifExpr, mkitem(expr, item, i, parent)) }\n\n        return !!tmpl(ifExpr, extend(Object.create(parent), item))\n      });\n    }\n\n    // loop all the new items\n    each(items, function(item, i) {\n      // reorder only if the items are objects\n      var\n        doReorder = mustReorder && typeof item === T_OBJECT && !hasKeys,\n        oldPos = oldItems.indexOf(item),\n        isNew = oldPos === -1,\n        pos = !isNew && doReorder ? oldPos : i,\n        // does a tag exist in this position?\n        tag = tags[pos],\n        mustAppend = i >= oldItems.length,\n        mustCreate =  doReorder && isNew || !doReorder && !tag;\n\n      item = !hasKeys && expr.key ? mkitem(expr, item, i) : item;\n\n      // new tag\n      if (mustCreate) {\n        tag = new Tag$1(impl, {\n          parent: parent,\n          isLoop: isLoop,\n          isAnonymous: isAnonymous,\n          tagName: tagName,\n          root: dom.cloneNode(isAnonymous),\n          item: item,\n          index: i,\n        }, dom.innerHTML);\n\n        // mount the tag\n        tag.mount();\n\n        if (mustAppend)\n          { append.apply(tag, [frag || root, isVirtual]); }\n        else\n          { insert.apply(tag, [root, tags[i], isVirtual]); }\n\n        if (!mustAppend) { oldItems.splice(i, 0, item); }\n        tags.splice(i, 0, tag);\n        if (child) { arrayishAdd(parent.tags, tagName, tag, true); }\n      } else if (pos !== i && doReorder) {\n        // move\n        if (contains(items, oldItems[pos])) {\n          move.apply(tag, [root, tags[i], isVirtual]);\n          // move the old tag instance\n          tags.splice(i, 0, tags.splice(pos, 1)[0]);\n          // move the old item\n          oldItems.splice(i, 0, oldItems.splice(pos, 1)[0]);\n        }\n\n        // update the position attribute if it exists\n        if (expr.pos) { tag[expr.pos] = i; }\n\n        // if the loop tags are not custom\n        // we need to move all their custom tags into the right position\n        if (!child && tag.tags) { moveNestedTags.call(tag, i); }\n      }\n\n      // cache the original item to use it in the events bound to this node\n      // and its children\n      tag.__.item = item;\n      tag.__.index = i;\n      tag.__.parent = parent;\n\n      if (!mustCreate) { tag.update(item); }\n    });\n\n    // remove the redundant tags\n    unmountRedundant(items, tags);\n\n    // clone the items array\n    oldItems = items.slice();\n\n    // this condition is weird u\n    root.insertBefore(frag, placeholder);\n  };\n\n  expr.unmount = function() {\n    each(tags, function(t) { t.unmount(); });\n  };\n\n  return expr\n}\n\n/**\n * Walk the tag DOM to detect the expressions to evaluate\n * @this Tag\n * @param   { HTMLElement } root - root tag where we will start digging the expressions\n * @param   { Array } expressions - empty array where the expressions will be added\n * @param   { Boolean } mustIncludeRoot - flag to decide whether the root must be parsed as well\n * @returns { Object } an object containing the root noode and the dom tree\n */\nfunction parseExpressions(root, expressions, mustIncludeRoot) {\n  var this$1 = this;\n\n  var tree = {parent: {children: expressions}};\n\n  walkNodes(root, function (dom, ctx) {\n    var type = dom.nodeType, parent = ctx.parent, attr, expr, tagImpl;\n    if (!mustIncludeRoot && dom === root) { return {parent: parent} }\n\n    // text node\n    if (type === 3 && dom.parentNode.tagName !== 'STYLE' && tmpl.hasExpr(dom.nodeValue))\n      { parent.children.push({dom: dom, expr: dom.nodeValue}); }\n\n    if (type !== 1) { return ctx } // not an element\n\n    var isVirtual = dom.tagName === 'VIRTUAL';\n\n    // loop. each does it's own thing (for now)\n    if (attr = getAttr(dom, LOOP_DIRECTIVE)) {\n      if(isVirtual) { setAttr(dom, 'loopVirtual', true); } // ignore here, handled in _each\n      parent.children.push(_each(dom, this$1, attr));\n      return false\n    }\n\n    // if-attrs become the new parent. Any following expressions (either on the current\n    // element, or below it) become children of this expression.\n    if (attr = getAttr(dom, CONDITIONAL_DIRECTIVE)) {\n      parent.children.push(Object.create(IfExpr).init(dom, this$1, attr));\n      return false\n    }\n\n    if (expr = getAttr(dom, IS_DIRECTIVE)) {\n      if (tmpl.hasExpr(expr)) {\n        parent.children.push({isRtag: true, expr: expr, dom: dom, attrs: [].slice.call(dom.attributes)});\n        return false\n      }\n    }\n\n    // if this is a tag, stop traversing here.\n    // we ignore the root, since parseExpressions is called while we're mounting that root\n    tagImpl = getTag(dom);\n    if(isVirtual) {\n      if(getAttr(dom, 'virtualized')) {dom.parentElement.removeChild(dom); } // tag created, remove from dom\n      if(!tagImpl && !getAttr(dom, 'virtualized') && !getAttr(dom, 'loopVirtual'))  // ok to create virtual tag\n        { tagImpl = { tmpl: dom.outerHTML }; }\n    }\n\n    if (tagImpl && (dom !== root || mustIncludeRoot)) {\n      if(isVirtual && !getAttr(dom, IS_DIRECTIVE)) { // handled in update\n        // can not remove attribute like directives\n        // so flag for removal after creation to prevent maximum stack error\n        setAttr(dom, 'virtualized', true);\n\n        var tag = new Tag$1({ tmpl: dom.outerHTML },\n          {root: dom, parent: this$1},\n          dom.innerHTML);\n        parent.children.push(tag); // no return, anonymous tag, keep parsing\n      } else {\n        var conf = {root: dom, parent: this$1, hasImpl: true};\n        parent.children.push(initChildTag(tagImpl, conf, dom.innerHTML, this$1));\n        return false\n      }\n    }\n\n    // attribute expressions\n    parseAttributes.apply(this$1, [dom, dom.attributes, function(attr, expr) {\n      if (!expr) { return }\n      parent.children.push(expr);\n    }]);\n\n    // whatever the parent is, all child elements get the same parent.\n    // If this element had an if-attr, that's the parent for all child elements\n    return {parent: parent}\n  }, tree);\n}\n\n/**\n * Calls `fn` for every attribute on an element. If that attr has an expression,\n * it is also passed to fn.\n * @this Tag\n * @param   { HTMLElement } dom - dom node to parse\n * @param   { Array } attrs - array of attributes\n * @param   { Function } fn - callback to exec on any iteration\n */\nfunction parseAttributes(dom, attrs, fn) {\n  var this$1 = this;\n\n  each(attrs, function (attr) {\n    var name = attr.name, bool = isBoolAttr(name), expr;\n\n    if (contains(REF_DIRECTIVES, name)) {\n      expr =  Object.create(RefExpr).init(dom, this$1, name, attr.value);\n    } else if (tmpl.hasExpr(attr.value)) {\n      expr = {dom: dom, expr: attr.value, attr: name, bool: bool};\n    }\n\n    fn(attr, expr);\n  });\n}\n\n/*\n  Includes hacks needed for the Internet Explorer version 9 and below\n  See: http://kangax.github.io/compat-table/es5/#ie8\n       http://codeplanet.io/dropping-ie8/\n*/\n\nvar reHasYield  = /<yield\\b/i;\nvar reYieldAll  = /<yield\\s*(?:\\/>|>([\\S\\s]*?)<\\/yield\\s*>|>)/ig;\nvar reYieldSrc  = /<yield\\s+to=['\"]([^'\">]*)['\"]\\s*>([\\S\\s]*?)<\\/yield\\s*>/ig;\nvar reYieldDest = /<yield\\s+from=['\"]?([-\\w]+)['\"]?\\s*(?:\\/>|>([\\S\\s]*?)<\\/yield\\s*>)/ig;\nvar rootEls = { tr: 'tbody', th: 'tr', td: 'tr', col: 'colgroup' };\nvar tblTags = IE_VERSION && IE_VERSION < 10 ? RE_SPECIAL_TAGS : RE_SPECIAL_TAGS_NO_OPTION;\nvar GENERIC = 'div';\n\n\n/*\n  Creates the root element for table or select child elements:\n  tr/th/td/thead/tfoot/tbody/caption/col/colgroup/option/optgroup\n*/\nfunction specialTags(el, tmpl, tagName) {\n\n  var\n    select = tagName[0] === 'o',\n    parent = select ? 'select>' : 'table>';\n\n  // trim() is important here, this ensures we don't have artifacts,\n  // so we can check if we have only one element inside the parent\n  el.innerHTML = '<' + parent + tmpl.trim() + '</' + parent;\n  parent = el.firstChild;\n\n  // returns the immediate parent if tr/th/td/col is the only element, if not\n  // returns the whole tree, as this can include additional elements\n  /* istanbul ignore next */\n  if (select) {\n    parent.selectedIndex = -1;  // for IE9, compatible w/current riot behavior\n  } else {\n    // avoids insertion of cointainer inside container (ex: tbody inside tbody)\n    var tname = rootEls[tagName];\n    if (tname && parent.childElementCount === 1) { parent = $(tname, parent); }\n  }\n  return parent\n}\n\n/*\n  Replace the yield tag from any tag template with the innerHTML of the\n  original tag in the page\n*/\nfunction replaceYield(tmpl, html) {\n  // do nothing if no yield\n  if (!reHasYield.test(tmpl)) { return tmpl }\n\n  // be careful with #1343 - string on the source having `$1`\n  var src = {};\n\n  html = html && html.replace(reYieldSrc, function (_, ref, text) {\n    src[ref] = src[ref] || text;   // preserve first definition\n    return ''\n  }).trim();\n\n  return tmpl\n    .replace(reYieldDest, function (_, ref, def) {  // yield with from - to attrs\n      return src[ref] || def || ''\n    })\n    .replace(reYieldAll, function (_, def) {        // yield without any \"from\"\n      return html || def || ''\n    })\n}\n\n/**\n * Creates a DOM element to wrap the given content. Normally an `DIV`, but can be\n * also a `TABLE`, `SELECT`, `TBODY`, `TR`, or `COLGROUP` element.\n *\n * @param   { String } tmpl  - The template coming from the custom tag definition\n * @param   { String } html - HTML content that comes from the DOM element where you\n *           will mount the tag, mostly the original tag in the page\n * @returns { HTMLElement } DOM element with _tmpl_ merged through `YIELD` with the _html_.\n */\nfunction mkdom(tmpl, html) {\n  var match   = tmpl && tmpl.match(/^\\s*<([-\\w]+)/),\n    tagName = match && match[1].toLowerCase(),\n    el = mkEl(GENERIC);\n\n  // replace all the yield tags with the tag inner html\n  tmpl = replaceYield(tmpl, html);\n\n  /* istanbul ignore next */\n  if (tblTags.test(tagName))\n    { el = specialTags(el, tmpl, tagName); }\n  else\n    { setInnerHTML(el, tmpl); }\n\n  return el\n}\n\n/**\n * Another way to create a riot tag a bit more es6 friendly\n * @param { HTMLElement } el - tag DOM selector or DOM node/s\n * @param { Object } opts - tag logic\n * @returns { Tag } new riot tag instance\n */\nfunction Tag$2(el, opts) {\n  // get the tag properties from the class constructor\n  var ref = this;\n  var name = ref.name;\n  var tmpl = ref.tmpl;\n  var css = ref.css;\n  var attrs = ref.attrs;\n  var onCreate = ref.onCreate;\n  // register a new tag and cache the class prototype\n  if (!__TAG_IMPL[name]) {\n    tag$1(name, tmpl, css, attrs, onCreate);\n    // cache the class constructor\n    __TAG_IMPL[name].class = this.constructor;\n  }\n\n  // mount the tag using the class instance\n  mountTo(el, name, opts, this);\n  // inject the component css\n  if (css) { styleManager.inject(); }\n\n  return this\n}\n\n/**\n * Create a new riot tag implementation\n * @param   { String }   name - name/id of the new riot tag\n * @param   { String }   tmpl - tag template\n * @param   { String }   css - custom tag css\n * @param   { String }   attrs - root tag attributes\n * @param   { Function } fn - user function\n * @returns { String } name/id of the tag just created\n */\nfunction tag$1(name, tmpl, css, attrs, fn) {\n  if (isFunction(attrs)) {\n    fn = attrs;\n\n    if (/^[\\w\\-]+\\s?=/.test(css)) {\n      attrs = css;\n      css = '';\n    } else\n      { attrs = ''; }\n  }\n\n  if (css) {\n    if (isFunction(css))\n      { fn = css; }\n    else\n      { styleManager.add(css); }\n  }\n\n  name = name.toLowerCase();\n  __TAG_IMPL[name] = { name: name, tmpl: tmpl, attrs: attrs, fn: fn };\n\n  return name\n}\n\n/**\n * Create a new riot tag implementation (for use by the compiler)\n * @param   { String }   name - name/id of the new riot tag\n * @param   { String }   tmpl - tag template\n * @param   { String }   css - custom tag css\n * @param   { String }   attrs - root tag attributes\n * @param   { Function } fn - user function\n * @returns { String } name/id of the tag just created\n */\nfunction tag2$1(name, tmpl, css, attrs, fn) {\n  if (css) { styleManager.add(css, name); }\n\n  __TAG_IMPL[name] = { name: name, tmpl: tmpl, attrs: attrs, fn: fn };\n\n  return name\n}\n\n/**\n * Mount a tag using a specific tag implementation\n * @param   { * } selector - tag DOM selector or DOM node/s\n * @param   { String } tagName - tag implementation name\n * @param   { Object } opts - tag logic\n * @returns { Array } new tags instances\n */\nfunction mount$1(selector, tagName, opts) {\n  var tags = [];\n\n  function pushTagsTo(root) {\n    if (root.tagName) {\n      var riotTag = getAttr(root, IS_DIRECTIVE);\n\n      // have tagName? force riot-tag to be the same\n      if (tagName && riotTag !== tagName) {\n        riotTag = tagName;\n        setAttr(root, IS_DIRECTIVE, tagName);\n      }\n\n      var tag = mountTo(root, riotTag || root.tagName.toLowerCase(), opts);\n\n      if (tag)\n        { tags.push(tag); }\n    } else if (root.length)\n      { each(root, pushTagsTo); } // assume nodeList\n  }\n\n  // inject styles into DOM\n  styleManager.inject();\n\n  if (isObject(tagName)) {\n    opts = tagName;\n    tagName = 0;\n  }\n\n  var elem;\n  var allTags;\n\n  // crawl the DOM to find the tag\n  if (isString(selector)) {\n    selector = selector === '*' ?\n      // select all registered tags\n      // & tags found with the riot-tag attribute set\n      allTags = selectTags() :\n      // or just the ones named like the selector\n      selector + selectTags(selector.split(/, */));\n\n    // make sure to pass always a selector\n    // to the querySelectorAll function\n    elem = selector ? $$(selector) : [];\n  }\n  else\n    // probably you have passed already a tag or a NodeList\n    { elem = selector; }\n\n  // select all the registered and mount them inside their root elements\n  if (tagName === '*') {\n    // get all custom tags\n    tagName = allTags || selectTags();\n    // if the root els it's just a single tag\n    if (elem.tagName)\n      { elem = $$(tagName, elem); }\n    else {\n      // select all the children for all the different root elements\n      var nodeList = [];\n\n      each(elem, function (_el) { return nodeList.push($$(tagName, _el)); });\n\n      elem = nodeList;\n    }\n    // get rid of the tagName\n    tagName = 0;\n  }\n\n  pushTagsTo(elem);\n\n  return tags\n}\n\n// Create a mixin that could be globally shared across all the tags\nvar mixins = {};\nvar globals = mixins[GLOBAL_MIXIN] = {};\nvar mixins_id = 0;\n\n/**\n * Create/Return a mixin by its name\n * @param   { String }  name - mixin name (global mixin if object)\n * @param   { Object }  mix - mixin logic\n * @param   { Boolean } g - is global?\n * @returns { Object }  the mixin logic\n */\nfunction mixin$1(name, mix, g) {\n  // Unnamed global\n  if (isObject(name)) {\n    mixin$1((\"__unnamed_\" + (mixins_id++)), name, true);\n    return\n  }\n\n  var store = g ? globals : mixins;\n\n  // Getter\n  if (!mix) {\n    if (isUndefined(store[name]))\n      { throw new Error('Unregistered mixin: ' + name) }\n\n    return store[name]\n  }\n\n  // Setter\n  store[name] = isFunction(mix) ?\n    extend(mix.prototype, store[name] || {}) && mix :\n    extend(store[name] || {}, mix);\n}\n\n/**\n * Update all the tags instances created\n * @returns { Array } all the tags instances\n */\nfunction update$1() {\n  return each(__TAGS_CACHE, function (tag) { return tag.update(); })\n}\n\nfunction unregister$1(name) {\n  delete __TAG_IMPL[name];\n}\n\nvar version$1 = 'v3.4.4';\n\n\nvar core = Object.freeze({\n\tTag: Tag$2,\n\ttag: tag$1,\n\ttag2: tag2$1,\n\tmount: mount$1,\n\tmixin: mixin$1,\n\tupdate: update$1,\n\tunregister: unregister$1,\n\tversion: version$1\n});\n\n// counter to give a unique id to all the Tag instances\nvar __uid = 0;\n\n/**\n * We need to update opts for this tag. That requires updating the expressions\n * in any attributes on the tag, and then copying the result onto opts.\n * @this Tag\n * @param   {Boolean} isLoop - is it a loop tag?\n * @param   { Tag }  parent - parent tag node\n * @param   { Boolean }  isAnonymous - is it a tag without any impl? (a tag not registered)\n * @param   { Object }  opts - tag options\n * @param   { Array }  instAttrs - tag attributes array\n */\nfunction updateOpts(isLoop, parent, isAnonymous, opts, instAttrs) {\n  // isAnonymous `each` tags treat `dom` and `root` differently. In this case\n  // (and only this case) we don't need to do updateOpts, because the regular parse\n  // will update those attrs. Plus, isAnonymous tags don't need opts anyway\n  if (isLoop && isAnonymous) { return }\n\n  var ctx = !isAnonymous && isLoop ? this : parent || this;\n  each(instAttrs, function (attr) {\n    if (attr.expr) { updateAllExpressions.call(ctx, [attr.expr]); }\n    // normalize the attribute names\n    opts[toCamel(attr.name).replace(ATTRS_PREFIX, '')] = attr.expr ? attr.expr.value : attr.value;\n  });\n}\n\n\n/**\n * Tag class\n * @constructor\n * @param { Object } impl - it contains the tag template, and logic\n * @param { Object } conf - tag options\n * @param { String } innerHTML - html that eventually we need to inject in the tag\n */\nfunction Tag$1(impl, conf, innerHTML) {\n  if ( impl === void 0 ) impl = {};\n  if ( conf === void 0 ) conf = {};\n\n  var opts = extend({}, conf.opts),\n    parent = conf.parent,\n    isLoop = conf.isLoop,\n    isAnonymous = !!conf.isAnonymous,\n    skipAnonymous = settings$1.skipAnonymousTags && isAnonymous,\n    item = cleanUpData(conf.item),\n    index = conf.index, // available only for the looped nodes\n    instAttrs = [], // All attributes on the Tag when it's first parsed\n    implAttrs = [], // expressions on this type of Tag\n    expressions = [],\n    root = conf.root,\n    tagName = conf.tagName || getTagName(root),\n    isVirtual = tagName === 'virtual',\n    propsInSyncWithParent = [],\n    dom;\n\n  // make this tag observable\n  if (!skipAnonymous) { observable$1(this); }\n  // only call unmount if we have a valid __TAG_IMPL (has name property)\n  if (impl.name && root._tag) { root._tag.unmount(true); }\n\n  // not yet mounted\n  this.isMounted = false;\n\n  defineProperty(this, '__', {\n    isAnonymous: isAnonymous,\n    instAttrs: instAttrs,\n    innerHTML: innerHTML,\n    tagName: tagName,\n    index: index,\n    isLoop: isLoop,\n    // tags having event listeners\n    // it would be better to use weak maps here but we can not introduce breaking changes now\n    listeners: [],\n    // these vars will be needed only for the virtual tags\n    virts: [],\n    tail: null,\n    head: null,\n    parent: null,\n    item: null\n  });\n\n  // create a unique id to this tag\n  // it could be handy to use it also to improve the virtual dom rendering speed\n  defineProperty(this, '_riot_id', ++__uid); // base 1 allows test !t._riot_id\n  defineProperty(this, 'root', root);\n  extend(this, { opts: opts }, item);\n  // protect the \"tags\" and \"refs\" property from being overridden\n  defineProperty(this, 'parent', parent || null);\n  defineProperty(this, 'tags', {});\n  defineProperty(this, 'refs', {});\n\n  dom = isLoop && isAnonymous ? root : mkdom(impl.tmpl, innerHTML, isLoop);\n\n  /**\n   * Update the tag expressions and options\n   * @param   { * }  data - data we want to use to extend the tag properties\n   * @returns { Tag } the current tag instance\n   */\n  defineProperty(this, 'update', function tagUpdate(data) {\n    var nextOpts = {},\n      canTrigger = this.isMounted && !skipAnonymous;\n\n    // make sure the data passed will not override\n    // the component core methods\n    data = cleanUpData(data);\n    extend(this, data);\n    updateOpts.apply(this, [isLoop, parent, isAnonymous, nextOpts, instAttrs]);\n\n    if (canTrigger && this.isMounted && isFunction(this.shouldUpdate) && !this.shouldUpdate(data, nextOpts)) {\n      return this\n    }\n\n    // inherit properties from the parent, but only for isAnonymous tags\n    if (isLoop && isAnonymous) { inheritFrom.apply(this, [this.parent, propsInSyncWithParent]); }\n    extend(opts, nextOpts);\n    if (canTrigger) { this.trigger('update', data); }\n    updateAllExpressions.call(this, expressions);\n    if (canTrigger) { this.trigger('updated'); }\n\n    return this\n\n  }.bind(this));\n\n  /**\n   * Add a mixin to this tag\n   * @returns { Tag } the current tag instance\n   */\n  defineProperty(this, 'mixin', function tagMixin() {\n    var this$1 = this;\n\n    each(arguments, function (mix) {\n      var instance, obj;\n      var props = [];\n\n      // properties blacklisted and will not be bound to the tag instance\n      var propsBlacklist = ['init', '__proto__'];\n\n      mix = isString(mix) ? mixin$1(mix) : mix;\n\n      // check if the mixin is a function\n      if (isFunction(mix)) {\n        // create the new mixin instance\n        instance = new mix();\n      } else { instance = mix; }\n\n      var proto = Object.getPrototypeOf(instance);\n\n      // build multilevel prototype inheritance chain property list\n      do { props = props.concat(Object.getOwnPropertyNames(obj || instance)); }\n      while (obj = Object.getPrototypeOf(obj || instance))\n\n      // loop the keys in the function prototype or the all object keys\n      each(props, function (key) {\n        // bind methods to this\n        // allow mixins to override other properties/parent mixins\n        if (!contains(propsBlacklist, key)) {\n          // check for getters/setters\n          var descriptor = Object.getOwnPropertyDescriptor(instance, key) || Object.getOwnPropertyDescriptor(proto, key);\n          var hasGetterSetter = descriptor && (descriptor.get || descriptor.set);\n\n          // apply method only if it does not already exist on the instance\n          if (!this$1.hasOwnProperty(key) && hasGetterSetter) {\n            Object.defineProperty(this$1, key, descriptor);\n          } else {\n            this$1[key] = isFunction(instance[key]) ?\n              instance[key].bind(this$1) :\n              instance[key];\n          }\n        }\n      });\n\n      // init method will be called automatically\n      if (instance.init)\n        { instance.init.bind(this$1)(); }\n    });\n    return this\n  }.bind(this));\n\n  /**\n   * Mount the current tag instance\n   * @returns { Tag } the current tag instance\n   */\n  defineProperty(this, 'mount', function tagMount() {\n    var this$1 = this;\n\n    root._tag = this; // keep a reference to the tag just created\n\n    // Read all the attrs on this instance. This give us the info we need for updateOpts\n    parseAttributes.apply(parent, [root, root.attributes, function (attr, expr) {\n      if (!isAnonymous && RefExpr.isPrototypeOf(expr)) { expr.tag = this$1; }\n      attr.expr = expr;\n      instAttrs.push(attr);\n    }]);\n\n    // update the root adding custom attributes coming from the compiler\n    implAttrs = [];\n    walkAttrs(impl.attrs, function (k, v) { implAttrs.push({name: k, value: v}); });\n    parseAttributes.apply(this, [root, implAttrs, function (attr, expr) {\n      if (expr) { expressions.push(expr); }\n      else { setAttr(root, attr.name, attr.value); }\n    }]);\n\n    // initialiation\n    updateOpts.apply(this, [isLoop, parent, isAnonymous, opts, instAttrs]);\n\n    // add global mixins\n    var globalMixin = mixin$1(GLOBAL_MIXIN);\n\n    if (globalMixin && !skipAnonymous) {\n      for (var i in globalMixin) {\n        if (globalMixin.hasOwnProperty(i)) {\n          this$1.mixin(globalMixin[i]);\n        }\n      }\n    }\n\n    if (impl.fn) { impl.fn.call(this, opts); }\n\n    if (!skipAnonymous) { this.trigger('before-mount'); }\n\n    // parse layout after init. fn may calculate args for nested custom tags\n    parseExpressions.apply(this, [dom, expressions, isAnonymous]);\n\n    this.update(item);\n\n    if (!isAnonymous) {\n      while (dom.firstChild) { root.appendChild(dom.firstChild); }\n    }\n\n    defineProperty(this, 'root', root);\n    defineProperty(this, 'isMounted', true);\n\n    if (skipAnonymous) { return }\n\n    // if it's not a child tag we can trigger its mount event\n    if (!this.parent) {\n      this.trigger('mount');\n    }\n    // otherwise we need to wait that the parent \"mount\" or \"updated\" event gets triggered\n    else {\n      var p = getImmediateCustomParentTag(this.parent);\n      p.one(!p.isMounted ? 'mount' : 'updated', function () {\n        this$1.trigger('mount');\n      });\n    }\n\n    return this\n\n  }.bind(this));\n\n  /**\n   * Unmount the tag instance\n   * @param { Boolean } mustKeepRoot - if it's true the root node will not be removed\n   * @returns { Tag } the current tag instance\n   */\n  defineProperty(this, 'unmount', function tagUnmount(mustKeepRoot) {\n    var this$1 = this;\n\n    var el = this.root,\n      p = el.parentNode,\n      ptag,\n      tagIndex = __TAGS_CACHE.indexOf(this);\n\n    if (!skipAnonymous) { this.trigger('before-unmount'); }\n\n    // clear all attributes coming from the mounted tag\n    walkAttrs(impl.attrs, function (name) {\n      if (startsWith(name, ATTRS_PREFIX))\n        { name = name.slice(ATTRS_PREFIX.length); }\n      remAttr(root, name);\n    });\n\n    // remove all the event listeners\n    this.__.listeners.forEach(function (dom) {\n      Object.keys(dom[RIOT_EVENTS_KEY]).forEach(function (eventName) {\n        dom.removeEventListener(eventName, dom[RIOT_EVENTS_KEY][eventName]);\n      });\n    });\n\n    // remove this tag instance from the global virtualDom variable\n    if (tagIndex !== -1)\n      { __TAGS_CACHE.splice(tagIndex, 1); }\n\n    if (p || isVirtual) {\n      if (parent) {\n        ptag = getImmediateCustomParentTag(parent);\n\n        if (isVirtual) {\n          Object.keys(this.tags).forEach(function (tagName) {\n            arrayishRemove(ptag.tags, tagName, this$1.tags[tagName]);\n          });\n        } else {\n          arrayishRemove(ptag.tags, tagName, this);\n          if(parent !== ptag) // remove from _parent too\n            { arrayishRemove(parent.tags, tagName, this); }\n        }\n      } else {\n        // remove the tag contents\n        setInnerHTML(el, '');\n      }\n\n      if (p && !mustKeepRoot) { p.removeChild(el); }\n    }\n\n    if (this.__.virts) {\n      each(this.__.virts, function (v) {\n        if (v.parentNode) { v.parentNode.removeChild(v); }\n      });\n    }\n\n    // allow expressions to unmount themselves\n    unmountAll(expressions);\n    each(instAttrs, function (a) { return a.expr && a.expr.unmount && a.expr.unmount(); });\n\n    // custom internal unmount function to avoid relying on the observable\n    if (this.__.onUnmount) { this.__.onUnmount(); }\n\n    if (!skipAnonymous) {\n      this.trigger('unmount');\n      this.off('*');\n    }\n\n    defineProperty(this, 'isMounted', false);\n\n    delete this.root._tag;\n\n    return this\n\n  }.bind(this));\n}\n\n/**\n * Detect the tag implementation by a DOM node\n * @param   { Object } dom - DOM node we need to parse to get its tag implementation\n * @returns { Object } it returns an object containing the implementation of a custom tag (template and boot function)\n */\nfunction getTag(dom) {\n  return dom.tagName && __TAG_IMPL[getAttr(dom, IS_DIRECTIVE) ||\n    getAttr(dom, IS_DIRECTIVE) || dom.tagName.toLowerCase()]\n}\n\n/**\n * Inherit properties from a target tag instance\n * @this Tag\n * @param   { Tag } target - tag where we will inherit properties\n * @param   { Array } propsInSyncWithParent - array of properties to sync with the target\n */\nfunction inheritFrom(target, propsInSyncWithParent) {\n  var this$1 = this;\n\n  each(Object.keys(target), function (k) {\n    // some properties must be always in sync with the parent tag\n    var mustSync = !isReservedName(k) && contains(propsInSyncWithParent, k);\n\n    if (isUndefined(this$1[k]) || mustSync) {\n      // track the property to keep in sync\n      // so we can keep it updated\n      if (!mustSync) { propsInSyncWithParent.push(k); }\n      this$1[k] = target[k];\n    }\n  });\n}\n\n/**\n * Move the position of a custom tag in its parent tag\n * @this Tag\n * @param   { String } tagName - key where the tag was stored\n * @param   { Number } newPos - index where the new tag will be stored\n */\nfunction moveChildTag(tagName, newPos) {\n  var parent = this.parent,\n    tags;\n  // no parent no move\n  if (!parent) { return }\n\n  tags = parent.tags[tagName];\n\n  if (isArray(tags))\n    { tags.splice(newPos, 0, tags.splice(tags.indexOf(this), 1)[0]); }\n  else { arrayishAdd(parent.tags, tagName, this); }\n}\n\n/**\n * Create a new child tag including it correctly into its parent\n * @param   { Object } child - child tag implementation\n * @param   { Object } opts - tag options containing the DOM node where the tag will be mounted\n * @param   { String } innerHTML - inner html of the child node\n * @param   { Object } parent - instance of the parent tag including the child custom tag\n * @returns { Object } instance of the new child tag just created\n */\nfunction initChildTag(child, opts, innerHTML, parent) {\n  var tag = new Tag$1(child, opts, innerHTML),\n    tagName = opts.tagName || getTagName(opts.root, true),\n    ptag = getImmediateCustomParentTag(parent);\n  // fix for the parent attribute in the looped elements\n  defineProperty(tag, 'parent', ptag);\n  // store the real parent tag\n  // in some cases this could be different from the custom parent tag\n  // for example in nested loops\n  tag.__.parent = parent;\n\n  // add this tag to the custom parent tag\n  arrayishAdd(ptag.tags, tagName, tag);\n\n  // and also to the real parent tag\n  if (ptag !== parent)\n    { arrayishAdd(parent.tags, tagName, tag); }\n\n  // empty the child node once we got its template\n  // to avoid that its children get compiled multiple times\n  opts.root.innerHTML = '';\n\n  return tag\n}\n\n/**\n * Loop backward all the parents tree to detect the first custom parent tag\n * @param   { Object } tag - a Tag instance\n * @returns { Object } the instance of the first custom parent tag found\n */\nfunction getImmediateCustomParentTag(tag) {\n  var ptag = tag;\n  while (ptag.__.isAnonymous) {\n    if (!ptag.parent) { break }\n    ptag = ptag.parent;\n  }\n  return ptag\n}\n\n/**\n * Trigger the unmount method on all the expressions\n * @param   { Array } expressions - DOM expressions\n */\nfunction unmountAll(expressions) {\n  each(expressions, function(expr) {\n    if (expr instanceof Tag$1) { expr.unmount(true); }\n    else if (expr.tagName) { expr.tag.unmount(true); }\n    else if (expr.unmount) { expr.unmount(); }\n  });\n}\n\n/**\n * Get the tag name of any DOM node\n * @param   { Object } dom - DOM node we want to parse\n * @param   { Boolean } skipDataIs - hack to ignore the data-is attribute when attaching to parent\n * @returns { String } name to identify this dom node in riot\n */\nfunction getTagName(dom, skipDataIs) {\n  var child = getTag(dom),\n    namedTag = !skipDataIs && getAttr(dom, IS_DIRECTIVE);\n  return namedTag && !tmpl.hasExpr(namedTag) ?\n                namedTag :\n              child ? child.name : dom.tagName.toLowerCase()\n}\n\n/**\n * With this function we avoid that the internal Tag methods get overridden\n * @param   { Object } data - options we want to use to extend the tag instance\n * @returns { Object } clean object without containing the riot internal reserved words\n */\nfunction cleanUpData(data) {\n  if (!(data instanceof Tag$1) && !(data && isFunction(data.trigger)))\n    { return data }\n\n  var o = {};\n  for (var key in data) {\n    if (!RE_RESERVED_NAMES.test(key)) { o[key] = data[key]; }\n  }\n  return o\n}\n\n/**\n * Set the property of an object for a given key. If something already\n * exists there, then it becomes an array containing both the old and new value.\n * @param { Object } obj - object on which to set the property\n * @param { String } key - property name\n * @param { Object } value - the value of the property to be set\n * @param { Boolean } ensureArray - ensure that the property remains an array\n * @param { Number } index - add the new item in a certain array position\n */\nfunction arrayishAdd(obj, key, value, ensureArray, index) {\n  var dest = obj[key];\n  var isArr = isArray(dest);\n  var hasIndex = !isUndefined(index);\n\n  if (dest && dest === value) { return }\n\n  // if the key was never set, set it once\n  if (!dest && ensureArray) { obj[key] = [value]; }\n  else if (!dest) { obj[key] = value; }\n  // if it was an array and not yet set\n  else {\n    if (isArr) {\n      var oldIndex = dest.indexOf(value);\n      // this item never changed its position\n      if (oldIndex === index) { return }\n      // remove the item from its old position\n      if (oldIndex !== -1) { dest.splice(oldIndex, 1); }\n      // move or add the item\n      if (hasIndex) {\n        dest.splice(index, 0, value);\n      } else {\n        dest.push(value);\n      }\n    } else { obj[key] = [dest, value]; }\n  }\n}\n\n/**\n * Removes an item from an object at a given key. If the key points to an array,\n * then the item is just removed from the array.\n * @param { Object } obj - object on which to remove the property\n * @param { String } key - property name\n * @param { Object } value - the value of the property to be removed\n * @param { Boolean } ensureArray - ensure that the property remains an array\n*/\nfunction arrayishRemove(obj, key, value, ensureArray) {\n  if (isArray(obj[key])) {\n    var index = obj[key].indexOf(value);\n    if (index !== -1) { obj[key].splice(index, 1); }\n    if (!obj[key].length) { delete obj[key]; }\n    else if (obj[key].length === 1 && !ensureArray) { obj[key] = obj[key][0]; }\n  } else\n    { delete obj[key]; } // otherwise just delete the key\n}\n\n/**\n * Mount a tag creating new Tag instance\n * @param   { Object } root - dom node where the tag will be mounted\n * @param   { String } tagName - name of the riot tag we want to mount\n * @param   { Object } opts - options to pass to the Tag instance\n * @param   { Object } ctx - optional context that will be used to extend an existing class ( used in riot.Tag )\n * @returns { Tag } a new Tag instance\n */\nfunction mountTo(root, tagName, opts, ctx) {\n  var impl = __TAG_IMPL[tagName],\n    implClass = __TAG_IMPL[tagName].class,\n    tag = ctx || (implClass ? Object.create(implClass.prototype) : {}),\n    // cache the inner HTML to fix #855\n    innerHTML = root._innerHTML = root._innerHTML || root.innerHTML;\n\n  // clear the inner html\n  root.innerHTML = '';\n\n  var conf = extend({ root: root, opts: opts }, { parent: opts ? opts.parent : null });\n\n  if (impl && root) { Tag$1.apply(tag, [impl, conf, innerHTML]); }\n\n  if (tag && tag.mount) {\n    tag.mount(true);\n    // add this tag to the virtualDom variable\n    if (!contains(__TAGS_CACHE, tag)) { __TAGS_CACHE.push(tag); }\n  }\n\n  return tag\n}\n\n/**\n * makes a tag virtual and replaces a reference in the dom\n * @this Tag\n * @param { tag } the tag to make virtual\n * @param { ref } the dom reference location\n */\nfunction makeReplaceVirtual(tag, ref) {\n  var frag = createFrag();\n  makeVirtual.call(tag, frag);\n  ref.parentNode.replaceChild(frag, ref);\n}\n\n/**\n * Adds the elements for a virtual tag\n * @this Tag\n * @param { Node } src - the node that will do the inserting or appending\n * @param { Tag } target - only if inserting, insert before this tag's first child\n */\nfunction makeVirtual(src, target) {\n  var this$1 = this;\n\n  var head = createDOMPlaceholder(),\n    tail = createDOMPlaceholder(),\n    frag = createFrag(),\n    sib, el;\n\n  this.root.insertBefore(head, this.root.firstChild);\n  this.root.appendChild(tail);\n\n  this.__.head = el = head;\n  this.__.tail = tail;\n\n  while (el) {\n    sib = el.nextSibling;\n    frag.appendChild(el);\n    this$1.__.virts.push(el); // hold for unmounting\n    el = sib;\n  }\n\n  if (target)\n    { src.insertBefore(frag, target.__.head); }\n  else\n    { src.appendChild(frag); }\n}\n\n/**\n * Move virtual tag and all child nodes\n * @this Tag\n * @param { Node } src  - the node that will do the inserting\n * @param { Tag } target - insert before this tag's first child\n */\nfunction moveVirtual(src, target) {\n  var this$1 = this;\n\n  var el = this.__.head,\n    frag = createFrag(),\n    sib;\n\n  while (el) {\n    sib = el.nextSibling;\n    frag.appendChild(el);\n    el = sib;\n    if (el === this$1.__.tail) {\n      frag.appendChild(el);\n      src.insertBefore(frag, target.__.head);\n      break\n    }\n  }\n}\n\n/**\n * Get selectors for tags\n * @param   { Array } tags - tag names to select\n * @returns { String } selector\n */\nfunction selectTags(tags) {\n  // select all tags\n  if (!tags) {\n    var keys = Object.keys(__TAG_IMPL);\n    return keys + selectTags(keys)\n  }\n\n  return tags\n    .filter(function (t) { return !/[^-\\w]/.test(t); })\n    .reduce(function (list, t) {\n      var name = t.trim().toLowerCase();\n      return list + \",[\" + IS_DIRECTIVE + \"=\\\"\" + name + \"\\\"]\"\n    }, '')\n}\n\n\nvar tags = Object.freeze({\n\tgetTag: getTag,\n\tinheritFrom: inheritFrom,\n\tmoveChildTag: moveChildTag,\n\tinitChildTag: initChildTag,\n\tgetImmediateCustomParentTag: getImmediateCustomParentTag,\n\tunmountAll: unmountAll,\n\tgetTagName: getTagName,\n\tcleanUpData: cleanUpData,\n\tarrayishAdd: arrayishAdd,\n\tarrayishRemove: arrayishRemove,\n\tmountTo: mountTo,\n\tmakeReplaceVirtual: makeReplaceVirtual,\n\tmakeVirtual: makeVirtual,\n\tmoveVirtual: moveVirtual,\n\tselectTags: selectTags\n});\n\n/**\n * Riot public api\n */\nvar settings = settings$1;\nvar util = {\n  tmpl: tmpl,\n  brackets: brackets,\n  styleManager: styleManager,\n  vdom: __TAGS_CACHE,\n  styleNode: styleManager.styleNode,\n  // export the riot internal utils as well\n  dom: dom,\n  check: check,\n  misc: misc,\n  tags: tags\n};\n\n// export the core props/methods\nvar Tag$$1 = Tag$2;\nvar tag$$1 = tag$1;\nvar tag2$$1 = tag2$1;\nvar mount$$1 = mount$1;\nvar mixin$$1 = mixin$1;\nvar update$$1 = update$1;\nvar unregister$$1 = unregister$1;\nvar version$$1 = version$1;\nvar observable = observable$1;\n\nvar riot$1 = extend({}, core, {\n  observable: observable$1,\n  settings: settings,\n  util: util,\n});\n\nexports.settings = settings;\nexports.util = util;\nexports.Tag = Tag$$1;\nexports.tag = tag$$1;\nexports.tag2 = tag2$$1;\nexports.mount = mount$$1;\nexports.mixin = mixin$$1;\nexports.update = update$$1;\nexports.unregister = unregister$$1;\nexports.version = version$$1;\nexports.observable = observable;\nexports['default'] = riot$1;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/riot/riot.js\n// module id = 1\n// module chunks = 0","export {\n  select\n} from 'd3-selection'\n\nexport {\n  geoPath,\n  geoMercator\n} from 'd3-geo'\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/lib/d3.js","import * as d3 from '../../scripts/lib/d3.js'\n\nexport default ({\n  selection,\n  feature\n}) => {\n  const [width, height] = [100, 100]\n  const path = d3.geoPath().projection(d3.geoMercator().fitSize([width, height], feature))\n  return selection.append('svg')\n      .attr('preserveAspectRatio', 'xMinYMin meet')\n      .attr('viewBox', '0 0 ' + width + ' ' + height)\n      .attr('class', 'cor-viz-wed__city-map-svg')\n    .append('g')\n      .attr('class', 'cor-viz-wed__city-map-g')\n    .selectAll('path').data([feature]).enter().append('path')\n      .attr('class', 'cor-viz-wed__city-map-path')\n      .attr('d', path)\n      .attr('fill', f => f.color)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/cities/render_city.js","import './map/map.tag'\nimport './cities/cities.tag'\nimport './infobox/infobox.tag'\n\nriot.tag2('wed-app', '<wed-cities config=\"{opts.config.cities}\" data=\"{opts.data}\" breakpoint=\"{breakpoint}\"></wed-cities> <wed-map config=\"{opts.config.map}\" data=\"{opts.data}\" breakpoint=\"{breakpoint}\"></wed-map> <wed-infobox breakpoint=\"{breakpoint}\"></wed-infobox>', '', 'class=\"cor-viz-wed\"', function(opts) {\n\n  this.breakpoint = riot.STATE.breakpoint\n\n  riot.control.on(riot.EVT.breakpointChange, breakpoint => {\n    this.update({breakpoint})\n  })\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/app.tag","import './city.tag'\n\nriot.tag2('wed-cities', '<wed-city each=\"{feature in getFeatures()}\" feature=\"{feature}\" config=\"{parent.opts.config}\" breakpoint=\"{parent.opts.breakpoint}\" active=\"{feature.data.id === parent.active}\"></wed-city>', '', 'class=\"cor-viz-wed__cities-container\"', function(opts) {\n\n  this.active = null\n\n  riot.control.on(riot.EVT.updateSelectedCity, ({data}) => {\n    this.update({active: data.id})\n  })\n\n  riot.control.on(riot.EVT.emptyInfobox, () => {\n    this.update({active: null})\n  })\n\n  this.getFeatures = () => {\n    const compare = (a, b) => b > a ? -1 : 1\n    return this.opts.data.features.filter(f => f.properties.BEZ === 'Kreisfreie Stadt')\n      .sort((a, b) => compare(a.data.name, b.data.name))\n  }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/cities/cities.tag","import * as d3 from '../../scripts/lib/d3.js'\nimport renderCity from './render_city.js'\n\nriot.tag2('wed-city', '<div data-d3=\"city-{data.id}\" class=\"cor-viz-wed__city-map__container\"></div> <h4 class=\"cor-viz-wed__city__name\">{data.name_short}</h4> <span class=\"cor-viz-wed__city__inline-data\">Fälle: <strong>{data.c16}</strong></span> <button class=\"btn cor-viz-wed__city__collapse-btn {cor-viz-wed__city__collapse-btn--active: opts.active}\" disabled=\"{opts.active}\" onclick=\"{selectCity}\">zeige Infos</button>', '', 'onmouseover=\"{selectCity}\" class=\"cor-viz-wed__city-container {cor-viz-wed__city-container--active: opts.active}\"', function(opts) {\n\n  this.data = this.opts.feature.data\n\n  this.on('mount', () => {\n    renderCity({\n      feature: this.opts.feature,\n      selection: d3.select(`[data-d3=\"city-${this.data.id}\"]`)\n    })\n  })\n\n  this.selectCity = () => {\n    riot.control.trigger(riot.EVT.selectCity, this.opts.feature)\n  }\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/cities/city.tag","import * as d3 from '../../scripts/lib/d3.js'\nimport renderSymbol from '../cities/render_city.js'\n\nriot.tag2('wed-infobox', '<div if=\"{feature}\" class=\"cor-viz-wed__infobox\"> <dl> <dt>{feature.data.name}</dt> <dd>{feature.data.bez}</dd> <dt>{feature.data.hz16}</dt> <dd>Fälle pro 100T.&nbsp;Einwohner</dd> </dl> <dl> <dt>{feature.data.c16} / {feature.data.ca16}</dt> <dd>Fälle insgesamt / aufgeklärt*</dd> <dt>{feature.data.q16} %</dt> <dd>Aufklärungsquote*</dd> </dl> <span class=\"cor-viz-wed__infobox__annotation\">* Aufgeklärt heißt, es wurden Tatverdächtige ermittelt. Davon wurden aber nicht alle tatsächlich verurteilt.<br>Daten von 2016.</span> <button class=\"btn cor-viz-wed__infobox__close-btn\" onclick=\"{close}\">x</button> <div data-d3=\"map-symbol\" class=\"cor-viz-wed__infobox__map-symbol\"></div> </div> <div if=\"{!feature && opts.breakpoint !== \\'small\\'}\" class=\"cor-viz-wed__infobox\"> <p class=\"cor-viz-wed__infobox__hint\">Wähle eine Stadt aus der Liste links aus oder fahre mit der Maus (oder klicke mit Deinem Touchpad) über die Karte von NRW, um die Daten zu Wohnungseinbrüchen für eine Stadt oder einen Landkreis zu sehen.</p> </div>', '', 'class=\"cor-viz-wed__infobox-wrapper\"', function(opts) {\n\n  riot.control.on(riot.EVT.updateInfobox, feature => {\n    this.update({feature})\n    this.renderMapSymbol(feature)\n  })\n\n  riot.control.on(riot.EVT.emptyInfobox, () => {\n    this.update({feature: null})\n  })\n\n  this.close = () => {\n    if (this.opts.breakpoint === 'small') {\n      riot.control.trigger(riot.EVT.closeInfobox)\n    }\n  }\n\n  this.renderMapSymbol = feature => {\n    const selection = d3.select('[data-d3=\"map-symbol\"]')\n    selection.selectAll('*').remove()\n    renderSymbol({selection, feature})\n  }\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/infobox/infobox.tag","riot.tag2('wed-legend', '<h4 class=\"cor-viz-wed__legend-title\">Einbrüche pro 100.000 Einwohner</h4> <div class=\"cor-viz-wed__legend-item\" each=\"{step in opts.steps}\"> <span class=\"cor-viz-wed__legend-color\" riot-style=\"background-color:{parent.getColor(step)}\"></span> <span class=\"cor-viz-wed__legend-label\">{step}</span> </div>', '', 'class=\"cor-viz-wed__legend\"', function(opts) {\n\n  this.getColor = step => this.opts.colors[this.opts.steps.indexOf(step)]\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/legend/legend.tag","import '../legend/legend.tag'\nimport renderMap from './render_map.js'\nimport hilight from '../../scripts/hilight.js'\n\nriot.tag2('wed-map', '<div data-d3=\"d3-map\" class=\"cor-viz-wed__map-container\"></div> <wed-legend steps=\"{opts.config.steps}\" colors=\"{opts.config.colors}\"></wed-legend>', '', 'class=\"cor-viz-wed__map-wrapper\"', function(opts) {\n\n  this.on('mount', () => {\n    this.selection = renderMap(this.opts)\n    this.selection.on('mouseover', f => {\n      riot.control.trigger(riot.EVT.mapMouseover, f)\n    })\n  })\n\n  riot.control.on(riot.EVT.mapHilight, d => {\n    this.hilight(this.selection.filter(_d => _d === d))\n  })\n\n  this.hilight = selection => {\n    this.hilighted && this.hilighted.classed('-hilight', false)\n    this.hilighted = selection\n    hilight(selection)\n  }\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/map/map.tag","import * as d3 from '../../scripts/lib/d3.js'\n\nexport default ({\n  data,\n  config\n}) => {\n  const {topoLayerName, width, height} = config\n  const path = d3.geoPath().projection(d3.geoMercator().fitSize([width, height], data))\n  return d3.select('[data-d3=\"d3-map\"]').append('svg')\n      .attr('preserveAspectRatio', 'xMinYMin meet')\n      .attr('viewBox', '0 0 ' + width + ' ' + height)\n      .attr('class', 'cor-viz-wed__map-svg')\n    .append('g')\n      .attr('class', 'cor-viz-wed__map-g')\n    .selectAll('path').data(data.features).enter().append('path')\n      .attr('class', 'cor-viz-wed__map-path')\n      .attr('d', path)\n      .attr('fill', f => f.color)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/map/render_map.js","export default selection => {\n  selection.classed('-hilight', true)\n  const node = selection.node()\n  node.parentNode.appendChild(node)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/hilight.js","'use strict'\n\nif (module.hot) {\n  module.hot.accept()\n}\n\n// import 'babel-polyfill'\nimport '../styles/index.scss'\n\n// riot\nimport './riot-setup.js'\n\n// responsive\nimport './setup_responsiveness.js'\n\n// load & mount app\nimport loadData from './load_data.js'\nconst config = require('json!../config.json')\nconst data = loadData(config.map)\n\nimport '../components/app.tag'\nriot.mount('[data-riot-mount=\"cor-viz-wed__app\"]', 'wed-app', {config, data})\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/index.js","import * as topojson from 'topojson'\n\nconst geoSource = require('json!../data/nrw_landkreise_simplify200.topo.json')  // FIXME config.json\nconst wedData = require('json!../data/wed.json')\n\nexport default ({\n  topoLayerName,\n  colors\n}) => {\n  const data = topojson.feature(geoSource, geoSource.objects[topoLayerName])\n  data.features.map(f => {\n    const n = f.properties.GEN\n    const ix = x => n.indexOf(x) > -1\n    f.data = wedData[f.properties.AGS]\n    f.data.name = n\n    f.data.name_short = ix('Ruhr') ? 'Mülheim' : ix('glad') ? 'M. Gladbach' : n\n    f.data.bez = f.properties.BEZ\n    f.color = colors[+f.data.c]\n    f.data.id = f.properties.AGS\n  })\n  return data\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/load_data.js","// event names\nconst EVT = {\n  selectCity: 'select_city',\n  updateSelectedCity: 'update_selected_city',\n\n  mapMouseover: 'map_mouseover',\n  mapHilight: 'map_hilight',\n\n  updateInfobox: 'update_infobox',\n  closeInfobox: 'close_infobox',\n  emptyInfobox: 'empty_infobox',\n\n  breakpointChange: 'breakpoint_change'\n}\n\n// event bus\nconst C = riot.observable()\n\n// payload: param `data` is always a single geojson feature\n// from the initial geoData\n\n// city select via list (hover or click)\nC.on(EVT.selectCity, data => {\n  C.trigger(EVT.updateInfobox, data)\n  C.trigger(EVT.mapHilight, data)\n  C.trigger(EVT.updateSelectedCity, data)\n})\n\n// close infobox via close-btn\nC.on(EVT.closeInfobox, () => {\n  C.trigger(EVT.emptyInfobox)\n})\n\n// map mouseover (also via click on mobile)\nC.on(EVT.mapMouseover, data => {\n  C.trigger(EVT.updateInfobox, data)\n  C.trigger(EVT.mapHilight, data)\n  C.trigger(EVT.updateSelectedCity, data)\n})\n\n\n// DEBUG\n// C.on('*', (event, data) => {\n//   console.log(event, data)\n// })\n\n// hold some global state\nriot.STATE = {}\n\n// make event bus global\nriot.EVT = EVT\nriot.control = C\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/riot-setup.js","const BP = {  // FIXME this should go into config.json\n  small: 768,\n  medium: 992,\n  large: 1200\n}\n\nconst getBreakpoint = () => {\n  const w = window,\n    d = document,\n    e = d.documentElement,\n    g = d.getElementsByTagName('body')[0],\n    width = w.innerWidth || e.clientWidth || g.clientWidth\n  return Object.keys(BP).find(k => BP[k] > width)\n}\n\nriot.STATE.breakpoint = getBreakpoint()\n\nwindow.addEventListener('resize', () => {\n  const bp = getBreakpoint()\n  if (riot.STATE.breakpoint !== bp) {\n    riot.STATE.breakpoint = bp\n    riot.control.trigger(riot.EVT.breakpointChange, bp)\n  }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/setup_responsiveness.js","// https://d3js.org/d3-array/ Version 1.2.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse = stop < start,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  if (reverse) n = start, start = stop, stop = n;\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar quantile = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-array/build/d3-array.js\n// module id = 16\n// module chunks = 0","// https://d3js.org/d3-geo/ Version 1.6.3. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Array) { 'use strict';\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon = 1e-6;\nvar epsilon2 = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar quarterPi = pi / 4;\nvar tau = pi * 2;\n\nvar degrees = 180 / pi;\nvar radians = pi / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n\nfunction noop() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range$1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0$1 = -(lambda1 = 180);\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range$$1, x) {\n  return range$$1[0] <= range$$1[1] ? range$$1[0] <= x && x <= range$$1[1] : x < range$$1[0] || range$$1[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range$1 = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n};\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nvar circle = function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = d3Array.merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign$$1 * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin(phi), cosPhi0$1 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = d3Array.range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = d3Array.range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return d3Array.range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(d3Array.range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(d3Array.range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(d3Array.range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$1(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = d3Array.merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$1 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate;\nexports.geoLength = length;\nexports.geoPath = index;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$1;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-geo/build/d3-geo.js\n// module id = 17\n// module chunks = 0","// https://d3js.org/d3-selection/ Version 1.0.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : defaultView(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nexports.creator = creator;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-selection/build/d3-selection.js\n// module id = 18\n// module chunks = 0","module.exports = {\n\t\"map\": {\n\t\t\"geoFile\": \"nrw_landkreise_simplify200.topo.json\",\n\t\t\"topoLayerName\": \"nrw_landkreise_simplify200\",\n\t\t\"colors\": [\n\t\t\t\"#f9c280\",\n\t\t\t\"#dfad71\",\n\t\t\t\"#c59962\",\n\t\t\t\"#ab8454\",\n\t\t\t\"#917045\",\n\t\t\t\"#775b36\",\n\t\t\t\"#5e4728\"\n\t\t],\n\t\t\"steps\": [\n\t\t\t179,\n\t\t\t230,\n\t\t\t281,\n\t\t\t332,\n\t\t\t383,\n\t\t\t434,\n\t\t\t485\n\t\t],\n\t\t\"width\": 700,\n\t\t\"height\": 690\n\t},\n\t\"cities\": {\n\t\t\"height\": 100,\n\t\t\"width\": 100\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./src/config.json\n// module id = 20\n// module chunks = 0","module.exports = {\n\t\"type\": \"Topology\",\n\t\"arcs\": [\n\t\t[\n\t\t\t[\n\t\t\t\t2317,\n\t\t\t\t4335\n\t\t\t],\n\t\t\t[\n\t\t\t\t103,\n\t\t\t\t-50\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-92\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-70\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t-37\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2511,\n\t\t\t\t3997\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2529,\n\t\t\t\t3988\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2569,\n\t\t\t\t3969\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2592,\n\t\t\t\t3950\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2674,\n\t\t\t\t3890\n\t\t\t],\n\t\t\t[\n\t\t\t\t101,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2775,\n\t\t\t\t3845\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2799,\n\t\t\t\t3800\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2792,\n\t\t\t\t3758\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2796,\n\t\t\t\t3735\n\t\t\t],\n\t\t\t[\n\t\t\t\t-107,\n\t\t\t\t-68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2689,\n\t\t\t\t3667\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-7\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t-70\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-80\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2600,\n\t\t\t\t3510\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2576,\n\t\t\t\t3455\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2501,\n\t\t\t\t3489\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t105\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2449,\n\t\t\t\t3594\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2409,\n\t\t\t\t3609\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2382,\n\t\t\t\t3583\n\t\t\t],\n\t\t\t[\n\t\t\t\t-137,\n\t\t\t\t-39\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2228,\n\t\t\t\t3607\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2169,\n\t\t\t\t3670\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t-16\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t77\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2040,\n\t\t\t\t3777\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2021,\n\t\t\t\t3779\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-219\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2000,\n\t\t\t\t3490\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1980,\n\t\t\t\t3493\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1948,\n\t\t\t\t3528\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1911,\n\t\t\t\t3535\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1862,\n\t\t\t\t3577\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t66\n\t\t\t],\n\t\t\t[\n\t\t\t\t88,\n\t\t\t\t61\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1890,\n\t\t\t\t3788\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1860,\n\t\t\t\t3817\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1810,\n\t\t\t\t3791\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1805,\n\t\t\t\t3843\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t132\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t16\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1851,\n\t\t\t\t4073\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t48\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1836,\n\t\t\t\t4206\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1904,\n\t\t\t\t4189\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1964,\n\t\t\t\t4274\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t-67\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t31\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2219,\n\t\t\t\t4283\n\t\t\t],\n\t\t\t[\n\t\t\t\t98,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4969,\n\t\t\t\t4438\n\t\t\t],\n\t\t\t[\n\t\t\t\t103,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5072,\n\t\t\t\t4443\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5094,\n\t\t\t\t4416\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-97\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-54\n\t\t\t],\n\t\t\t[\n\t\t\t\t178,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5324,\n\t\t\t\t4282\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5388,\n\t\t\t\t4294\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5421,\n\t\t\t\t4255\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5432,\n\t\t\t\t4263\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5444,\n\t\t\t\t4241\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5464,\n\t\t\t\t4189\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-174\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-77\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-83\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-81\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5540,\n\t\t\t\t3676\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5518,\n\t\t\t\t3624\n\t\t\t],\n\t\t\t[\n\t\t\t\t-166,\n\t\t\t\t-130\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5352,\n\t\t\t\t3494\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5324,\n\t\t\t\t3491\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5326,\n\t\t\t\t3534\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5270,\n\t\t\t\t3533\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5266,\n\t\t\t\t3526\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5241,\n\t\t\t\t3530\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t-70\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t-83,\n\t\t\t\t-117\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t27\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t-19\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4926,\n\t\t\t\t3315\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4858,\n\t\t\t\t3331\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t16\n\t\t\t],\n\t\t\t[\n\t\t\t\t-100,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4717,\n\t\t\t\t3300\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t66\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t99\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t70\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t74\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t44\n\t\t\t],\n\t\t\t[\n\t\t\t\t152,\n\t\t\t\t88\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t123\n\t\t\t],\n\t\t\t[\n\t\t\t\t-92,\n\t\t\t\t33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t56\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t93\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4506,\n\t\t\t\t4037\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4462,\n\t\t\t\t4036\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t117\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4487,\n\t\t\t\t4153\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t94\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4577,\n\t\t\t\t4247\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t52\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t65\n\t\t\t],\n\t\t\t[\n\t\t\t\t166,\n\t\t\t\t90\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4903,\n\t\t\t\t4464\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2259,\n\t\t\t\t1214\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2305,\n\t\t\t\t1208\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2333,\n\t\t\t\t1195\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2352,\n\t\t\t\t1164\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2330,\n\t\t\t\t1095\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2280,\n\t\t\t\t1067\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t-158\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2355,\n\t\t\t\t909\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2302,\n\t\t\t\t917\n\t\t\t],\n\t\t\t[\n\t\t\t\t-93,\n\t\t\t\t-15\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t37\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t-78\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2030,\n\t\t\t\t925\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2049,\n\t\t\t\t945\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t36\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t89\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t142\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2098,\n\t\t\t\t1266\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2171,\n\t\t\t\t1242\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2204,\n\t\t\t\t1274\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2597,\n\t\t\t\t2637\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2606,\n\t\t\t\t2631\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2645,\n\t\t\t\t2655\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2652,\n\t\t\t\t2640\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2671,\n\t\t\t\t2654\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2695,\n\t\t\t\t2630\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2696,\n\t\t\t\t2580\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2714,\n\t\t\t\t2579\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2713,\n\t\t\t\t2600\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2742,\n\t\t\t\t2564\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2742,\n\t\t\t\t2532\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2736,\n\t\t\t\t2481\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2747,\n\t\t\t\t2462\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-67\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t-92\n\t\t\t],\n\t\t\t[\n\t\t\t\t115,\n\t\t\t\t18\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t-112\n\t\t\t],\n\t\t\t[\n\t\t\t\t116,\n\t\t\t\t53\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3248,\n\t\t\t\t2146\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3228,\n\t\t\t\t2135\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-132\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t-59\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t7\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3375,\n\t\t\t\t1771\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t-94\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-95\n\t\t\t],\n\t\t\t[\n\t\t\t\t-104,\n\t\t\t\t-159\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t-20\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3122,\n\t\t\t\t1442\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t-9\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t40\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t128\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t13\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t94\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t107\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2767,\n\t\t\t\t1780\n\t\t\t],\n\t\t\t[\n\t\t\t\t-100,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2667,\n\t\t\t\t1813\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-23\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t76\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2484,\n\t\t\t\t1849\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t42\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t80\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2469,\n\t\t\t\t1971\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t48\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t94\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2502,\n\t\t\t\t2165\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2468,\n\t\t\t\t2175\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t64\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2467,\n\t\t\t\t2265\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t69\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2507,\n\t\t\t\t2374\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2509,\n\t\t\t\t2422\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2526,\n\t\t\t\t2487\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2511,\n\t\t\t\t2480\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2510,\n\t\t\t\t2505\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2513,\n\t\t\t\t2547\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2536,\n\t\t\t\t2617\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2526,\n\t\t\t\t2620\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2524,\n\t\t\t\t2631\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2551,\n\t\t\t\t2647\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5270,\n\t\t\t\t3533\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5324,\n\t\t\t\t3491\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5399,\n\t\t\t\t3441\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5464,\n\t\t\t\t3414\n\t\t\t],\n\t\t\t[\n\t\t\t\t-142,\n\t\t\t\t-72\n\t\t\t],\n\t\t\t[\n\t\t\t\t102,\n\t\t\t\t-157\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-113\n\t\t\t],\n\t\t\t[\n\t\t\t\t-88,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t-46\n\t\t\t],\n\t\t\t[\n\t\t\t\t-88,\n\t\t\t\t40\n\t\t\t],\n\t\t\t[\n\t\t\t\t-126,\n\t\t\t\t-53\n\t\t\t],\n\t\t\t[\n\t\t\t\t-94,\n\t\t\t\t2\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-98\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t-47\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t-135\n\t\t\t],\n\t\t\t[\n\t\t\t\t98,\n\t\t\t\t-89\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t44\n\t\t\t],\n\t\t\t[\n\t\t\t\t156,\n\t\t\t\t34\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t-282\n\t\t\t],\n\t\t\t[\n\t\t\t\t-117,\n\t\t\t\t-130\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-47\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t-63\n\t\t\t],\n\t\t\t[\n\t\t\t\t-190,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4719,\n\t\t\t\t2231\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t92\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4641,\n\t\t\t\t2323\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4608,\n\t\t\t\t2370\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4549,\n\t\t\t\t2326\n\t\t\t],\n\t\t\t[\n\t\t\t\t-85,\n\t\t\t\t-6\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t-82\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4401,\n\t\t\t\t2238\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-34\n\t\t\t],\n\t\t\t[\n\t\t\t\t-109,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4241,\n\t\t\t\t2234\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4171,\n\t\t\t\t2238\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4148,\n\t\t\t\t2290\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4115,\n\t\t\t\t2298\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t63\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t-9\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t88\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t60\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t58\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t49\n\t\t\t],\n\t\t\t[\n\t\t\t\t-106,\n\t\t\t\t52\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3827,\n\t\t\t\t2626\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3798,\n\t\t\t\t2629\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3782,\n\t\t\t\t2654\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-98,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3644,\n\t\t\t\t2634\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3629,\n\t\t\t\t2650\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t95\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t139\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3623,\n\t\t\t\t2884\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3603,\n\t\t\t\t2942\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3584,\n\t\t\t\t2948\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t86\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3556,\n\t\t\t\t3074\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3553,\n\t\t\t\t3112\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3557,\n\t\t\t\t3155\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t119\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3509,\n\t\t\t\t3274\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3526,\n\t\t\t\t3283\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3551,\n\t\t\t\t3346\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3602,\n\t\t\t\t3352\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-57\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t27\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t-81\n\t\t\t],\n\t\t\t[\n\t\t\t\t103,\n\t\t\t\t8\n\t\t\t],\n\t\t\t[\n\t\t\t\t86,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t141,\n\t\t\t\t-115\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t12\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-53\n\t\t\t],\n\t\t\t[\n\t\t\t\t216,\n\t\t\t\t63\n\t\t\t],\n\t\t\t[\n\t\t\t\t122,\n\t\t\t\t101\n\t\t\t],\n\t\t\t[\n\t\t\t\t102,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4858,\n\t\t\t\t3331\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5241,\n\t\t\t\t3530\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3707,\n\t\t\t\t4038\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3800,\n\t\t\t\t4029\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3859,\n\t\t\t\t4012\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t17\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t-108\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4111,\n\t\t\t\t3893\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4146,\n\t\t\t\t3869\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4193,\n\t\t\t\t3862\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4271,\n\t\t\t\t3911\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t125\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4300,\n\t\t\t\t4036\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4331,\n\t\t\t\t4048\n\t\t\t],\n\t\t\t[\n\t\t\t\t99,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4430,\n\t\t\t\t4030\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3602,\n\t\t\t\t3352\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3526,\n\t\t\t\t3283\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3502,\n\t\t\t\t3272\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3484,\n\t\t\t\t3290\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3462,\n\t\t\t\t3332\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3484,\n\t\t\t\t3352\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t58\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t98\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3454,\n\t\t\t\t3508\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t36\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t80\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3444,\n\t\t\t\t3624\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3523,\n\t\t\t\t3669\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t6\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t52\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t71\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t100\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3702,\n\t\t\t\t3954\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3680,\n\t\t\t\t4003\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2881,\n\t\t\t\t3155\n\t\t\t],\n\t\t\t[\n\t\t\t\t140,\n\t\t\t\t-81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3021,\n\t\t\t\t3074\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3018,\n\t\t\t\t3014\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-90\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3030,\n\t\t\t\t2924\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-126\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t-77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2952,\n\t\t\t\t2721\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2896,\n\t\t\t\t2707\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2881,\n\t\t\t\t2728\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2834,\n\t\t\t\t2751\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t106\n\t\t\t],\n\t\t\t[\n\t\t\t\t-141,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2732,\n\t\t\t\t2868\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2728,\n\t\t\t\t2900\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2681,\n\t\t\t\t2888\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2672,\n\t\t\t\t2928\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2660,\n\t\t\t\t2920\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2679,\n\t\t\t\t2969\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2701,\n\t\t\t\t3042\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2752,\n\t\t\t\t3074\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2753,\n\t\t\t\t3084\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2785,\n\t\t\t\t3128\n\t\t\t],\n\t\t\t[\n\t\t\t\t96,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3462,\n\t\t\t\t3332\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3502,\n\t\t\t\t3272\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3557,\n\t\t\t\t3155\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3556,\n\t\t\t\t3074\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-51\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3603,\n\t\t\t\t2942\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3629,\n\t\t\t\t2650\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3652,\n\t\t\t\t2616\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-70\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-92\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t-37\n\t\t\t],\n\t\t\t[\n\t\t\t\t-141,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3429,\n\t\t\t\t2387\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3419,\n\t\t\t\t2356\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-62\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-123\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3439,\n\t\t\t\t2171\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3397,\n\t\t\t\t2154\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3374,\n\t\t\t\t2165\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3310,\n\t\t\t\t2143\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2747,\n\t\t\t\t2462\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2742,\n\t\t\t\t2532\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2783,\n\t\t\t\t2606\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t36\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2888,\n\t\t\t\t2704\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3030,\n\t\t\t\t2924\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t90\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3021,\n\t\t\t\t3074\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3065,\n\t\t\t\t3061\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t61\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3074,\n\t\t\t\t3156\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3067,\n\t\t\t\t3240\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3105,\n\t\t\t\t3257\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3141,\n\t\t\t\t3294\n\t\t\t],\n\t\t\t[\n\t\t\t\t129,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3270,\n\t\t\t\t3312\n\t\t\t],\n\t\t\t[\n\t\t\t\t162,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3432,\n\t\t\t\t3313\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1604,\n\t\t\t\t2941\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1620,\n\t\t\t\t2957\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1638,\n\t\t\t\t2953\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-204\n\t\t\t],\n\t\t\t[\n\t\t\t\t91,\n\t\t\t\t-9\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t-32\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-72\n\t\t\t],\n\t\t\t[\n\t\t\t\t-83,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t-66\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-25\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-98\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-56\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1851,\n\t\t\t\t2333\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1804,\n\t\t\t\t2297\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1728,\n\t\t\t\t2302\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t107\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1713,\n\t\t\t\t2409\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1627,\n\t\t\t\t2356\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t87\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t32\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t194\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1501,\n\t\t\t\t2684\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t44\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t111\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1479,\n\t\t\t\t2907\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1526,\n\t\t\t\t2956\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2538,\n\t\t\t\t3460\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-54\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2589,\n\t\t\t\t3346\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2587,\n\t\t\t\t3265\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2490,\n\t\t\t\t3261\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2478,\n\t\t\t\t3220\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2440,\n\t\t\t\t3166\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2386,\n\t\t\t\t3134\n\t\t\t],\n\t\t\t[\n\t\t\t\t-148,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2238,\n\t\t\t\t3170\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2200,\n\t\t\t\t3203\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2196,\n\t\t\t\t3263\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2184,\n\t\t\t\t3312\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2167,\n\t\t\t\t3340\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2225,\n\t\t\t\t3367\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2251,\n\t\t\t\t3404\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2281,\n\t\t\t\t3407\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2323,\n\t\t\t\t3422\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2349,\n\t\t\t\t3459\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2385,\n\t\t\t\t3445\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2426,\n\t\t\t\t3462\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2436,\n\t\t\t\t3475\n\t\t\t],\n\t\t\t[\n\t\t\t\t102,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2725,\n\t\t\t\t3648\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t12\n\t\t\t],\n\t\t\t[\n\t\t\t\t96,\n\t\t\t\t-41\n\t\t\t],\n\t\t\t[\n\t\t\t\t110,\n\t\t\t\t19\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-92\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3087,\n\t\t\t\t3546\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3102,\n\t\t\t\t3528\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-66\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t-41\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-87\n\t\t\t],\n\t\t\t[\n\t\t\t\t-110,\n\t\t\t\t-38\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t-141\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2881,\n\t\t\t\t3155\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2805,\n\t\t\t\t3149\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2811,\n\t\t\t\t3196\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2731,\n\t\t\t\t3198\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t120\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2608,\n\t\t\t\t3347\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2538,\n\t\t\t\t3460\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2576,\n\t\t\t\t3455\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2689,\n\t\t\t\t3667\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2721,\n\t\t\t\t3685\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2734,\n\t\t\t\t3670\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t970,\n\t\t\t\t4327\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1028,\n\t\t\t\t4283\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1082,\n\t\t\t\t4305\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t-61\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t-22\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-162\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1029,\n\t\t\t\t3984\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t41\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t106\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t949,\n\t\t\t\t4131\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-31\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t-113\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-52\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-116\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t-68\n\t\t\t],\n\t\t\t[\n\t\t\t\t131,\n\t\t\t\t-96\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-67\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t-15\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t21\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-87\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-53\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-114\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1110,\n\t\t\t\t3301\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1137,\n\t\t\t\t3220\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1115,\n\t\t\t\t3159\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t-39\n\t\t\t],\n\t\t\t[\n\t\t\t\t-112,\n\t\t\t\t21\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-55\n\t\t\t],\n\t\t\t[\n\t\t\t\t-96,\n\t\t\t\t-49\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-46\n\t\t\t],\n\t\t\t[\n\t\t\t\t-102,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t669,\n\t\t\t\t2992\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t612,\n\t\t\t\t3000\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t101\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t203\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t130\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t73\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t82\n\t\t\t],\n\t\t\t[\n\t\t\t\t-116,\n\t\t\t\t115\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t147\n\t\t\t],\n\t\t\t[\n\t\t\t\t-143,\n\t\t\t\t49\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t105\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t86\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t30\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t52\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t90\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t77\n\t\t\t],\n\t\t\t[\n\t\t\t\t86,\n\t\t\t\t21\n\t\t\t],\n\t\t\t[\n\t\t\t\t109,\n\t\t\t\t63\n\t\t\t],\n\t\t\t[\n\t\t\t\t197,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t168\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t-40\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-65\n\t\t\t],\n\t\t\t[\n\t\t\t\t160,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-55\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t124,\n\t\t\t\t-84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1138,\n\t\t\t\t3097\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-148\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-37\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-71\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1079,\n\t\t\t\t2819\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1097,\n\t\t\t\t2796\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1160,\n\t\t\t\t2782\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t-8\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1269,\n\t\t\t\t2698\n\t\t\t],\n\t\t\t[\n\t\t\t\t-116,\n\t\t\t\t-115\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1153,\n\t\t\t\t2583\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1130,\n\t\t\t\t2599\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1102,\n\t\t\t\t2620\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1025,\n\t\t\t\t2658\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t-84\n\t\t\t],\n\t\t\t[\n\t\t\t\t-149,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-125\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t730,\n\t\t\t\t2446\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t688,\n\t\t\t\t2460\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t658,\n\t\t\t\t2488\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t-69\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t524,\n\t\t\t\t2472\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t29\n\t\t\t],\n\t\t\t[\n\t\t\t\t-115,\n\t\t\t\t-71\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t38\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t174\n\t\t\t],\n\t\t\t[\n\t\t\t\t91,\n\t\t\t\t94\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t170\n\t\t\t],\n\t\t\t[\n\t\t\t\t99,\n\t\t\t\t94\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t612,\n\t\t\t\t3000\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1115,\n\t\t\t\t3159\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6016,\n\t\t\t\t4437\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t30\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5908,\n\t\t\t\t4427\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5875,\n\t\t\t\t4439\n\t\t\t],\n\t\t\t[\n\t\t\t\t-134,\n\t\t\t\t70\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5757,\n\t\t\t\t4588\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5696,\n\t\t\t\t4543\n\t\t\t],\n\t\t\t[\n\t\t\t\t-106,\n\t\t\t\t-60\n\t\t\t],\n\t\t\t[\n\t\t\t\t-111,\n\t\t\t\t-103\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5433,\n\t\t\t\t4378\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-137\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5432,\n\t\t\t\t4263\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5388,\n\t\t\t\t4294\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5094,\n\t\t\t\t4416\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t124\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5021,\n\t\t\t\t4540\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t75\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4875,\n\t\t\t\t4625\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4855,\n\t\t\t\t4672\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t118\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4905,\n\t\t\t\t4790\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t103\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4883,\n\t\t\t\t4930\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4922,\n\t\t\t\t5013\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4931,\n\t\t\t\t5092\n\t\t\t],\n\t\t\t[\n\t\t\t\t138,\n\t\t\t\t117\n\t\t\t],\n\t\t\t[\n\t\t\t\t112,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5262,\n\t\t\t\t5153\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5325,\n\t\t\t\t5183\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5341,\n\t\t\t\t5230\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t112\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5347,\n\t\t\t\t5342\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t55\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5485,\n\t\t\t\t5409\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5491,\n\t\t\t\t5425\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-67\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-115\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t46\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-37\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t-45\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-41\n\t\t\t],\n\t\t\t[\n\t\t\t\t102,\n\t\t\t\t-104\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-29\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-75\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-67\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-92\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t-19\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t10\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-45\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-86\n\t\t\t],\n\t\t\t[\n\t\t\t\t121,\n\t\t\t\t-71\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-152\n\t\t\t],\n\t\t\t[\n\t\t\t\t-93,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1130,\n\t\t\t\t2599\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1138,\n\t\t\t\t2593\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-99\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-30\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-112\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1086,\n\t\t\t\t2372\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1050,\n\t\t\t\t2325\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1040,\n\t\t\t\t2314\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1047,\n\t\t\t\t2260\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1003,\n\t\t\t\t2260\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t-75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t958,\n\t\t\t\t2185\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t37\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t71\n\t\t\t],\n\t\t\t[\n\t\t\t\t-96,\n\t\t\t\t140\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t735,\n\t\t\t\t2423\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1025,\n\t\t\t\t2658\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5875,\n\t\t\t\t4439\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t6016,\n\t\t\t\t4437\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-20\n\t\t\t],\n\t\t\t[\n\t\t\t\t108,\n\t\t\t\t44\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t-27\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t-77\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-55\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-46\n\t\t\t],\n\t\t\t[\n\t\t\t\t-113,\n\t\t\t\t-108\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-42\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t-122\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-105\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-58\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-59\n\t\t\t],\n\t\t\t[\n\t\t\t\t-85,\n\t\t\t\t-12\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-101\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-98\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-100\n\t\t\t],\n\t\t\t[\n\t\t\t\t-120,\n\t\t\t\t-45\n\t\t\t],\n\t\t\t[\n\t\t\t\t-98,\n\t\t\t\t-90\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t-65\n\t\t\t],\n\t\t\t[\n\t\t\t\t-105,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t64\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t86\n\t\t\t],\n\t\t\t[\n\t\t\t\t-121,\n\t\t\t\t50\n\t\t\t],\n\t\t\t[\n\t\t\t\t-94,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5399,\n\t\t\t\t3441\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5518,\n\t\t\t\t3624\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5464,\n\t\t\t\t4189\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t137\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5696,\n\t\t\t\t4543\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4719,\n\t\t\t\t2231\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t-70\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-81\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-107\n\t\t\t],\n\t\t\t[\n\t\t\t\t-126,\n\t\t\t\t-137\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-142\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t-81\n\t\t\t],\n\t\t\t[\n\t\t\t\t-113,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t53\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t-83\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-62\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t-47\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t-151\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-118\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t24\n\t\t\t],\n\t\t\t[\n\t\t\t\t-103,\n\t\t\t\t-20\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t84\n\t\t\t],\n\t\t\t[\n\t\t\t\t-127,\n\t\t\t\t141\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t174\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t31\n\t\t\t],\n\t\t\t[\n\t\t\t\t-108,\n\t\t\t\t12\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t78\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t22\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t127\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3487,\n\t\t\t\t1716\n\t\t\t],\n\t\t\t[\n\t\t\t\t106,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t125\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3631,\n\t\t\t\t1907\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t111\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3696,\n\t\t\t\t2018\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t11\n\t\t\t],\n\t\t\t[\n\t\t\t\t116,\n\t\t\t\t-73\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t45\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t3\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-31\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4092,\n\t\t\t\t1998\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4142,\n\t\t\t\t2017\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4145,\n\t\t\t\t2059\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4184,\n\t\t\t\t2127\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t98\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4152,\n\t\t\t\t2225\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4401,\n\t\t\t\t2238\n\t\t\t],\n\t\t\t[\n\t\t\t\t103,\n\t\t\t\t108\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4608,\n\t\t\t\t2370\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3460,\n\t\t\t\t4067\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t-5\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3555,\n\t\t\t\t3987\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3642,\n\t\t\t\t3990\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3523,\n\t\t\t\t3669\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t-46\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3422,\n\t\t\t\t3656\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t92\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-13\n\t\t\t],\n\t\t\t[\n\t\t\t\t-100,\n\t\t\t\t23\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t-31\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t142\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3217,\n\t\t\t\t3888\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3245,\n\t\t\t\t3893\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3245,\n\t\t\t\t3935\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3229,\n\t\t\t\t4012\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3245,\n\t\t\t\t4037\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3282,\n\t\t\t\t4068\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3282,\n\t\t\t\t4088\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-40\n\t\t\t],\n\t\t\t[\n\t\t\t\t99,\n\t\t\t\t62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3441,\n\t\t\t\t4110\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1220,\n\t\t\t\t4241\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t37\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1333,\n\t\t\t\t4269\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1378,\n\t\t\t\t4240\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1397,\n\t\t\t\t4204\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1467,\n\t\t\t\t4189\n\t\t\t],\n\t\t\t[\n\t\t\t\t108,\n\t\t\t\t-17\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-58\n\t\t\t],\n\t\t\t[\n\t\t\t\t121,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1702,\n\t\t\t\t4085\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1732,\n\t\t\t\t4063\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1825,\n\t\t\t\t4114\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1805,\n\t\t\t\t3843\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1810,\n\t\t\t\t3791\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1749,\n\t\t\t\t3778\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1746,\n\t\t\t\t3677\n\t\t\t],\n\t\t\t[\n\t\t\t\t-92,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1654,\n\t\t\t\t3611\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1668,\n\t\t\t\t3586\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1606,\n\t\t\t\t3542\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1597,\n\t\t\t\t3524\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1601,\n\t\t\t\t3492\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t10\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1465,\n\t\t\t\t3543\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1429,\n\t\t\t\t3570\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1452,\n\t\t\t\t3466\n\t\t\t],\n\t\t\t[\n\t\t\t\t-107,\n\t\t\t\t-95\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t-30\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1400,\n\t\t\t\t3276\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1405,\n\t\t\t\t3226\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-94\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1347,\n\t\t\t\t3098\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1339,\n\t\t\t\t3082\n\t\t\t],\n\t\t\t[\n\t\t\t\t-136,\n\t\t\t\t-9\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1164,\n\t\t\t\t3111\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t109\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1137,\n\t\t\t\t3220\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t949,\n\t\t\t\t4131\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-114\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1082,\n\t\t\t\t4305\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1119,\n\t\t\t\t4311\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1129,\n\t\t\t\t4320\n\t\t\t],\n\t\t\t[\n\t\t\t\t91,\n\t\t\t\t-79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2278,\n\t\t\t\t2848\n\t\t\t],\n\t\t\t[\n\t\t\t\t-108,\n\t\t\t\t-32\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t-123\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2038,\n\t\t\t\t2657\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2009,\n\t\t\t\t2648\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2074,\n\t\t\t\t2612\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2065,\n\t\t\t\t2539\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-55\n\t\t\t],\n\t\t\t[\n\t\t\t\t-112,\n\t\t\t\t-64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1922,\n\t\t\t\t2420\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1896,\n\t\t\t\t2363\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1975,\n\t\t\t\t2355\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1982,\n\t\t\t\t2269\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-117\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1964,\n\t\t\t\t2152\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1913,\n\t\t\t\t2144\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1875,\n\t\t\t\t2144\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1802,\n\t\t\t\t2123\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t24\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t121\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1804,\n\t\t\t\t2297\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1638,\n\t\t\t\t2953\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1661,\n\t\t\t\t2964\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1684,\n\t\t\t\t2960\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1717,\n\t\t\t\t2987\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1792,\n\t\t\t\t3018\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1848,\n\t\t\t\t2976\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t-27\n\t\t\t],\n\t\t\t[\n\t\t\t\t100,\n\t\t\t\t52\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-6\n\t\t\t],\n\t\t\t[\n\t\t\t\t109,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2188,\n\t\t\t\t3031\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2199,\n\t\t\t\t3038\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t-38\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-90\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1748,\n\t\t\t\t1236\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1798,\n\t\t\t\t1192\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-94\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1793,\n\t\t\t\t1098\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1725,\n\t\t\t\t1033\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-5\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-101\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-50\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t-27\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1828,\n\t\t\t\t776\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1790,\n\t\t\t\t727\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1867,\n\t\t\t\t679\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1855,\n\t\t\t\t643\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-67\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-96\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-99\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t-46\n\t\t\t],\n\t\t\t[\n\t\t\t\t-83,\n\t\t\t\t56\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t55\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t-20\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-98\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-43\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t-45\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-82\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-52\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t-61\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t86\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-70\n\t\t\t],\n\t\t\t[\n\t\t\t\t-83,\n\t\t\t\t117\n\t\t\t],\n\t\t\t[\n\t\t\t\t-106,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t-19\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-62\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t60\n\t\t\t],\n\t\t\t[\n\t\t\t\t-134,\n\t\t\t\t73\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-131\n\t\t\t],\n\t\t\t[\n\t\t\t\t-116,\n\t\t\t\t119\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t85\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t89\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t66\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t63\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t773,\n\t\t\t\t463\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t39\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t68\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t83\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t64\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t906,\n\t\t\t\t753\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t956,\n\t\t\t\t772\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t961,\n\t\t\t\t822\n\t\t\t],\n\t\t\t[\n\t\t\t\t122,\n\t\t\t\t-56\n\t\t\t],\n\t\t\t[\n\t\t\t\t104,\n\t\t\t\t8\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t108\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t47\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t49\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1250,\n\t\t\t\t1055\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1258,\n\t\t\t\t1082\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t68\n\t\t\t],\n\t\t\t[\n\t\t\t\t86,\n\t\t\t\t-51\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t102\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1452,\n\t\t\t\t1201\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1441,\n\t\t\t\t1214\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t-21\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t-82\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t122\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1731,\n\t\t\t\t1317\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1339,\n\t\t\t\t3082\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1341,\n\t\t\t\t3061\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1353,\n\t\t\t\t3064\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1376,\n\t\t\t\t3048\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1408,\n\t\t\t\t3014\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-62\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1463,\n\t\t\t\t2917\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1410,\n\t\t\t\t2871\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1315,\n\t\t\t\t2835\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1314,\n\t\t\t\t2784\n\t\t\t],\n\t\t\t[\n\t\t\t\t-154,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1097,\n\t\t\t\t2796\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1138,\n\t\t\t\t3097\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t573,\n\t\t\t\t1769\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-67\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-54\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t-117\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t65\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t-197\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-67\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-66\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-72\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t-175\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t718,\n\t\t\t\t991\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t745,\n\t\t\t\t956\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t-43\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t7\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-36\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t914,\n\t\t\t\t816\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t933,\n\t\t\t\t781\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t956,\n\t\t\t\t772\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t773,\n\t\t\t\t463\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t22\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t-30\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t108\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t102\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t61\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t121\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t42\n\t\t\t],\n\t\t\t[\n\t\t\t\t-138,\n\t\t\t\t-5\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t46\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t43\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t148\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t29\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t125\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t80\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t38\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t94\n\t\t\t],\n\t\t\t[\n\t\t\t\t97,\n\t\t\t\t1\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t75\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t111\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t412,\n\t\t\t\t1673\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t-37\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t112\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t546,\n\t\t\t\t1770\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t559,\n\t\t\t\t1787\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t636,\n\t\t\t\t699\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t-121\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t62\n\t\t\t],\n\t\t\t[\n\t\t\t\t112,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1627,\n\t\t\t\t2356\n\t\t\t],\n\t\t\t[\n\t\t\t\t86,\n\t\t\t\t53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1713,\n\t\t\t\t2409\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-107\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1728,\n\t\t\t\t2302\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-79\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1724,\n\t\t\t\t2179\n\t\t\t],\n\t\t\t[\n\t\t\t\t-93,\n\t\t\t\t-72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1631,\n\t\t\t\t2107\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1607,\n\t\t\t\t2134\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1582,\n\t\t\t\t2121\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1546,\n\t\t\t\t2126\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t-149\n\t\t\t],\n\t\t\t[\n\t\t\t\t-127,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t-114,\n\t\t\t\t-11\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t59\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t51\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t8\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1084,\n\t\t\t\t2072\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1064,\n\t\t\t\t2033\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1059,\n\t\t\t\t2097\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1028,\n\t\t\t\t2113\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1015,\n\t\t\t\t2108\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1012,\n\t\t\t\t2197\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1047,\n\t\t\t\t2260\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1050,\n\t\t\t\t2325\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1138,\n\t\t\t\t2593\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1269,\n\t\t\t\t2698\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t73\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1315,\n\t\t\t\t2835\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1410,\n\t\t\t\t2871\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1463,\n\t\t\t\t2917\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-39\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-58\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t-88\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2818,\n\t\t\t\t4082\n\t\t\t],\n\t\t\t[\n\t\t\t\t122,\n\t\t\t\t-148\n\t\t\t],\n\t\t\t[\n\t\t\t\t127,\n\t\t\t\t79\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3117,\n\t\t\t\t4018\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3144,\n\t\t\t\t4001\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3213,\n\t\t\t\t4017\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3245,\n\t\t\t\t3935\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3245,\n\t\t\t\t3893\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3422,\n\t\t\t\t3656\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3444,\n\t\t\t\t3624\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3484,\n\t\t\t\t3352\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3270,\n\t\t\t\t3312\n\t\t\t],\n\t\t\t[\n\t\t\t\t-129,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3105,\n\t\t\t\t3257\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3074,\n\t\t\t\t3156\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3102,\n\t\t\t\t3528\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2725,\n\t\t\t\t3648\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2721,\n\t\t\t\t3685\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2792,\n\t\t\t\t3758\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2775,\n\t\t\t\t3845\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2709,\n\t\t\t\t3894\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2759,\n\t\t\t\t3905\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t44\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2727,\n\t\t\t\t4007\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2775,\n\t\t\t\t4052\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2146,\n\t\t\t\t2577\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2177,\n\t\t\t\t2488\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2197,\n\t\t\t\t2449\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2222,\n\t\t\t\t2390\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2220,\n\t\t\t\t2370\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2263,\n\t\t\t\t2388\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2276,\n\t\t\t\t2383\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2290,\n\t\t\t\t2306\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2237,\n\t\t\t\t2281\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t53\n\t\t\t],\n\t\t\t[\n\t\t\t\t-92,\n\t\t\t\t-38\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1989,\n\t\t\t\t2292\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1896,\n\t\t\t\t2363\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2065,\n\t\t\t\t2539\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2445,\n\t\t\t\t2362\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2468,\n\t\t\t\t2175\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2469,\n\t\t\t\t1971\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-77\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2667,\n\t\t\t\t1813\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2678,\n\t\t\t\t1784\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2680,\n\t\t\t\t1768\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2624,\n\t\t\t\t1742\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2617,\n\t\t\t\t1707\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2555,\n\t\t\t\t1690\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2468,\n\t\t\t\t1673\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t50\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-81\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t-76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2310,\n\t\t\t\t1566\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2252,\n\t\t\t\t1567\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t24\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t184\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-13\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t48\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t67\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t39\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2092,\n\t\t\t\t1972\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2121,\n\t\t\t\t2012\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t105\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2114,\n\t\t\t\t2217\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t-2\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-43\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1966,\n\t\t\t\t2201\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1982,\n\t\t\t\t2269\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2237,\n\t\t\t\t2281\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2276,\n\t\t\t\t2383\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2309,\n\t\t\t\t2389\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2371,\n\t\t\t\t2403\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4115,\n\t\t\t\t2298\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4171,\n\t\t\t\t2238\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4184,\n\t\t\t\t2127\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4142,\n\t\t\t\t2017\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3696,\n\t\t\t\t2018\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-108\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3487,\n\t\t\t\t1716\n\t\t\t],\n\t\t\t[\n\t\t\t\t-112,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3228,\n\t\t\t\t2135\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3374,\n\t\t\t\t2165\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3397,\n\t\t\t\t2154\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3419,\n\t\t\t\t2356\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3652,\n\t\t\t\t2616\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3782,\n\t\t\t\t2654\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3798,\n\t\t\t\t2629\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3099,\n\t\t\t\t4987\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t4\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3193,\n\t\t\t\t4953\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3256,\n\t\t\t\t4950\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-103\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-50\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-117\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3336,\n\t\t\t\t4669\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3339,\n\t\t\t\t4622\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-65\n\t\t\t],\n\t\t\t[\n\t\t\t\t-96,\n\t\t\t\t30\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-57\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3074,\n\t\t\t\t4438\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3044,\n\t\t\t\t4399\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t34\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2948,\n\t\t\t\t4509\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2928,\n\t\t\t\t4567\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-23\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t124\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2884,\n\t\t\t\t4668\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2829,\n\t\t\t\t4690\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t34\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t68\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2888,\n\t\t\t\t4855\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2900,\n\t\t\t\t4857\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t94\n\t\t\t],\n\t\t\t[\n\t\t\t\t118,\n\t\t\t\t81\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3072,\n\t\t\t\t5015\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3394,\n\t\t\t\t5159\n\t\t\t],\n\t\t\t[\n\t\t\t\t117,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3511,\n\t\t\t\t5110\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-93\n\t\t\t],\n\t\t\t[\n\t\t\t\t114,\n\t\t\t\t-47\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t41\n\t\t\t],\n\t\t\t[\n\t\t\t\t129,\n\t\t\t\t54\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-31\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-136\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3883,\n\t\t\t\t4888\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t-59\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-102\n\t\t\t],\n\t\t\t[\n\t\t\t\t107,\n\t\t\t\t-106\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-75\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-127\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-19\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-86\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t-57\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4315,\n\t\t\t\t4054\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4271,\n\t\t\t\t3911\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4146,\n\t\t\t\t3869\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3859,\n\t\t\t\t4012\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3707,\n\t\t\t\t4038\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3680,\n\t\t\t\t4003\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3642,\n\t\t\t\t3990\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3460,\n\t\t\t\t4067\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3282,\n\t\t\t\t4088\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3269,\n\t\t\t\t4128\n\t\t\t],\n\t\t\t[\n\t\t\t\t-121,\n\t\t\t\t218\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3098,\n\t\t\t\t4367\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3339,\n\t\t\t\t4622\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3256,\n\t\t\t\t4950\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3266,\n\t\t\t\t5005\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3276,\n\t\t\t\t5072\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3310,\n\t\t\t\t5140\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1939,\n\t\t\t\t1965\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t36\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2102,\n\t\t\t\t1988\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2252,\n\t\t\t\t1567\n\t\t\t],\n\t\t\t[\n\t\t\t\t-109,\n\t\t\t\t-121\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2093,\n\t\t\t\t1435\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t60\n\t\t\t],\n\t\t\t[\n\t\t\t\t-94,\n\t\t\t\t-41\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1954,\n\t\t\t\t1478\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1949,\n\t\t\t\t1468\n\t\t\t],\n\t\t\t[\n\t\t\t\t-88,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t55\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t104\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t52\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-16\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t69\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t61\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t117\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t139\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t2\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1583,\n\t\t\t\t2103\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1607,\n\t\t\t\t2134\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1724,\n\t\t\t\t2179\n\t\t\t],\n\t\t\t[\n\t\t\t\t200,\n\t\t\t\t-157\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1546,\n\t\t\t\t2126\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1949,\n\t\t\t\t1468\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2005,\n\t\t\t\t1417\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2036,\n\t\t\t\t1351\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t-7\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t-88,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1777,\n\t\t\t\t1337\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1742,\n\t\t\t\t1305\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1441,\n\t\t\t\t1214\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1414,\n\t\t\t\t1273\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t40\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t138\n\t\t\t],\n\t\t\t[\n\t\t\t\t-169,\n\t\t\t\t-15\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t53\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1217,\n\t\t\t\t1504\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1189,\n\t\t\t\t1497\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t80\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t52\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t65\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t93\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t62\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t96\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1046,\n\t\t\t\t2013\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2153,\n\t\t\t\t5438\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t-97\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-81\n\t\t\t],\n\t\t\t[\n\t\t\t\t117,\n\t\t\t\t-65\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t10\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-83\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-96\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2455,\n\t\t\t\t5026\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2416,\n\t\t\t\t4982\n\t\t\t],\n\t\t\t[\n\t\t\t\t-98,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2318,\n\t\t\t\t4996\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t-98,\n\t\t\t\t-103\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2183,\n\t\t\t\t4889\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2104,\n\t\t\t\t4890\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2084,\n\t\t\t\t4890\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2119,\n\t\t\t\t4806\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-26\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-142\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-109\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2119,\n\t\t\t\t4480\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-56\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2203,\n\t\t\t\t4364\n\t\t\t],\n\t\t\t[\n\t\t\t\t83,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1964,\n\t\t\t\t4274\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t-85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1836,\n\t\t\t\t4206\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-92\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1732,\n\t\t\t\t4063\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1467,\n\t\t\t\t4189\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1378,\n\t\t\t\t4240\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1220,\n\t\t\t\t4241\n\t\t\t],\n\t\t\t[\n\t\t\t\t-91,\n\t\t\t\t79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1119,\n\t\t\t\t4311\n\t\t\t],\n\t\t\t[\n\t\t\t\t-91,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t970,\n\t\t\t\t4327\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t125\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t35\n\t\t\t],\n\t\t\t[\n\t\t\t\t106,\n\t\t\t\t-25\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t128,\n\t\t\t\t90\n\t\t\t],\n\t\t\t[\n\t\t\t\t158,\n\t\t\t\t48\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t43\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t-58\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t59\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t55\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t69\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t16\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t86\n\t\t\t],\n\t\t\t[\n\t\t\t\t-198,\n\t\t\t\t135\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t88\n\t\t\t],\n\t\t\t[\n\t\t\t\t100,\n\t\t\t\t46\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t97\n\t\t\t],\n\t\t\t[\n\t\t\t\t168,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t104\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t56\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t17\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t129\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t1\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t46\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t3\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-126\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2504,\n\t\t\t\t5018\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-30\n\t\t\t],\n\t\t\t[\n\t\t\t\t213,\n\t\t\t\t-29\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2738,\n\t\t\t\t4883\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2784,\n\t\t\t\t4875\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2822,\n\t\t\t\t4841\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2829,\n\t\t\t\t4690\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2928,\n\t\t\t\t4567\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3044,\n\t\t\t\t4399\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3269,\n\t\t\t\t4128\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3245,\n\t\t\t\t4037\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3144,\n\t\t\t\t4001\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2818,\n\t\t\t\t4082\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2727,\n\t\t\t\t4007\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-48\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2709,\n\t\t\t\t3894\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2592,\n\t\t\t\t3950\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2529,\n\t\t\t\t3988\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2317,\n\t\t\t\t4335\n\t\t\t],\n\t\t\t[\n\t\t\t\t-114,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2203,\n\t\t\t\t4364\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t69\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2119,\n\t\t\t\t4806\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2104,\n\t\t\t\t4890\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2318,\n\t\t\t\t4996\n\t\t\t],\n\t\t\t[\n\t\t\t\t98,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2455,\n\t\t\t\t5026\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2464,\n\t\t\t\t5022\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3394,\n\t\t\t\t5159\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3276,\n\t\t\t\t5072\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3266,\n\t\t\t\t5005\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3099,\n\t\t\t\t4987\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2900,\n\t\t\t\t4857\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2784,\n\t\t\t\t4875\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2504,\n\t\t\t\t5018\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2153,\n\t\t\t\t5438\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t118\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t63\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t14\n\t\t\t],\n\t\t\t[\n\t\t\t\t262,\n\t\t\t\t-6\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t48\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t23\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t62\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t14\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t56\n\t\t\t],\n\t\t\t[\n\t\t\t\t163,\n\t\t\t\t107\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t25\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t124\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t33\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t125\n\t\t\t],\n\t\t\t[\n\t\t\t\t150,\n\t\t\t\t-62\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-154\n\t\t\t],\n\t\t\t[\n\t\t\t\t164,\n\t\t\t\t-87\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t-7\n\t\t\t],\n\t\t\t[\n\t\t\t\t86,\n\t\t\t\t34\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t-46\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-87\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t-92\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-211\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-53\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-38\n\t\t\t],\n\t\t\t[\n\t\t\t\t120,\n\t\t\t\t-50\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-130\n\t\t\t],\n\t\t\t[\n\t\t\t\t-252,\n\t\t\t\t-83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2169,\n\t\t\t\t3670\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2228,\n\t\t\t\t3607\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2201,\n\t\t\t\t3531\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-111\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2226,\n\t\t\t\t3420\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2167,\n\t\t\t\t3340\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2108,\n\t\t\t\t3351\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2072,\n\t\t\t\t3427\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2021,\n\t\t\t\t3779\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2501,\n\t\t\t\t3489\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2426,\n\t\t\t\t3462\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2349,\n\t\t\t\t3459\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2323,\n\t\t\t\t3422\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2251,\n\t\t\t\t3404\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2201,\n\t\t\t\t3531\n\t\t\t],\n\t\t\t[\n\t\t\t\t181,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2409,\n\t\t\t\t3609\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2121,\n\t\t\t\t2012\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1939,\n\t\t\t\t1965\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t63\n\t\t\t],\n\t\t\t[\n\t\t\t\t-117,\n\t\t\t\t95\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1802,\n\t\t\t\t2123\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1913,\n\t\t\t\t2144\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1964,\n\t\t\t\t2152\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1966,\n\t\t\t\t2201\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-29\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t42\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3122,\n\t\t\t\t1442\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-108\n\t\t\t],\n\t\t\t[\n\t\t\t\t-110,\n\t\t\t\t-21\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-82\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t25\n\t\t\t],\n\t\t\t[\n\t\t\t\t-128,\n\t\t\t\t-82\n\t\t\t],\n\t\t\t[\n\t\t\t\t-100,\n\t\t\t\t-25\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t25\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-201\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-136,\n\t\t\t\t-40\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t10\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2280,\n\t\t\t\t1067\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2352,\n\t\t\t\t1164\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2333,\n\t\t\t\t1195\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2259,\n\t\t\t\t1214\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2204,\n\t\t\t\t1274\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2171,\n\t\t\t\t1242\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2049,\n\t\t\t\t945\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2302,\n\t\t\t\t917\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-83\n\t\t\t],\n\t\t\t[\n\t\t\t\t-132,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t54\n\t\t\t],\n\t\t\t[\n\t\t\t\t-90,\n\t\t\t\t-115\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-27\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1855,\n\t\t\t\t643\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1790,\n\t\t\t\t727\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1725,\n\t\t\t\t1033\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1798,\n\t\t\t\t1192\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1748,\n\t\t\t\t1236\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1742,\n\t\t\t\t1305\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2036,\n\t\t\t\t1351\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2005,\n\t\t\t\t1417\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2093,\n\t\t\t\t1435\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t180,\n\t\t\t\t126\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2468,\n\t\t\t\t1673\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2555,\n\t\t\t\t1690\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2624,\n\t\t\t\t1742\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2678,\n\t\t\t\t1784\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2440,\n\t\t\t\t2848\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-73\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t-122\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2507,\n\t\t\t\t2653\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2536,\n\t\t\t\t2617\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2513,\n\t\t\t\t2547\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2494,\n\t\t\t\t2547\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2452,\n\t\t\t\t2544\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2438,\n\t\t\t\t2574\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2416,\n\t\t\t\t2591\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2395,\n\t\t\t\t2592\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2342,\n\t\t\t\t2553\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2325,\n\t\t\t\t2565\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2275,\n\t\t\t\t2550\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t-60\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2253,\n\t\t\t\t2443\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2177,\n\t\t\t\t2488\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2065,\n\t\t\t\t2539\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2009,\n\t\t\t\t2648\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2278,\n\t\t\t\t2848\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2302,\n\t\t\t\t2808\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2379,\n\t\t\t\t2836\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4736,\n\t\t\t\t5171\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4751,\n\t\t\t\t5148\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-71\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4864,\n\t\t\t\t5033\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4883,\n\t\t\t\t4930\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-105\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4855,\n\t\t\t\t4672\n\t\t\t],\n\t\t\t[\n\t\t\t\t-119,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4736,\n\t\t\t\t4620\n\t\t\t],\n\t\t\t[\n\t\t\t\t-93,\n\t\t\t\t-13\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t87\n\t\t\t],\n\t\t\t[\n\t\t\t\t-105,\n\t\t\t\t1\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t44\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4428,\n\t\t\t\t4760\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4467,\n\t\t\t\t4767\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t14\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t130\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t73\n\t\t\t],\n\t\t\t[\n\t\t\t\t92,\n\t\t\t\t137\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4584,\n\t\t\t\t5121\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4601,\n\t\t\t\t5159\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4635,\n\t\t\t\t5170\n\t\t\t],\n\t\t\t[\n\t\t\t\t101,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2438,\n\t\t\t\t2574\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2494,\n\t\t\t\t2547\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2510,\n\t\t\t\t2505\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2526,\n\t\t\t\t2487\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2507,\n\t\t\t\t2374\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2445,\n\t\t\t\t2362\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2309,\n\t\t\t\t2389\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2263,\n\t\t\t\t2388\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2222,\n\t\t\t\t2390\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2275,\n\t\t\t\t2550\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2342,\n\t\t\t\t2553\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2395,\n\t\t\t\t2592\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t688,\n\t\t\t\t2460\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t958,\n\t\t\t\t2185\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1012,\n\t\t\t\t2197\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1028,\n\t\t\t\t2113\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1059,\n\t\t\t\t2097\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1018,\n\t\t\t\t2069\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-103,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t855,\n\t\t\t\t1982\n\t\t\t],\n\t\t\t[\n\t\t\t\t-110,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t745,\n\t\t\t\t1980\n\t\t\t],\n\t\t\t[\n\t\t\t\t-185,\n\t\t\t\t-142\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t573,\n\t\t\t\t1796\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t412,\n\t\t\t\t1673\n\t\t\t],\n\t\t\t[\n\t\t\t\t-164,\n\t\t\t\t69\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t142\n\t\t\t],\n\t\t\t[\n\t\t\t\t-126,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t-102,\n\t\t\t\t-39\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t79\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t47\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t57\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t85\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t-92\n\t\t\t],\n\t\t\t[\n\t\t\t\t127,\n\t\t\t\t163\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t18\n\t\t\t],\n\t\t\t[\n\t\t\t\t96,\n\t\t\t\t111\n\t\t\t],\n\t\t\t[\n\t\t\t\t126,\n\t\t\t\t40\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t72\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t658,\n\t\t\t\t2488\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1018,\n\t\t\t\t2069\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1064,\n\t\t\t\t2033\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1189,\n\t\t\t\t1497\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1414,\n\t\t\t\t1273\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1258,\n\t\t\t\t1082\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t961,\n\t\t\t\t822\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t933,\n\t\t\t\t781\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t745,\n\t\t\t\t956\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t573,\n\t\t\t\t1769\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t559,\n\t\t\t\t1787\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t745,\n\t\t\t\t1980\n\t\t\t],\n\t\t\t[\n\t\t\t\t110,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1862,\n\t\t\t\t3577\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1948,\n\t\t\t\t3528\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1972,\n\t\t\t\t3484\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1962,\n\t\t\t\t3420\n\t\t\t],\n\t\t\t[\n\t\t\t\t-102,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1860,\n\t\t\t\t3392\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t12\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t96\n\t\t\t],\n\t\t\t[\n\t\t\t\t-92,\n\t\t\t\t127\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1688,\n\t\t\t\t3627\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1749,\n\t\t\t\t3778\n\t\t\t],\n\t\t\t[\n\t\t\t\t111,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1860,\n\t\t\t\t3817\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1860,\n\t\t\t\t3392\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1842,\n\t\t\t\t3385\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1796,\n\t\t\t\t3328\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1754,\n\t\t\t\t3272\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1677,\n\t\t\t\t3245\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1645,\n\t\t\t\t3266\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t87\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t62\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1589,\n\t\t\t\t3461\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1606,\n\t\t\t\t3542\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1654,\n\t\t\t\t3611\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1601,\n\t\t\t\t3492\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1645,\n\t\t\t\t3266\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1638,\n\t\t\t\t3240\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-23\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-185\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1670,\n\t\t\t\t3010\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1661,\n\t\t\t\t2964\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1604,\n\t\t\t\t2941\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1479,\n\t\t\t\t2907\n\t\t\t],\n\t\t\t[\n\t\t\t\t-99,\n\t\t\t\t47\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1376,\n\t\t\t\t3048\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1341,\n\t\t\t\t3061\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1405,\n\t\t\t\t3226\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1452,\n\t\t\t\t3466\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t53\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1429,\n\t\t\t\t3570\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2108,\n\t\t\t\t3351\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2184,\n\t\t\t\t3312\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2200,\n\t\t\t\t3203\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2212,\n\t\t\t\t3141\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2192,\n\t\t\t\t3085\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1848,\n\t\t\t\t2976\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1835,\n\t\t\t\t3028\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t40\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t151\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1837,\n\t\t\t\t3285\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1842,\n\t\t\t\t3385\n\t\t\t],\n\t\t\t[\n\t\t\t\t120,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1972,\n\t\t\t\t3484\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1980,\n\t\t\t\t3493\n\t\t\t],\n\t\t\t[\n\t\t\t\t92,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4614,\n\t\t\t\t5631\n\t\t\t],\n\t\t\t[\n\t\t\t\t145,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t111,\n\t\t\t\t22\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-29\n\t\t\t],\n\t\t\t[\n\t\t\t\t88,\n\t\t\t\t-6\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t-47\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-109\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5108,\n\t\t\t\t5351\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5170,\n\t\t\t\t5348\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t17\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5274,\n\t\t\t\t5422\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5301,\n\t\t\t\t5418\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5331,\n\t\t\t\t5421\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5359,\n\t\t\t\t5421\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5387,\n\t\t\t\t5395\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5341,\n\t\t\t\t5230\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5325,\n\t\t\t\t5183\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4931,\n\t\t\t\t5092\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4751,\n\t\t\t\t5148\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4635,\n\t\t\t\t5170\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4601,\n\t\t\t\t5159\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4582,\n\t\t\t\t5150\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4538,\n\t\t\t\t5167\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t87\n\t\t\t],\n\t\t\t[\n\t\t\t\t148,\n\t\t\t\t93\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t53\n\t\t\t],\n\t\t\t[\n\t\t\t\t-102,\n\t\t\t\t32\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t51\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t48\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t83\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5485,\n\t\t\t\t5409\n\t\t\t],\n\t\t\t[\n\t\t\t\t-98,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5359,\n\t\t\t\t5421\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5301,\n\t\t\t\t5418\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5170,\n\t\t\t\t5348\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4614,\n\t\t\t\t5631\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t48\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t108\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t129\n\t\t\t],\n\t\t\t[\n\t\t\t\t-82,\n\t\t\t\t64\n\t\t\t],\n\t\t\t[\n\t\t\t\t-140,\n\t\t\t\t62\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t59\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t89\n\t\t\t],\n\t\t\t[\n\t\t\t\t111,\n\t\t\t\t-36\n\t\t\t],\n\t\t\t[\n\t\t\t\t124,\n\t\t\t\t10\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t39\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t90\n\t\t\t],\n\t\t\t[\n\t\t\t\t88,\n\t\t\t\t67\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t-46\n\t\t\t],\n\t\t\t[\n\t\t\t\t169,\n\t\t\t\t95\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t-66\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-232\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-62\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-60\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t32\n\t\t\t],\n\t\t\t[\n\t\t\t\t121,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t45\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-7\n\t\t\t],\n\t\t\t[\n\t\t\t\t108,\n\t\t\t\t162\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t7\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t118\n\t\t\t],\n\t\t\t[\n\t\t\t\t83,\n\t\t\t\t-8\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t-55\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-129\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-90\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t-48\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t18\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-57\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-89\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-49\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-48\n\t\t\t],\n\t\t\t[\n\t\t\t\t102,\n\t\t\t\t-38\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t-60\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-53\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-79\n\t\t\t],\n\t\t\t[\n\t\t\t\t-105,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4582,\n\t\t\t\t5150\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4467,\n\t\t\t\t4767\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4736,\n\t\t\t\t4620\n\t\t\t],\n\t\t\t[\n\t\t\t\t100,\n\t\t\t\t32\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5021,\n\t\t\t\t4540\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4969,\n\t\t\t\t4438\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4577,\n\t\t\t\t4247\n\t\t\t],\n\t\t\t[\n\t\t\t\t-90,\n\t\t\t\t-94\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4462,\n\t\t\t\t4036\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4331,\n\t\t\t\t4048\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3883,\n\t\t\t\t4888\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t140\n\t\t\t],\n\t\t\t[\n\t\t\t\t92,\n\t\t\t\t51\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t-11\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t71\n\t\t\t],\n\t\t\t[\n\t\t\t\t103,\n\t\t\t\t103\n\t\t\t],\n\t\t\t[\n\t\t\t\t101,\n\t\t\t\t-18\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t-47\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1835,\n\t\t\t\t3028\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1717,\n\t\t\t\t2987\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1684,\n\t\t\t\t2960\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1638,\n\t\t\t\t3240\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1754,\n\t\t\t\t3272\n\t\t\t],\n\t\t\t[\n\t\t\t\t83,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2731,\n\t\t\t\t3198\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2805,\n\t\t\t\t3149\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2785,\n\t\t\t\t3128\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2752,\n\t\t\t\t3074\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2679,\n\t\t\t\t2969\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2672,\n\t\t\t\t2928\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2728,\n\t\t\t\t2900\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2834,\n\t\t\t\t2751\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2881,\n\t\t\t\t2728\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2896,\n\t\t\t\t2707\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2783,\n\t\t\t\t2606\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2742,\n\t\t\t\t2564\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2714,\n\t\t\t\t2579\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2696,\n\t\t\t\t2580\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2695,\n\t\t\t\t2630\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2671,\n\t\t\t\t2654\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2645,\n\t\t\t\t2655\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2597,\n\t\t\t\t2637\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2524,\n\t\t\t\t2631\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2440,\n\t\t\t\t2848\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2379,\n\t\t\t\t2836\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2199,\n\t\t\t\t3038\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2212,\n\t\t\t\t3141\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2386,\n\t\t\t\t3134\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2478,\n\t\t\t\t3220\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2587,\n\t\t\t\t3265\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t82\n\t\t\t]\n\t\t]\n\t],\n\t\"transform\": {\n\t\t\"scale\": [\n\t\t\t0.0005659688265839912,\n\t\t\t0.0003421567106818085\n\t\t],\n\t\t\"translate\": [\n\t\t\t5.878025523533184,\n\t\t\t50.33856106917783\n\t\t]\n\t},\n\t\"objects\": {\n\t\t\"nrw_landkreise_simplify200\": {\n\t\t\t\"type\": \"GeometryCollection\",\n\t\t\t\"geometries\": [\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t2,\n\t\t\t\t\t\t\t3,\n\t\t\t\t\t\t\t4,\n\t\t\t\t\t\t\t5,\n\t\t\t\t\t\t\t6,\n\t\t\t\t\t\t\t7,\n\t\t\t\t\t\t\t8,\n\t\t\t\t\t\t\t9,\n\t\t\t\t\t\t\t10,\n\t\t\t\t\t\t\t11,\n\t\t\t\t\t\t\t12,\n\t\t\t\t\t\t\t13,\n\t\t\t\t\t\t\t14,\n\t\t\t\t\t\t\t15,\n\t\t\t\t\t\t\t16,\n\t\t\t\t\t\t\t17,\n\t\t\t\t\t\t\t18,\n\t\t\t\t\t\t\t19,\n\t\t\t\t\t\t\t20,\n\t\t\t\t\t\t\t21,\n\t\t\t\t\t\t\t22,\n\t\t\t\t\t\t\t23,\n\t\t\t\t\t\t\t24,\n\t\t\t\t\t\t\t25,\n\t\t\t\t\t\t\t26,\n\t\t\t\t\t\t\t27,\n\t\t\t\t\t\t\t28,\n\t\t\t\t\t\t\t29,\n\t\t\t\t\t\t\t30,\n\t\t\t\t\t\t\t31,\n\t\t\t\t\t\t\t32,\n\t\t\t\t\t\t\t33,\n\t\t\t\t\t\t\t34\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05562\",\n\t\t\t\t\t\t\"GEN\": \"Recklinghausen\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t35,\n\t\t\t\t\t\t\t36,\n\t\t\t\t\t\t\t37,\n\t\t\t\t\t\t\t38,\n\t\t\t\t\t\t\t39,\n\t\t\t\t\t\t\t40,\n\t\t\t\t\t\t\t41,\n\t\t\t\t\t\t\t42,\n\t\t\t\t\t\t\t43,\n\t\t\t\t\t\t\t44,\n\t\t\t\t\t\t\t45,\n\t\t\t\t\t\t\t46,\n\t\t\t\t\t\t\t47,\n\t\t\t\t\t\t\t48,\n\t\t\t\t\t\t\t49,\n\t\t\t\t\t\t\t50,\n\t\t\t\t\t\t\t51,\n\t\t\t\t\t\t\t52,\n\t\t\t\t\t\t\t53,\n\t\t\t\t\t\t\t54,\n\t\t\t\t\t\t\t55,\n\t\t\t\t\t\t\t56,\n\t\t\t\t\t\t\t57,\n\t\t\t\t\t\t\t58,\n\t\t\t\t\t\t\t59\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05774\",\n\t\t\t\t\t\t\"GEN\": \"Paderborn\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t60,\n\t\t\t\t\t\t\t61,\n\t\t\t\t\t\t\t62,\n\t\t\t\t\t\t\t63,\n\t\t\t\t\t\t\t64,\n\t\t\t\t\t\t\t65,\n\t\t\t\t\t\t\t66,\n\t\t\t\t\t\t\t67,\n\t\t\t\t\t\t\t68,\n\t\t\t\t\t\t\t69,\n\t\t\t\t\t\t\t70,\n\t\t\t\t\t\t\t71,\n\t\t\t\t\t\t\t72\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05314\",\n\t\t\t\t\t\t\"GEN\": \"Bonn\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t73,\n\t\t\t\t\t\t\t74,\n\t\t\t\t\t\t\t75,\n\t\t\t\t\t\t\t76,\n\t\t\t\t\t\t\t77,\n\t\t\t\t\t\t\t78,\n\t\t\t\t\t\t\t79,\n\t\t\t\t\t\t\t80,\n\t\t\t\t\t\t\t81,\n\t\t\t\t\t\t\t82,\n\t\t\t\t\t\t\t83,\n\t\t\t\t\t\t\t84,\n\t\t\t\t\t\t\t85,\n\t\t\t\t\t\t\t86,\n\t\t\t\t\t\t\t87,\n\t\t\t\t\t\t\t88,\n\t\t\t\t\t\t\t89,\n\t\t\t\t\t\t\t90,\n\t\t\t\t\t\t\t91,\n\t\t\t\t\t\t\t92,\n\t\t\t\t\t\t\t93,\n\t\t\t\t\t\t\t94,\n\t\t\t\t\t\t\t95,\n\t\t\t\t\t\t\t96,\n\t\t\t\t\t\t\t97,\n\t\t\t\t\t\t\t98,\n\t\t\t\t\t\t\t99,\n\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t101,\n\t\t\t\t\t\t\t102,\n\t\t\t\t\t\t\t103,\n\t\t\t\t\t\t\t104,\n\t\t\t\t\t\t\t105,\n\t\t\t\t\t\t\t106\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05374\",\n\t\t\t\t\t\t\"GEN\": \"Oberbergischer Kreis\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-50,\n\t\t\t\t\t\t\t107,\n\t\t\t\t\t\t\t-48,\n\t\t\t\t\t\t\t108,\n\t\t\t\t\t\t\t109,\n\t\t\t\t\t\t\t110,\n\t\t\t\t\t\t\t111,\n\t\t\t\t\t\t\t112,\n\t\t\t\t\t\t\t113,\n\t\t\t\t\t\t\t114,\n\t\t\t\t\t\t\t115,\n\t\t\t\t\t\t\t116,\n\t\t\t\t\t\t\t117,\n\t\t\t\t\t\t\t118,\n\t\t\t\t\t\t\t119,\n\t\t\t\t\t\t\t120,\n\t\t\t\t\t\t\t121,\n\t\t\t\t\t\t\t122,\n\t\t\t\t\t\t\t123,\n\t\t\t\t\t\t\t124,\n\t\t\t\t\t\t\t125,\n\t\t\t\t\t\t\t126,\n\t\t\t\t\t\t\t127,\n\t\t\t\t\t\t\t128,\n\t\t\t\t\t\t\t129,\n\t\t\t\t\t\t\t130,\n\t\t\t\t\t\t\t131,\n\t\t\t\t\t\t\t132,\n\t\t\t\t\t\t\t133,\n\t\t\t\t\t\t\t134,\n\t\t\t\t\t\t\t-54,\n\t\t\t\t\t\t\t135,\n\t\t\t\t\t\t\t-52,\n\t\t\t\t\t\t\t136\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05958\",\n\t\t\t\t\t\t\"GEN\": \"Hochsauerlandkreis\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t137,\n\t\t\t\t\t\t\t138,\n\t\t\t\t\t\t\t139,\n\t\t\t\t\t\t\t140,\n\t\t\t\t\t\t\t141,\n\t\t\t\t\t\t\t142,\n\t\t\t\t\t\t\t143,\n\t\t\t\t\t\t\t144,\n\t\t\t\t\t\t\t145,\n\t\t\t\t\t\t\t146,\n\t\t\t\t\t\t\t-55,\n\t\t\t\t\t\t\t-135,\n\t\t\t\t\t\t\t147,\n\t\t\t\t\t\t\t-133,\n\t\t\t\t\t\t\t148,\n\t\t\t\t\t\t\t149,\n\t\t\t\t\t\t\t150,\n\t\t\t\t\t\t\t151,\n\t\t\t\t\t\t\t152,\n\t\t\t\t\t\t\t153,\n\t\t\t\t\t\t\t154,\n\t\t\t\t\t\t\t155,\n\t\t\t\t\t\t\t156,\n\t\t\t\t\t\t\t157\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05974\",\n\t\t\t\t\t\t\"GEN\": \"Soest\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t158,\n\t\t\t\t\t\t\t159,\n\t\t\t\t\t\t\t160,\n\t\t\t\t\t\t\t161,\n\t\t\t\t\t\t\t162,\n\t\t\t\t\t\t\t163,\n\t\t\t\t\t\t\t164,\n\t\t\t\t\t\t\t165,\n\t\t\t\t\t\t\t166,\n\t\t\t\t\t\t\t167,\n\t\t\t\t\t\t\t168,\n\t\t\t\t\t\t\t169,\n\t\t\t\t\t\t\t170,\n\t\t\t\t\t\t\t171,\n\t\t\t\t\t\t\t172,\n\t\t\t\t\t\t\t173,\n\t\t\t\t\t\t\t174,\n\t\t\t\t\t\t\t175\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05914\",\n\t\t\t\t\t\t\"GEN\": \"Hagen\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t176,\n\t\t\t\t\t\t\t-150,\n\t\t\t\t\t\t\t177,\n\t\t\t\t\t\t\t-131,\n\t\t\t\t\t\t\t178,\n\t\t\t\t\t\t\t-129,\n\t\t\t\t\t\t\t179,\n\t\t\t\t\t\t\t-127,\n\t\t\t\t\t\t\t180,\n\t\t\t\t\t\t\t-125,\n\t\t\t\t\t\t\t181,\n\t\t\t\t\t\t\t182,\n\t\t\t\t\t\t\t183,\n\t\t\t\t\t\t\t184,\n\t\t\t\t\t\t\t185,\n\t\t\t\t\t\t\t186,\n\t\t\t\t\t\t\t187,\n\t\t\t\t\t\t\t188,\n\t\t\t\t\t\t\t-86,\n\t\t\t\t\t\t\t189,\n\t\t\t\t\t\t\t-84,\n\t\t\t\t\t\t\t190,\n\t\t\t\t\t\t\t191,\n\t\t\t\t\t\t\t192,\n\t\t\t\t\t\t\t-162,\n\t\t\t\t\t\t\t193,\n\t\t\t\t\t\t\t-160,\n\t\t\t\t\t\t\t194,\n\t\t\t\t\t\t\t195,\n\t\t\t\t\t\t\t196,\n\t\t\t\t\t\t\t197,\n\t\t\t\t\t\t\t198,\n\t\t\t\t\t\t\t199,\n\t\t\t\t\t\t\t200,\n\t\t\t\t\t\t\t201\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05962\",\n\t\t\t\t\t\t\"GEN\": \"Märkischer Kreis\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t202,\n\t\t\t\t\t\t\t203,\n\t\t\t\t\t\t\t204,\n\t\t\t\t\t\t\t205,\n\t\t\t\t\t\t\t206,\n\t\t\t\t\t\t\t207,\n\t\t\t\t\t\t\t208,\n\t\t\t\t\t\t\t209,\n\t\t\t\t\t\t\t210,\n\t\t\t\t\t\t\t211,\n\t\t\t\t\t\t\t212\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05111\",\n\t\t\t\t\t\t\"GEN\": \"Düsseldorf\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t213,\n\t\t\t\t\t\t\t214,\n\t\t\t\t\t\t\t215,\n\t\t\t\t\t\t\t216,\n\t\t\t\t\t\t\t217,\n\t\t\t\t\t\t\t218,\n\t\t\t\t\t\t\t219,\n\t\t\t\t\t\t\t220,\n\t\t\t\t\t\t\t221,\n\t\t\t\t\t\t\t222,\n\t\t\t\t\t\t\t223,\n\t\t\t\t\t\t\t224,\n\t\t\t\t\t\t\t225,\n\t\t\t\t\t\t\t226,\n\t\t\t\t\t\t\t227,\n\t\t\t\t\t\t\t228,\n\t\t\t\t\t\t\t229,\n\t\t\t\t\t\t\t230,\n\t\t\t\t\t\t\t231,\n\t\t\t\t\t\t\t232\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05911\",\n\t\t\t\t\t\t\"GEN\": \"Bochum\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t233,\n\t\t\t\t\t\t\t234,\n\t\t\t\t\t\t\t235,\n\t\t\t\t\t\t\t236,\n\t\t\t\t\t\t\t237,\n\t\t\t\t\t\t\t238,\n\t\t\t\t\t\t\t239,\n\t\t\t\t\t\t\t240,\n\t\t\t\t\t\t\t-214,\n\t\t\t\t\t\t\t241,\n\t\t\t\t\t\t\t242,\n\t\t\t\t\t\t\t-11,\n\t\t\t\t\t\t\t243,\n\t\t\t\t\t\t\t244,\n\t\t\t\t\t\t\t245\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05913\",\n\t\t\t\t\t\t\"GEN\": \"Dortmund\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t246,\n\t\t\t\t\t\t\t247,\n\t\t\t\t\t\t\t248,\n\t\t\t\t\t\t\t249,\n\t\t\t\t\t\t\t250,\n\t\t\t\t\t\t\t251,\n\t\t\t\t\t\t\t252,\n\t\t\t\t\t\t\t253,\n\t\t\t\t\t\t\t254,\n\t\t\t\t\t\t\t255\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05154\",\n\t\t\t\t\t\t\"GEN\": \"Kleve\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t256,\n\t\t\t\t\t\t\t257,\n\t\t\t\t\t\t\t258,\n\t\t\t\t\t\t\t259,\n\t\t\t\t\t\t\t260,\n\t\t\t\t\t\t\t261,\n\t\t\t\t\t\t\t262,\n\t\t\t\t\t\t\t263,\n\t\t\t\t\t\t\t264,\n\t\t\t\t\t\t\t265,\n\t\t\t\t\t\t\t266,\n\t\t\t\t\t\t\t267,\n\t\t\t\t\t\t\t268,\n\t\t\t\t\t\t\t269,\n\t\t\t\t\t\t\t-254,\n\t\t\t\t\t\t\t270\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05166\",\n\t\t\t\t\t\t\"GEN\": \"Viersen\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t271,\n\t\t\t\t\t\t\t272,\n\t\t\t\t\t\t\t273,\n\t\t\t\t\t\t\t274,\n\t\t\t\t\t\t\t275,\n\t\t\t\t\t\t\t276,\n\t\t\t\t\t\t\t-42,\n\t\t\t\t\t\t\t277,\n\t\t\t\t\t\t\t-40,\n\t\t\t\t\t\t\t278,\n\t\t\t\t\t\t\t-38,\n\t\t\t\t\t\t\t279,\n\t\t\t\t\t\t\t280,\n\t\t\t\t\t\t\t281,\n\t\t\t\t\t\t\t282,\n\t\t\t\t\t\t\t283,\n\t\t\t\t\t\t\t284,\n\t\t\t\t\t\t\t285,\n\t\t\t\t\t\t\t286,\n\t\t\t\t\t\t\t287,\n\t\t\t\t\t\t\t288,\n\t\t\t\t\t\t\t289,\n\t\t\t\t\t\t\t290,\n\t\t\t\t\t\t\t291,\n\t\t\t\t\t\t\t292\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05766\",\n\t\t\t\t\t\t\"GEN\": \"Lippe\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-263,\n\t\t\t\t\t\t\t293,\n\t\t\t\t\t\t\t294,\n\t\t\t\t\t\t\t295,\n\t\t\t\t\t\t\t296,\n\t\t\t\t\t\t\t297,\n\t\t\t\t\t\t\t298,\n\t\t\t\t\t\t\t299,\n\t\t\t\t\t\t\t300,\n\t\t\t\t\t\t\t301,\n\t\t\t\t\t\t\t-265,\n\t\t\t\t\t\t\t302\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05116\",\n\t\t\t\t\t\t\"GEN\": \"Mönchengladbach\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-274,\n\t\t\t\t\t\t\t303,\n\t\t\t\t\t\t\t-272,\n\t\t\t\t\t\t\t304,\n\t\t\t\t\t\t\t-110,\n\t\t\t\t\t\t\t305,\n\t\t\t\t\t\t\t-46,\n\t\t\t\t\t\t\t306,\n\t\t\t\t\t\t\t-44,\n\t\t\t\t\t\t\t307,\n\t\t\t\t\t\t\t-276,\n\t\t\t\t\t\t\t308\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05762\",\n\t\t\t\t\t\t\"GEN\": \"Höxter\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-112,\n\t\t\t\t\t\t\t309,\n\t\t\t\t\t\t\t310,\n\t\t\t\t\t\t\t311,\n\t\t\t\t\t\t\t312,\n\t\t\t\t\t\t\t313,\n\t\t\t\t\t\t\t314,\n\t\t\t\t\t\t\t315,\n\t\t\t\t\t\t\t316,\n\t\t\t\t\t\t\t317,\n\t\t\t\t\t\t\t-116,\n\t\t\t\t\t\t\t318,\n\t\t\t\t\t\t\t-114,\n\t\t\t\t\t\t\t319\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05970\",\n\t\t\t\t\t\t\"GEN\": \"Siegen-Wittgenstein\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t320,\n\t\t\t\t\t\t\t321,\n\t\t\t\t\t\t\t322,\n\t\t\t\t\t\t\t-156,\n\t\t\t\t\t\t\t323,\n\t\t\t\t\t\t\t324,\n\t\t\t\t\t\t\t325,\n\t\t\t\t\t\t\t326,\n\t\t\t\t\t\t\t327,\n\t\t\t\t\t\t\t328,\n\t\t\t\t\t\t\t329,\n\t\t\t\t\t\t\t330,\n\t\t\t\t\t\t\t331,\n\t\t\t\t\t\t\t332\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05915\",\n\t\t\t\t\t\t\"GEN\": \"Hamm\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t333,\n\t\t\t\t\t\t\t334,\n\t\t\t\t\t\t\t335,\n\t\t\t\t\t\t\t336,\n\t\t\t\t\t\t\t337,\n\t\t\t\t\t\t\t338,\n\t\t\t\t\t\t\t339,\n\t\t\t\t\t\t\t340,\n\t\t\t\t\t\t\t-30,\n\t\t\t\t\t\t\t341,\n\t\t\t\t\t\t\t342,\n\t\t\t\t\t\t\t343,\n\t\t\t\t\t\t\t344,\n\t\t\t\t\t\t\t345,\n\t\t\t\t\t\t\t346,\n\t\t\t\t\t\t\t347,\n\t\t\t\t\t\t\t348,\n\t\t\t\t\t\t\t349,\n\t\t\t\t\t\t\t350,\n\t\t\t\t\t\t\t351,\n\t\t\t\t\t\t\t352,\n\t\t\t\t\t\t\t353,\n\t\t\t\t\t\t\t354,\n\t\t\t\t\t\t\t355,\n\t\t\t\t\t\t\t356,\n\t\t\t\t\t\t\t357,\n\t\t\t\t\t\t\t358,\n\t\t\t\t\t\t\t-251,\n\t\t\t\t\t\t\t359,\n\t\t\t\t\t\t\t-249,\n\t\t\t\t\t\t\t360,\n\t\t\t\t\t\t\t361,\n\t\t\t\t\t\t\t362\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05170\",\n\t\t\t\t\t\t\"GEN\": \"Wesel\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t363,\n\t\t\t\t\t\t\t364,\n\t\t\t\t\t\t\t365,\n\t\t\t\t\t\t\t366,\n\t\t\t\t\t\t\t367,\n\t\t\t\t\t\t\t368,\n\t\t\t\t\t\t\t369,\n\t\t\t\t\t\t\t370,\n\t\t\t\t\t\t\t371,\n\t\t\t\t\t\t\t372,\n\t\t\t\t\t\t\t373,\n\t\t\t\t\t\t\t374,\n\t\t\t\t\t\t\t375,\n\t\t\t\t\t\t\t-207,\n\t\t\t\t\t\t\t376,\n\t\t\t\t\t\t\t-205,\n\t\t\t\t\t\t\t377,\n\t\t\t\t\t\t\t378,\n\t\t\t\t\t\t\t379,\n\t\t\t\t\t\t\t380,\n\t\t\t\t\t\t\t381,\n\t\t\t\t\t\t\t382,\n\t\t\t\t\t\t\t383,\n\t\t\t\t\t\t\t384\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05158\",\n\t\t\t\t\t\t\"GEN\": \"Mettmann\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t385,\n\t\t\t\t\t\t\t386,\n\t\t\t\t\t\t\t387,\n\t\t\t\t\t\t\t388,\n\t\t\t\t\t\t\t389,\n\t\t\t\t\t\t\t390,\n\t\t\t\t\t\t\t391,\n\t\t\t\t\t\t\t392,\n\t\t\t\t\t\t\t393,\n\t\t\t\t\t\t\t394,\n\t\t\t\t\t\t\t395,\n\t\t\t\t\t\t\t396,\n\t\t\t\t\t\t\t397,\n\t\t\t\t\t\t\t398,\n\t\t\t\t\t\t\t399,\n\t\t\t\t\t\t\t400,\n\t\t\t\t\t\t\t401\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05366\",\n\t\t\t\t\t\t\"GEN\": \"Euskirchen\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t402,\n\t\t\t\t\t\t\t403,\n\t\t\t\t\t\t\t404,\n\t\t\t\t\t\t\t405,\n\t\t\t\t\t\t\t406,\n\t\t\t\t\t\t\t407,\n\t\t\t\t\t\t\t408,\n\t\t\t\t\t\t\t409,\n\t\t\t\t\t\t\t410,\n\t\t\t\t\t\t\t-259,\n\t\t\t\t\t\t\t411,\n\t\t\t\t\t\t\t-257,\n\t\t\t\t\t\t\t412,\n\t\t\t\t\t\t\t-357\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05114\",\n\t\t\t\t\t\t\"GEN\": \"Krefeld\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t413,\n\t\t\t\t\t\t\t\t414,\n\t\t\t\t\t\t\t\t415,\n\t\t\t\t\t\t\t\t416,\n\t\t\t\t\t\t\t\t417,\n\t\t\t\t\t\t\t\t418,\n\t\t\t\t\t\t\t\t-394,\n\t\t\t\t\t\t\t\t419,\n\t\t\t\t\t\t\t\t420,\n\t\t\t\t\t\t\t\t421,\n\t\t\t\t\t\t\t\t422\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t423\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"MultiPolygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05334\",\n\t\t\t\t\t\t\"GEN\": \"Städteregion Aachen\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-210,\n\t\t\t\t\t\t\t424,\n\t\t\t\t\t\t\t425,\n\t\t\t\t\t\t\t426,\n\t\t\t\t\t\t\t427,\n\t\t\t\t\t\t\t428,\n\t\t\t\t\t\t\t429,\n\t\t\t\t\t\t\t430,\n\t\t\t\t\t\t\t431,\n\t\t\t\t\t\t\t432,\n\t\t\t\t\t\t\t433,\n\t\t\t\t\t\t\t434,\n\t\t\t\t\t\t\t435,\n\t\t\t\t\t\t\t436,\n\t\t\t\t\t\t\t437,\n\t\t\t\t\t\t\t-299,\n\t\t\t\t\t\t\t438,\n\t\t\t\t\t\t\t-297,\n\t\t\t\t\t\t\t439,\n\t\t\t\t\t\t\t-295,\n\t\t\t\t\t\t\t440,\n\t\t\t\t\t\t\t-261,\n\t\t\t\t\t\t\t441,\n\t\t\t\t\t\t\t-410,\n\t\t\t\t\t\t\t442,\n\t\t\t\t\t\t\t443,\n\t\t\t\t\t\t\t444\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05162\",\n\t\t\t\t\t\t\"GEN\": \"Rhein-Kreis Neuss\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t445,\n\t\t\t\t\t\t\t446,\n\t\t\t\t\t\t\t447,\n\t\t\t\t\t\t\t448,\n\t\t\t\t\t\t\t-328,\n\t\t\t\t\t\t\t449,\n\t\t\t\t\t\t\t450,\n\t\t\t\t\t\t\t-325,\n\t\t\t\t\t\t\t451,\n\t\t\t\t\t\t\t452,\n\t\t\t\t\t\t\t-153,\n\t\t\t\t\t\t\t453,\n\t\t\t\t\t\t\t-201,\n\t\t\t\t\t\t\t454,\n\t\t\t\t\t\t\t-199,\n\t\t\t\t\t\t\t455,\n\t\t\t\t\t\t\t-197,\n\t\t\t\t\t\t\t456,\n\t\t\t\t\t\t\t-195,\n\t\t\t\t\t\t\t-159,\n\t\t\t\t\t\t\t-236,\n\t\t\t\t\t\t\t457,\n\t\t\t\t\t\t\t-234,\n\t\t\t\t\t\t\t458,\n\t\t\t\t\t\t\t-245,\n\t\t\t\t\t\t\t459,\n\t\t\t\t\t\t\t-9,\n\t\t\t\t\t\t\t460,\n\t\t\t\t\t\t\t-7,\n\t\t\t\t\t\t\t461,\n\t\t\t\t\t\t\t462,\n\t\t\t\t\t\t\t463,\n\t\t\t\t\t\t\t464,\n\t\t\t\t\t\t\t465\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05978\",\n\t\t\t\t\t\t\"GEN\": \"Unna\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t466,\n\t\t\t\t\t\t\t467,\n\t\t\t\t\t\t\t468,\n\t\t\t\t\t\t\t469,\n\t\t\t\t\t\t\t470,\n\t\t\t\t\t\t\t471,\n\t\t\t\t\t\t\t472,\n\t\t\t\t\t\t\t473,\n\t\t\t\t\t\t\t474,\n\t\t\t\t\t\t\t475,\n\t\t\t\t\t\t\t-370,\n\t\t\t\t\t\t\t476,\n\t\t\t\t\t\t\t-368,\n\t\t\t\t\t\t\t477\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05122\",\n\t\t\t\t\t\t\"GEN\": \"Solingen\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t478,\n\t\t\t\t\t\t\t-96,\n\t\t\t\t\t\t\t479,\n\t\t\t\t\t\t\t-94,\n\t\t\t\t\t\t\t480,\n\t\t\t\t\t\t\t-92,\n\t\t\t\t\t\t\t481,\n\t\t\t\t\t\t\t482,\n\t\t\t\t\t\t\t483,\n\t\t\t\t\t\t\t484,\n\t\t\t\t\t\t\t485,\n\t\t\t\t\t\t\t486,\n\t\t\t\t\t\t\t487,\n\t\t\t\t\t\t\t488,\n\t\t\t\t\t\t\t489,\n\t\t\t\t\t\t\t490,\n\t\t\t\t\t\t\t491,\n\t\t\t\t\t\t\t492,\n\t\t\t\t\t\t\t493,\n\t\t\t\t\t\t\t494,\n\t\t\t\t\t\t\t-475,\n\t\t\t\t\t\t\t495,\n\t\t\t\t\t\t\t-473,\n\t\t\t\t\t\t\t496,\n\t\t\t\t\t\t\t497,\n\t\t\t\t\t\t\t498\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05378\",\n\t\t\t\t\t\t\"GEN\": \"Rheinisch-Bergischer Kreis\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t499,\n\t\t\t\t\t\t\t-118,\n\t\t\t\t\t\t\t500,\n\t\t\t\t\t\t\t-317,\n\t\t\t\t\t\t\t501,\n\t\t\t\t\t\t\t-315,\n\t\t\t\t\t\t\t502,\n\t\t\t\t\t\t\t-313,\n\t\t\t\t\t\t\t503,\n\t\t\t\t\t\t\t-311,\n\t\t\t\t\t\t\t504,\n\t\t\t\t\t\t\t-88,\n\t\t\t\t\t\t\t505,\n\t\t\t\t\t\t\t-188,\n\t\t\t\t\t\t\t506,\n\t\t\t\t\t\t\t507,\n\t\t\t\t\t\t\t-185,\n\t\t\t\t\t\t\t508,\n\t\t\t\t\t\t\t-183,\n\t\t\t\t\t\t\t509,\n\t\t\t\t\t\t\t-123,\n\t\t\t\t\t\t\t510,\n\t\t\t\t\t\t\t511,\n\t\t\t\t\t\t\t-120\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05966\",\n\t\t\t\t\t\t\"GEN\": \"Olpe\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t512,\n\t\t\t\t\t\t\t513,\n\t\t\t\t\t\t\t514,\n\t\t\t\t\t\t\t515,\n\t\t\t\t\t\t\t516,\n\t\t\t\t\t\t\t517,\n\t\t\t\t\t\t\t518,\n\t\t\t\t\t\t\t519,\n\t\t\t\t\t\t\t520,\n\t\t\t\t\t\t\t521,\n\t\t\t\t\t\t\t522,\n\t\t\t\t\t\t\t523,\n\t\t\t\t\t\t\t524,\n\t\t\t\t\t\t\t525\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05515\",\n\t\t\t\t\t\t\"GEN\": \"Münster\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t526,\n\t\t\t\t\t\t\t527,\n\t\t\t\t\t\t\t528,\n\t\t\t\t\t\t\t529,\n\t\t\t\t\t\t\t-144,\n\t\t\t\t\t\t\t530,\n\t\t\t\t\t\t\t-142,\n\t\t\t\t\t\t\t531,\n\t\t\t\t\t\t\t-140,\n\t\t\t\t\t\t\t532,\n\t\t\t\t\t\t\t-138,\n\t\t\t\t\t\t\t533,\n\t\t\t\t\t\t\t534,\n\t\t\t\t\t\t\t535,\n\t\t\t\t\t\t\t-321,\n\t\t\t\t\t\t\t536,\n\t\t\t\t\t\t\t-332,\n\t\t\t\t\t\t\t537,\n\t\t\t\t\t\t\t538,\n\t\t\t\t\t\t\t539,\n\t\t\t\t\t\t\t-517,\n\t\t\t\t\t\t\t540,\n\t\t\t\t\t\t\t-515,\n\t\t\t\t\t\t\t541,\n\t\t\t\t\t\t\t542,\n\t\t\t\t\t\t\t543,\n\t\t\t\t\t\t\t544\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05570\",\n\t\t\t\t\t\t\"GEN\": \"Warendorf\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t545,\n\t\t\t\t\t\t\t546,\n\t\t\t\t\t\t\t-490,\n\t\t\t\t\t\t\t547,\n\t\t\t\t\t\t\t548,\n\t\t\t\t\t\t\t549,\n\t\t\t\t\t\t\t550,\n\t\t\t\t\t\t\t551,\n\t\t\t\t\t\t\t-430,\n\t\t\t\t\t\t\t552,\n\t\t\t\t\t\t\t-428,\n\t\t\t\t\t\t\t553\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05315\",\n\t\t\t\t\t\t\"GEN\": \"Köln\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t554,\n\t\t\t\t\t\t\t-551,\n\t\t\t\t\t\t\t555,\n\t\t\t\t\t\t\t556,\n\t\t\t\t\t\t\t557,\n\t\t\t\t\t\t\t558,\n\t\t\t\t\t\t\t559,\n\t\t\t\t\t\t\t-401,\n\t\t\t\t\t\t\t560,\n\t\t\t\t\t\t\t561,\n\t\t\t\t\t\t\t562,\n\t\t\t\t\t\t\t563,\n\t\t\t\t\t\t\t564,\n\t\t\t\t\t\t\t-432\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05362\",\n\t\t\t\t\t\t\"GEN\": \"Rhein-Erft-Kreis\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t565,\n\t\t\t\t\t\t\t566,\n\t\t\t\t\t\t\t567,\n\t\t\t\t\t\t\t568,\n\t\t\t\t\t\t\t569,\n\t\t\t\t\t\t\t570,\n\t\t\t\t\t\t\t571,\n\t\t\t\t\t\t\t572,\n\t\t\t\t\t\t\t573,\n\t\t\t\t\t\t\t574,\n\t\t\t\t\t\t\t-34,\n\t\t\t\t\t\t\t575,\n\t\t\t\t\t\t\t-32,\n\t\t\t\t\t\t\t576,\n\t\t\t\t\t\t\t-340,\n\t\t\t\t\t\t\t577,\n\t\t\t\t\t\t\t-338,\n\t\t\t\t\t\t\t578,\n\t\t\t\t\t\t\t-336,\n\t\t\t\t\t\t\t579,\n\t\t\t\t\t\t\t-334,\n\t\t\t\t\t\t\t580,\n\t\t\t\t\t\t\t-362,\n\t\t\t\t\t\t\t581,\n\t\t\t\t\t\t\t-247,\n\t\t\t\t\t\t\t582\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05554\",\n\t\t\t\t\t\t\"GEN\": \"Borken\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t583,\n\t\t\t\t\t\t\t584,\n\t\t\t\t\t\t\t585,\n\t\t\t\t\t\t\t586,\n\t\t\t\t\t\t\t-523,\n\t\t\t\t\t\t\t587,\n\t\t\t\t\t\t\t-521,\n\t\t\t\t\t\t\t588,\n\t\t\t\t\t\t\t-519,\n\t\t\t\t\t\t\t589,\n\t\t\t\t\t\t\t-539,\n\t\t\t\t\t\t\t590,\n\t\t\t\t\t\t\t-330,\n\t\t\t\t\t\t\t591,\n\t\t\t\t\t\t\t-448,\n\t\t\t\t\t\t\t592,\n\t\t\t\t\t\t\t-446,\n\t\t\t\t\t\t\t593,\n\t\t\t\t\t\t\t-465,\n\t\t\t\t\t\t\t594,\n\t\t\t\t\t\t\t-463,\n\t\t\t\t\t\t\t595,\n\t\t\t\t\t\t\t-5,\n\t\t\t\t\t\t\t596,\n\t\t\t\t\t\t\t-3,\n\t\t\t\t\t\t\t597,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t598,\n\t\t\t\t\t\t\t599,\n\t\t\t\t\t\t\t-573,\n\t\t\t\t\t\t\t600,\n\t\t\t\t\t\t\t-571,\n\t\t\t\t\t\t\t601,\n\t\t\t\t\t\t\t-569,\n\t\t\t\t\t\t\t602,\n\t\t\t\t\t\t\t-567,\n\t\t\t\t\t\t\t603,\n\t\t\t\t\t\t\t604\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05558\",\n\t\t\t\t\t\t\"GEN\": \"Coesfeld\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-527,\n\t\t\t\t\t\t\t605,\n\t\t\t\t\t\t\t-544,\n\t\t\t\t\t\t\t606,\n\t\t\t\t\t\t\t607,\n\t\t\t\t\t\t\t-513,\n\t\t\t\t\t\t\t608,\n\t\t\t\t\t\t\t-525,\n\t\t\t\t\t\t\t609,\n\t\t\t\t\t\t\t-586,\n\t\t\t\t\t\t\t610,\n\t\t\t\t\t\t\t-584,\n\t\t\t\t\t\t\t611,\n\t\t\t\t\t\t\t-604,\n\t\t\t\t\t\t\t-566,\n\t\t\t\t\t\t\t612\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566\",\n\t\t\t\t\t\t\"GEN\": \"Steinfurt\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-19,\n\t\t\t\t\t\t\t613,\n\t\t\t\t\t\t\t614,\n\t\t\t\t\t\t\t615,\n\t\t\t\t\t\t\t616,\n\t\t\t\t\t\t\t-225,\n\t\t\t\t\t\t\t617,\n\t\t\t\t\t\t\t618,\n\t\t\t\t\t\t\t619,\n\t\t\t\t\t\t\t-21,\n\t\t\t\t\t\t\t620\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05513\",\n\t\t\t\t\t\t\"GEN\": \"Gelsenkirchen\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-14,\n\t\t\t\t\t\t\t621,\n\t\t\t\t\t\t\t-232,\n\t\t\t\t\t\t\t622,\n\t\t\t\t\t\t\t-230,\n\t\t\t\t\t\t\t623,\n\t\t\t\t\t\t\t624,\n\t\t\t\t\t\t\t-227,\n\t\t\t\t\t\t\t625,\n\t\t\t\t\t\t\t-616,\n\t\t\t\t\t\t\t626,\n\t\t\t\t\t\t\t-16,\n\t\t\t\t\t\t\t627\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05916\",\n\t\t\t\t\t\t\"GEN\": \"Herne\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-492,\n\t\t\t\t\t\t\t628,\n\t\t\t\t\t\t\t-546,\n\t\t\t\t\t\t\t629,\n\t\t\t\t\t\t\t630,\n\t\t\t\t\t\t\t-374,\n\t\t\t\t\t\t\t631,\n\t\t\t\t\t\t\t632,\n\t\t\t\t\t\t\t633\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05316\",\n\t\t\t\t\t\t\"GEN\": \"Leverkusen\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-90,\n\t\t\t\t\t\t\t634,\n\t\t\t\t\t\t\t-66,\n\t\t\t\t\t\t\t635,\n\t\t\t\t\t\t\t-64,\n\t\t\t\t\t\t\t636,\n\t\t\t\t\t\t\t637,\n\t\t\t\t\t\t\t-61,\n\t\t\t\t\t\t\t638,\n\t\t\t\t\t\t\t639,\n\t\t\t\t\t\t\t640,\n\t\t\t\t\t\t\t-70,\n\t\t\t\t\t\t\t641,\n\t\t\t\t\t\t\t-68,\n\t\t\t\t\t\t\t642,\n\t\t\t\t\t\t\t643,\n\t\t\t\t\t\t\t-391,\n\t\t\t\t\t\t\t644,\n\t\t\t\t\t\t\t-389,\n\t\t\t\t\t\t\t645,\n\t\t\t\t\t\t\t-387,\n\t\t\t\t\t\t\t646,\n\t\t\t\t\t\t\t647,\n\t\t\t\t\t\t\t648,\n\t\t\t\t\t\t\t-558,\n\t\t\t\t\t\t\t649,\n\t\t\t\t\t\t\t650,\n\t\t\t\t\t\t\t-549,\n\t\t\t\t\t\t\t651,\n\t\t\t\t\t\t\t-488,\n\t\t\t\t\t\t\t652,\n\t\t\t\t\t\t\t653,\n\t\t\t\t\t\t\t-485,\n\t\t\t\t\t\t\t654,\n\t\t\t\t\t\t\t-483,\n\t\t\t\t\t\t\t655\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382\",\n\t\t\t\t\t\t\"GEN\": \"Rhein-Sieg-Kreis\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t656,\n\t\t\t\t\t\t\t657,\n\t\t\t\t\t\t\t-104,\n\t\t\t\t\t\t\t658,\n\t\t\t\t\t\t\t659,\n\t\t\t\t\t\t\t660,\n\t\t\t\t\t\t\t661,\n\t\t\t\t\t\t\t662,\n\t\t\t\t\t\t\t663,\n\t\t\t\t\t\t\t664,\n\t\t\t\t\t\t\t665,\n\t\t\t\t\t\t\t666,\n\t\t\t\t\t\t\t667,\n\t\t\t\t\t\t\t668,\n\t\t\t\t\t\t\t-468,\n\t\t\t\t\t\t\t669,\n\t\t\t\t\t\t\t-478,\n\t\t\t\t\t\t\t670,\n\t\t\t\t\t\t\t-366,\n\t\t\t\t\t\t\t671,\n\t\t\t\t\t\t\t-364,\n\t\t\t\t\t\t\t672,\n\t\t\t\t\t\t\t673,\n\t\t\t\t\t\t\t674\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05124\",\n\t\t\t\t\t\t\"GEN\": \"Wuppertal\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t675,\n\t\t\t\t\t\t\t676,\n\t\t\t\t\t\t\t677,\n\t\t\t\t\t\t\t-285,\n\t\t\t\t\t\t\t678,\n\t\t\t\t\t\t\t-283,\n\t\t\t\t\t\t\t679,\n\t\t\t\t\t\t\t680,\n\t\t\t\t\t\t\t681,\n\t\t\t\t\t\t\t682,\n\t\t\t\t\t\t\t683,\n\t\t\t\t\t\t\t684,\n\t\t\t\t\t\t\t685\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05711\",\n\t\t\t\t\t\t\"GEN\": \"Bielefeld\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-663,\n\t\t\t\t\t\t\t686,\n\t\t\t\t\t\t\t-661,\n\t\t\t\t\t\t\t687,\n\t\t\t\t\t\t\t688,\n\t\t\t\t\t\t\t-100,\n\t\t\t\t\t\t\t689,\n\t\t\t\t\t\t\t-98,\n\t\t\t\t\t\t\t690,\n\t\t\t\t\t\t\t691,\n\t\t\t\t\t\t\t-498,\n\t\t\t\t\t\t\t692,\n\t\t\t\t\t\t\t693,\n\t\t\t\t\t\t\t-470,\n\t\t\t\t\t\t\t694,\n\t\t\t\t\t\t\t-668,\n\t\t\t\t\t\t\t695,\n\t\t\t\t\t\t\t-666,\n\t\t\t\t\t\t\t696,\n\t\t\t\t\t\t\t697\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05120\",\n\t\t\t\t\t\t\"GEN\": \"Remscheid\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t698,\n\t\t\t\t\t\t\t-301,\n\t\t\t\t\t\t\t699,\n\t\t\t\t\t\t\t700,\n\t\t\t\t\t\t\t-436,\n\t\t\t\t\t\t\t701,\n\t\t\t\t\t\t\t702,\n\t\t\t\t\t\t\t703,\n\t\t\t\t\t\t\t704,\n\t\t\t\t\t\t\t705,\n\t\t\t\t\t\t\t706,\n\t\t\t\t\t\t\t-421,\n\t\t\t\t\t\t\t707,\n\t\t\t\t\t\t\t-268,\n\t\t\t\t\t\t\t708\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05370\",\n\t\t\t\t\t\t\"GEN\": \"Heinsberg\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t709,\n\t\t\t\t\t\t\t710,\n\t\t\t\t\t\t\t-564,\n\t\t\t\t\t\t\t711,\n\t\t\t\t\t\t\t-562,\n\t\t\t\t\t\t\t712,\n\t\t\t\t\t\t\t-399,\n\t\t\t\t\t\t\t713,\n\t\t\t\t\t\t\t-397,\n\t\t\t\t\t\t\t714,\n\t\t\t\t\t\t\t715,\n\t\t\t\t\t\t\t-416,\n\t\t\t\t\t\t\t716,\n\t\t\t\t\t\t\t-414,\n\t\t\t\t\t\t\t717,\n\t\t\t\t\t\t\t718,\n\t\t\t\t\t\t\t-706,\n\t\t\t\t\t\t\t719,\n\t\t\t\t\t\t\t-704\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05358\",\n\t\t\t\t\t\t\"GEN\": \"Düren\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-26,\n\t\t\t\t\t\t\t720,\n\t\t\t\t\t\t\t-24,\n\t\t\t\t\t\t\t721,\n\t\t\t\t\t\t\t722,\n\t\t\t\t\t\t\t723,\n\t\t\t\t\t\t\t724,\n\t\t\t\t\t\t\t725,\n\t\t\t\t\t\t\t-344,\n\t\t\t\t\t\t\t726,\n\t\t\t\t\t\t\t727\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05512\",\n\t\t\t\t\t\t\"GEN\": \"Bottrop\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t728,\n\t\t\t\t\t\t\t729,\n\t\t\t\t\t\t\t730,\n\t\t\t\t\t\t\t731,\n\t\t\t\t\t\t\t732,\n\t\t\t\t\t\t\t733,\n\t\t\t\t\t\t\t734,\n\t\t\t\t\t\t\t-348,\n\t\t\t\t\t\t\t735,\n\t\t\t\t\t\t\t-346,\n\t\t\t\t\t\t\t736,\n\t\t\t\t\t\t\t-725\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05119\",\n\t\t\t\t\t\t\"GEN\": \"Oberhausen\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-350,\n\t\t\t\t\t\t\t737,\n\t\t\t\t\t\t\t-734,\n\t\t\t\t\t\t\t738,\n\t\t\t\t\t\t\t739,\n\t\t\t\t\t\t\t740,\n\t\t\t\t\t\t\t741,\n\t\t\t\t\t\t\t-203,\n\t\t\t\t\t\t\t742,\n\t\t\t\t\t\t\t-212,\n\t\t\t\t\t\t\t743,\n\t\t\t\t\t\t\t-406,\n\t\t\t\t\t\t\t744,\n\t\t\t\t\t\t\t-404,\n\t\t\t\t\t\t\t745,\n\t\t\t\t\t\t\t-355,\n\t\t\t\t\t\t\t746,\n\t\t\t\t\t\t\t-353,\n\t\t\t\t\t\t\t747,\n\t\t\t\t\t\t\t748\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05112\",\n\t\t\t\t\t\t\"GEN\": \"Duisburg\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-619,\n\t\t\t\t\t\t\t749,\n\t\t\t\t\t\t\t-224,\n\t\t\t\t\t\t\t750,\n\t\t\t\t\t\t\t-222,\n\t\t\t\t\t\t\t751,\n\t\t\t\t\t\t\t752,\n\t\t\t\t\t\t\t753,\n\t\t\t\t\t\t\t-383,\n\t\t\t\t\t\t\t754,\n\t\t\t\t\t\t\t755,\n\t\t\t\t\t\t\t756,\n\t\t\t\t\t\t\t-730,\n\t\t\t\t\t\t\t757,\n\t\t\t\t\t\t\t-723,\n\t\t\t\t\t\t\t758,\n\t\t\t\t\t\t\t759\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05113\",\n\t\t\t\t\t\t\"GEN\": \"Essen\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t760,\n\t\t\t\t\t\t\t761,\n\t\t\t\t\t\t\t762,\n\t\t\t\t\t\t\t763,\n\t\t\t\t\t\t\t764,\n\t\t\t\t\t\t\t765,\n\t\t\t\t\t\t\t766,\n\t\t\t\t\t\t\t767,\n\t\t\t\t\t\t\t-290,\n\t\t\t\t\t\t\t768,\n\t\t\t\t\t\t\t769,\n\t\t\t\t\t\t\t-287,\n\t\t\t\t\t\t\t770,\n\t\t\t\t\t\t\t-677,\n\t\t\t\t\t\t\t771,\n\t\t\t\t\t\t\t-686,\n\t\t\t\t\t\t\t772,\n\t\t\t\t\t\t\t773,\n\t\t\t\t\t\t\t774,\n\t\t\t\t\t\t\t775\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05758\",\n\t\t\t\t\t\t\"GEN\": \"Herford\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-292,\n\t\t\t\t\t\t\t776,\n\t\t\t\t\t\t\t-767,\n\t\t\t\t\t\t\t777,\n\t\t\t\t\t\t\t-765,\n\t\t\t\t\t\t\t778,\n\t\t\t\t\t\t\t-763,\n\t\t\t\t\t\t\t779,\n\t\t\t\t\t\t\t-761,\n\t\t\t\t\t\t\t780\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05770\",\n\t\t\t\t\t\t\"GEN\": \"Minden-Lübbecke\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-775,\n\t\t\t\t\t\t\t781,\n\t\t\t\t\t\t\t-683,\n\t\t\t\t\t\t\t782,\n\t\t\t\t\t\t\t-681,\n\t\t\t\t\t\t\t783,\n\t\t\t\t\t\t\t-281,\n\t\t\t\t\t\t\t784,\n\t\t\t\t\t\t\t-36,\n\t\t\t\t\t\t\t785,\n\t\t\t\t\t\t\t-59,\n\t\t\t\t\t\t\t786,\n\t\t\t\t\t\t\t-57,\n\t\t\t\t\t\t\t787,\n\t\t\t\t\t\t\t-146,\n\t\t\t\t\t\t\t788,\n\t\t\t\t\t\t\t-529,\n\t\t\t\t\t\t\t789\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05754\",\n\t\t\t\t\t\t\"GEN\": \"Gütersloh\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-756,\n\t\t\t\t\t\t\t790,\n\t\t\t\t\t\t\t-381,\n\t\t\t\t\t\t\t791,\n\t\t\t\t\t\t\t792,\n\t\t\t\t\t\t\t-740,\n\t\t\t\t\t\t\t793,\n\t\t\t\t\t\t\t-732,\n\t\t\t\t\t\t\t794\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05117\",\n\t\t\t\t\t\t\"GEN\": \"Mülheim an der Ruhr\",\n\t\t\t\t\t\t\"BEZ\": \"Kreisfreie Stadt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-240,\n\t\t\t\t\t\t\t795,\n\t\t\t\t\t\t\t-238,\n\t\t\t\t\t\t\t796,\n\t\t\t\t\t\t\t797,\n\t\t\t\t\t\t\t-174,\n\t\t\t\t\t\t\t798,\n\t\t\t\t\t\t\t-172,\n\t\t\t\t\t\t\t799,\n\t\t\t\t\t\t\t-170,\n\t\t\t\t\t\t\t800,\n\t\t\t\t\t\t\t-168,\n\t\t\t\t\t\t\t801,\n\t\t\t\t\t\t\t-166,\n\t\t\t\t\t\t\t802,\n\t\t\t\t\t\t\t803,\n\t\t\t\t\t\t\t804,\n\t\t\t\t\t\t\t-192,\n\t\t\t\t\t\t\t805,\n\t\t\t\t\t\t\t806,\n\t\t\t\t\t\t\t-81,\n\t\t\t\t\t\t\t807,\n\t\t\t\t\t\t\t808,\n\t\t\t\t\t\t\t809,\n\t\t\t\t\t\t\t810,\n\t\t\t\t\t\t\t-76,\n\t\t\t\t\t\t\t811,\n\t\t\t\t\t\t\t-74,\n\t\t\t\t\t\t\t812,\n\t\t\t\t\t\t\t-106,\n\t\t\t\t\t\t\t813,\n\t\t\t\t\t\t\t-657,\n\t\t\t\t\t\t\t814,\n\t\t\t\t\t\t\t815,\n\t\t\t\t\t\t\t-673,\n\t\t\t\t\t\t\t-385,\n\t\t\t\t\t\t\t816,\n\t\t\t\t\t\t\t-753,\n\t\t\t\t\t\t\t817,\n\t\t\t\t\t\t\t-220,\n\t\t\t\t\t\t\t818,\n\t\t\t\t\t\t\t-218,\n\t\t\t\t\t\t\t819,\n\t\t\t\t\t\t\t-216,\n\t\t\t\t\t\t\t820\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05954\",\n\t\t\t\t\t\t\"GEN\": \"Ennepe-Ruhr-Kreis\",\n\t\t\t\t\t\t\"BEZ\": \"Kreis\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\t\"crs\": {\n\t\t\"type\": \"name\",\n\t\t\"properties\": {\n\t\t\t\"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\"\n\t\t}\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./src/data/nrw_landkreise_simplify200.topo.json\n// module id = 21\n// module chunks = 0","module.exports = {\n\t\"05111\": {\n\t\t\"c16\": 2391,\n\t\t\"ca16\": 230,\n\t\t\"q16\": 9.6,\n\t\t\"hz16\": 391,\n\t\t\"c\": \"5\"\n\t},\n\t\"05112\": {\n\t\t\"c16\": 1630,\n\t\t\"ca16\": 258,\n\t\t\"q16\": 15.8,\n\t\t\"hz16\": 332,\n\t\t\"c\": \"4\"\n\t},\n\t\"05113\": {\n\t\t\"c16\": 2218,\n\t\t\"ca16\": 295,\n\t\t\"q16\": 13.3,\n\t\t\"hz16\": 381,\n\t\t\"c\": \"4\"\n\t},\n\t\"05114\": {\n\t\t\"c16\": 760,\n\t\t\"ca16\": 153,\n\t\t\"q16\": 20.1,\n\t\t\"hz16\": 338,\n\t\t\"c\": \"4\"\n\t},\n\t\"05116\": {\n\t\t\"c16\": 826,\n\t\t\"ca16\": 83,\n\t\t\"q16\": 10,\n\t\t\"hz16\": 318,\n\t\t\"c\": \"3\"\n\t},\n\t\"05117\": {\n\t\t\"c16\": 667,\n\t\t\"ca16\": 100,\n\t\t\"q16\": 15,\n\t\t\"hz16\": 394,\n\t\t\"c\": \"5\"\n\t},\n\t\"05119\": {\n\t\t\"c16\": 745,\n\t\t\"ca16\": 130,\n\t\t\"q16\": 17.4,\n\t\t\"hz16\": 353,\n\t\t\"c\": \"4\"\n\t},\n\t\"05120\": {\n\t\t\"c16\": 224,\n\t\t\"ca16\": 39,\n\t\t\"q16\": 17.4,\n\t\t\"hz16\": 205,\n\t\t\"c\": \"1\"\n\t},\n\t\"05122\": {\n\t\t\"c16\": 400,\n\t\t\"ca16\": 59,\n\t\t\"q16\": 14.8,\n\t\t\"hz16\": 252,\n\t\t\"c\": \"2\"\n\t},\n\t\"05124\": {\n\t\t\"c16\": 1216,\n\t\t\"ca16\": 202,\n\t\t\"q16\": 16.6,\n\t\t\"hz16\": 347,\n\t\t\"c\": \"4\"\n\t},\n\t\"05154\": {\n\t\t\"c16\": 769,\n\t\t\"ca16\": 181,\n\t\t\"q16\": 23.5,\n\t\t\"hz16\": 248,\n\t\t\"c\": \"2\"\n\t},\n\t\"05158\": {\n\t\t\"c16\": 1492,\n\t\t\"ca16\": 318,\n\t\t\"q16\": 21.3,\n\t\t\"hz16\": 309,\n\t\t\"c\": \"3\"\n\t},\n\t\"05162\": {\n\t\t\"c16\": 1436,\n\t\t\"ca16\": 173,\n\t\t\"q16\": 12,\n\t\t\"hz16\": 319,\n\t\t\"c\": \"3\"\n\t},\n\t\"05166\": {\n\t\t\"c16\": 877,\n\t\t\"ca16\": 96,\n\t\t\"q16\": 10.9,\n\t\t\"hz16\": 295,\n\t\t\"c\": \"3\"\n\t},\n\t\"05170\": {\n\t\t\"c16\": 1416,\n\t\t\"ca16\": 227,\n\t\t\"q16\": 16,\n\t\t\"hz16\": 306,\n\t\t\"c\": \"3\"\n\t},\n\t\"05314\": {\n\t\t\"c16\": 961,\n\t\t\"ca16\": 180,\n\t\t\"q16\": 18.7,\n\t\t\"hz16\": 301,\n\t\t\"c\": \"3\"\n\t},\n\t\"05315\": {\n\t\t\"c16\": 3938,\n\t\t\"ca16\": 421,\n\t\t\"q16\": 10.7,\n\t\t\"hz16\": 371,\n\t\t\"c\": \"4\"\n\t},\n\t\"05316\": {\n\t\t\"c16\": 675,\n\t\t\"ca16\": 76,\n\t\t\"q16\": 11.3,\n\t\t\"hz16\": 413,\n\t\t\"c\": \"5\"\n\t},\n\t\"05334\": {\n\t\t\"c16\": 1799,\n\t\t\"ca16\": 313,\n\t\t\"q16\": 17.4,\n\t\t\"hz16\": 325,\n\t\t\"c\": \"3\"\n\t},\n\t\"05358\": {\n\t\t\"c16\": 752,\n\t\t\"ca16\": 149,\n\t\t\"q16\": 19.8,\n\t\t\"hz16\": 286,\n\t\t\"c\": \"3\"\n\t},\n\t\"05362\": {\n\t\t\"c16\": 1231,\n\t\t\"ca16\": 217,\n\t\t\"q16\": 17.6,\n\t\t\"hz16\": 264,\n\t\t\"c\": \"2\"\n\t},\n\t\"05366\": {\n\t\t\"c16\": 493,\n\t\t\"ca16\": 70,\n\t\t\"q16\": 14.2,\n\t\t\"hz16\": 258,\n\t\t\"c\": \"2\"\n\t},\n\t\"05370\": {\n\t\t\"c16\": 694,\n\t\t\"ca16\": 142,\n\t\t\"q16\": 20.5,\n\t\t\"hz16\": 275,\n\t\t\"c\": \"2\"\n\t},\n\t\"05374\": {\n\t\t\"c16\": 522,\n\t\t\"ca16\": 120,\n\t\t\"q16\": 23,\n\t\t\"hz16\": 191,\n\t\t\"c\": \"1\"\n\t},\n\t\"05378\": {\n\t\t\"c16\": 743,\n\t\t\"ca16\": 99,\n\t\t\"q16\": 13.3,\n\t\t\"hz16\": 263,\n\t\t\"c\": \"2\"\n\t},\n\t\"05382\": {\n\t\t\"c16\": 1729,\n\t\t\"ca16\": 319,\n\t\t\"q16\": 18.4,\n\t\t\"hz16\": 290,\n\t\t\"c\": \"3\"\n\t},\n\t\"05512\": {\n\t\t\"c16\": 382,\n\t\t\"ca16\": 47,\n\t\t\"q16\": 12.3,\n\t\t\"hz16\": 326,\n\t\t\"c\": \"3\"\n\t},\n\t\"05513\": {\n\t\t\"c16\": 873,\n\t\t\"ca16\": 198,\n\t\t\"q16\": 22.7,\n\t\t\"hz16\": 335,\n\t\t\"c\": \"4\"\n\t},\n\t\"05515\": {\n\t\t\"c16\": 849,\n\t\t\"ca16\": 156,\n\t\t\"q16\": 18.4,\n\t\t\"hz16\": 274,\n\t\t\"c\": \"2\"\n\t},\n\t\"05554\": {\n\t\t\"c16\": 759,\n\t\t\"ca16\": 152,\n\t\t\"q16\": 20,\n\t\t\"hz16\": 205,\n\t\t\"c\": \"1\"\n\t},\n\t\"05558\": {\n\t\t\"c16\": 588,\n\t\t\"ca16\": 156,\n\t\t\"q16\": 26.5,\n\t\t\"hz16\": 269,\n\t\t\"c\": \"2\"\n\t},\n\t\"05562\": {\n\t\t\"c16\": 2350,\n\t\t\"ca16\": 402,\n\t\t\"q16\": 17.1,\n\t\t\"hz16\": 380,\n\t\t\"c\": \"4\"\n\t},\n\t\"05566\": {\n\t\t\"c16\": 749,\n\t\t\"ca16\": 136,\n\t\t\"q16\": 18.2,\n\t\t\"hz16\": 169,\n\t\t\"c\": \"0\"\n\t},\n\t\"05570\": {\n\t\t\"c16\": 827,\n\t\t\"ca16\": 161,\n\t\t\"q16\": 19.5,\n\t\t\"hz16\": 298,\n\t\t\"c\": \"3\"\n\t},\n\t\"05711\": {\n\t\t\"c16\": 745,\n\t\t\"ca16\": 135,\n\t\t\"q16\": 18.1,\n\t\t\"hz16\": 224,\n\t\t\"c\": \"1\"\n\t},\n\t\"05754\": {\n\t\t\"c16\": 654,\n\t\t\"ca16\": 180,\n\t\t\"q16\": 27.5,\n\t\t\"hz16\": 181,\n\t\t\"c\": \"1\"\n\t},\n\t\"05758\": {\n\t\t\"c16\": 562,\n\t\t\"ca16\": 61,\n\t\t\"q16\": 10.9,\n\t\t\"hz16\": 223,\n\t\t\"c\": \"1\"\n\t},\n\t\"05762\": {\n\t\t\"c16\": 185,\n\t\t\"ca16\": 23,\n\t\t\"q16\": 12.4,\n\t\t\"hz16\": 128,\n\t\t\"c\": \"0\"\n\t},\n\t\"05766\": {\n\t\t\"c16\": 458,\n\t\t\"ca16\": 79,\n\t\t\"q16\": 17.2,\n\t\t\"hz16\": 131,\n\t\t\"c\": \"0\"\n\t},\n\t\"05770\": {\n\t\t\"c16\": 581,\n\t\t\"ca16\": 111,\n\t\t\"q16\": 19.1,\n\t\t\"hz16\": 186,\n\t\t\"c\": \"1\"\n\t},\n\t\"05774\": {\n\t\t\"c16\": 492,\n\t\t\"ca16\": 119,\n\t\t\"q16\": 24.2,\n\t\t\"hz16\": 162,\n\t\t\"c\": \"0\"\n\t},\n\t\"05911\": {\n\t\t\"c16\": 1283,\n\t\t\"ca16\": 133,\n\t\t\"q16\": 10.4,\n\t\t\"hz16\": 352,\n\t\t\"c\": \"4\"\n\t},\n\t\"05913\": {\n\t\t\"c16\": 2844,\n\t\t\"ca16\": 356,\n\t\t\"q16\": 12.5,\n\t\t\"hz16\": 485,\n\t\t\"c\": \"6\"\n\t},\n\t\"05914\": {\n\t\t\"c16\": 575,\n\t\t\"ca16\": 71,\n\t\t\"q16\": 12.3,\n\t\t\"hz16\": 304,\n\t\t\"c\": \"3\"\n\t},\n\t\"05915\": {\n\t\t\"c16\": 534,\n\t\t\"ca16\": 115,\n\t\t\"q16\": 21.5,\n\t\t\"hz16\": 298,\n\t\t\"c\": \"3\"\n\t},\n\t\"05916\": {\n\t\t\"c16\": 615,\n\t\t\"ca16\": 110,\n\t\t\"q16\": 17.9,\n\t\t\"hz16\": 395,\n\t\t\"c\": \"5\"\n\t},\n\t\"05954\": {\n\t\t\"c16\": 1101,\n\t\t\"ca16\": 200,\n\t\t\"q16\": 18.2,\n\t\t\"hz16\": 338,\n\t\t\"c\": \"4\"\n\t},\n\t\"05958\": {\n\t\t\"c16\": 417,\n\t\t\"ca16\": 76,\n\t\t\"q16\": 18.2,\n\t\t\"hz16\": 158,\n\t\t\"c\": \"0\"\n\t},\n\t\"05962\": {\n\t\t\"c16\": 905,\n\t\t\"ca16\": 200,\n\t\t\"q16\": 22.1,\n\t\t\"hz16\": 217,\n\t\t\"c\": \"1\"\n\t},\n\t\"05966\": {\n\t\t\"c16\": 236,\n\t\t\"ca16\": 34,\n\t\t\"q16\": 14.4,\n\t\t\"hz16\": 173,\n\t\t\"c\": \"0\"\n\t},\n\t\"05970\": {\n\t\t\"c16\": 406,\n\t\t\"ca16\": 83,\n\t\t\"q16\": 20.4,\n\t\t\"hz16\": 145,\n\t\t\"c\": \"0\"\n\t},\n\t\"05974\": {\n\t\t\"c16\": 601,\n\t\t\"ca16\": 144,\n\t\t\"q16\": 24,\n\t\t\"hz16\": 198,\n\t\t\"c\": \"1\"\n\t},\n\t\"05978\": {\n\t\t\"c16\": 1401,\n\t\t\"ca16\": 201,\n\t\t\"q16\": 14.3,\n\t\t\"hz16\": 354,\n\t\t\"c\": \"4\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./src/data/wed.json\n// module id = 22\n// module chunks = 0","// https://github.com/topojson/topojson Version 3.0.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nvar identity = function(x) {\n  return x;\n};\n\nvar transform = function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n};\n\nvar bbox = function(topology) {\n  var t = transform(topology.transform), key,\n      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\n  function bboxPoint(p) {\n    p = t(p);\n    if (p[0] < x0) x0 = p[0];\n    if (p[0] > x1) x1 = p[0];\n    if (p[1] < y0) y0 = p[1];\n    if (p[1] > y1) y1 = p[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n      case \"Point\": bboxPoint(o.coordinates); break;\n      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n    }\n  }\n\n  topology.arcs.forEach(function(arc) {\n    var i = -1, n = arc.length, p;\n    while (++i < n) {\n      p = t(arc[i], i);\n      if (p[0] < x0) x0 = p[0];\n      if (p[0] > x1) x1 = p[0];\n      if (p[1] < y0) y0 = p[1];\n      if (p[1] > y1) y1 = p[1];\n    }\n  });\n\n  for (key in topology.objects) {\n    bboxGeometry(topology.objects[key]);\n  }\n\n  return [x0, y0, x1, y1];\n};\n\nvar reverse = function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n};\n\nvar feature = function(topology, o) {\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature$1(topology, o); })}\n      : feature$1(topology, o);\n};\n\nfunction feature$1(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nfunction object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n\nvar stitch = function(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n};\n\nvar mesh = function(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n};\n\nfunction meshArcs(topology, object$$1, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object$$1, filter);\n  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n  return {type: \"MultiLineString\", arcs: stitch(topology, arcs)};\n}\n\nfunction extractArcs(topology, object$$1, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"LineString\": extract1(o.arcs); break;\n      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n      case \"MultiPolygon\": extract3(o.arcs); break;\n    }\n  }\n\n  geometry(object$$1);\n\n  geomsByArc.forEach(filter == null\n      ? function(geoms) { arcs.push(geoms[0].i); }\n      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\n  return arcs;\n}\n\nfunction planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area); // Note: doubled area!\n}\n\nvar merge = function(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n};\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"Polygon\": extract(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function(ring) {\n      ring.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitch(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nvar bisect = function(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n};\n\nvar neighbors = function(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n};\n\nvar untransform = function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n        n = input.length,\n        output = new Array(n),\n        x1 = Math.round((input[0] - dx) / kx),\n        y1 = Math.round((input[1] - dy) / ky);\n    output[0] = x1 - x0, x0 = x1;\n    output[1] = y1 - y0, y0 = y1;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n};\n\nvar quantize = function(topology, transform) {\n  if (topology.transform) throw new Error(\"already quantized\");\n\n  if (!transform || !transform.scale) {\n    if (!((n = Math.floor(transform)) >= 2)) throw new Error(\"n must be \\u22652\");\n    box = topology.bbox || bbox(topology);\n    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;\n    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};\n  } else {\n    box = topology.bbox;\n  }\n\n  var t = untransform(transform), box, key, inputs = topology.objects, outputs = {};\n\n  function quantizePoint(point) {\n    return t(point);\n  }\n\n  function quantizeGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n      case \"MultiPoint\": output = {type: \"MultiPoint\", coordinates: input.coordinates.map(quantizePoint)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function quantizeArc(input) {\n    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic\n    output[0] = t(input[0], 0);\n    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points\n    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points\n    output.length = j;\n    return output;\n  }\n\n  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);\n\n  return {\n    type: \"Topology\",\n    bbox: box,\n    transform: transform,\n    objects: outputs,\n    arcs: topology.arcs.map(quantizeArc)\n  };\n};\n\n// Computes the bounding box of the specified hash of GeoJSON objects.\nvar bounds = function(objects) {\n  var x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  function boundGeometry(geometry) {\n    if (geometry != null && boundGeometryType.hasOwnProperty(geometry.type)) boundGeometryType[geometry.type](geometry);\n  }\n\n  var boundGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(boundGeometry); },\n    Point: function(o) { boundPoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates.forEach(boundPoint); },\n    LineString: function(o) { boundLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs.forEach(boundLine); },\n    Polygon: function(o) { o.arcs.forEach(boundLine); },\n    MultiPolygon: function(o) { o.arcs.forEach(boundMultiLine); }\n  };\n\n  function boundPoint(coordinates) {\n    var x = coordinates[0],\n        y = coordinates[1];\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  function boundLine(coordinates) {\n    coordinates.forEach(boundPoint);\n  }\n\n  function boundMultiLine(coordinates) {\n    coordinates.forEach(boundLine);\n  }\n\n  for (var key in objects) {\n    boundGeometry(objects[key]);\n  }\n\n  return x1 >= x0 && y1 >= y0 ? [x0, y0, x1, y1] : undefined;\n};\n\nvar hashset = function(size, hash, equal, type, empty) {\n  if (arguments.length === 3) {\n    type = Array;\n    empty = null;\n  }\n\n  var store = new type(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    store[i] = empty;\n  }\n\n  function add(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) throw new Error(\"full hashset\");\n      match = store[index = (index + 1) & mask];\n    }\n    store[index] = value;\n    return true;\n  }\n\n  function has(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) break;\n      match = store[index = (index + 1) & mask];\n    }\n    return false;\n  }\n\n  function values() {\n    var values = [];\n    for (var i = 0, n = store.length; i < n; ++i) {\n      var match = store[i];\n      if (match != empty) values.push(match);\n    }\n    return values;\n  }\n\n  return {\n    add: add,\n    has: has,\n    values: values\n  };\n};\n\nvar hashmap = function(size, hash, equal, keyType, keyEmpty, valueType) {\n  if (arguments.length === 3) {\n    keyType = valueType = Array;\n    keyEmpty = null;\n  }\n\n  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      valstore = new valueType(size),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    keystore[i] = keyEmpty;\n  }\n\n  function set(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index] = value;\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function maybeSet(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function get(key, missingValue) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) break;\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    return missingValue;\n  }\n\n  function keys() {\n    var keys = [];\n    for (var i = 0, n = keystore.length; i < n; ++i) {\n      var matchKey = keystore[i];\n      if (matchKey != keyEmpty) keys.push(matchKey);\n    }\n    return keys;\n  }\n\n  return {\n    set: set,\n    maybeSet: maybeSet, // set if unset\n    get: get,\n    keys: keys\n  };\n};\n\nvar equalPoint = function(pointA, pointB) {\n  return pointA[0] === pointB[0] && pointA[1] === pointB[1];\n};\n\n// TODO if quantized, use simpler Int32 hashing?\n\nvar buffer = new ArrayBuffer(16);\nvar floats = new Float64Array(buffer);\nvar uints = new Uint32Array(buffer);\n\nvar hashPoint = function(point) {\n  floats[0] = point[0];\n  floats[1] = point[1];\n  var hash = uints[0] ^ uints[1];\n  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n  return hash & 0x7fffffff;\n};\n\n// Given an extracted (pre-)topology, identifies all of the junctions. These are\n// the points at which arcs (lines or rings) will need to be cut so that each\n// arc is represented uniquely.\n//\n// A junction is a point where at least one arc deviates from another arc going\n// through the same point. For example, consider the point B. If there is a arc\n// through ABC and another arc through CBA, then B is not a junction because in\n// both cases the adjacent point pairs are {A,C}. However, if there is an\n// additional arc ABD, then {A,D} != {A,C}, and thus B becomes a junction.\n//\n// For a closed ring ABCA, the first point A’s adjacent points are the second\n// and last point {B,C}. For a line, the first and last point are always\n// considered junctions, even if the line is closed; this ensures that a closed\n// line is never rotated.\nvar join = function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      indexes = index(),\n      visitedByIndex = new Int32Array(coordinates.length),\n      leftByIndex = new Int32Array(coordinates.length),\n      rightByIndex = new Int32Array(coordinates.length),\n      junctionByIndex = new Int8Array(coordinates.length),\n      junctionCount = 0, // upper bound on number of junctions\n      i, n,\n      previousIndex,\n      currentIndex,\n      nextIndex;\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = leftByIndex[i] = rightByIndex[i] = -1;\n  }\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineStart = line[0],\n        lineEnd = line[1];\n    currentIndex = indexes[lineStart];\n    nextIndex = indexes[++lineStart];\n    ++junctionCount, junctionByIndex[currentIndex] = 1; // start\n    while (++lineStart <= lineEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[lineStart]);\n    }\n    ++junctionCount, junctionByIndex[nextIndex] = 1; // end\n  }\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = -1;\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0] + 1,\n        ringEnd = ring[1];\n    previousIndex = indexes[ringEnd - 1];\n    currentIndex = indexes[ringStart - 1];\n    nextIndex = indexes[ringStart];\n    sequence(i, previousIndex, currentIndex, nextIndex);\n    while (++ringStart <= ringEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[ringStart]);\n    }\n  }\n\n  function sequence(i, previousIndex, currentIndex, nextIndex) {\n    if (visitedByIndex[currentIndex] === i) return; // ignore self-intersection\n    visitedByIndex[currentIndex] = i;\n    var leftIndex = leftByIndex[currentIndex];\n    if (leftIndex >= 0) {\n      var rightIndex = rightByIndex[currentIndex];\n      if ((leftIndex !== previousIndex || rightIndex !== nextIndex)\n        && (leftIndex !== nextIndex || rightIndex !== previousIndex)) {\n        ++junctionCount, junctionByIndex[currentIndex] = 1;\n      }\n    } else {\n      leftByIndex[currentIndex] = previousIndex;\n      rightByIndex[currentIndex] = nextIndex;\n    }\n  }\n\n  function index() {\n    var indexByPoint = hashmap(coordinates.length * 1.4, hashIndex, equalIndex, Int32Array, -1, Int32Array),\n        indexes = new Int32Array(coordinates.length);\n\n    for (var i = 0, n = coordinates.length; i < n; ++i) {\n      indexes[i] = indexByPoint.maybeSet(i, i);\n    }\n\n    return indexes;\n  }\n\n  function hashIndex(i) {\n    return hashPoint(coordinates[i]);\n  }\n\n  function equalIndex(i, j) {\n    return equalPoint(coordinates[i], coordinates[j]);\n  }\n\n  visitedByIndex = leftByIndex = rightByIndex = null;\n\n  var junctionByPoint = hashset(junctionCount * 1.4, hashPoint, equalPoint), j;\n\n  // Convert back to a standard hashset by point for caller convenience.\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    if (junctionByIndex[j = indexes[i]]) {\n      junctionByPoint.add(coordinates[j]);\n    }\n  }\n\n  return junctionByPoint;\n};\n\n// Given an extracted (pre-)topology, cuts (or rotates) arcs so that all shared\n// point sequences are identified. The topology can then be subsequently deduped\n// to remove exact duplicate arcs.\nvar cut = function(topology) {\n  var junctions = join(topology),\n      coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      next,\n      i, n;\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineMid = line[0],\n        lineEnd = line[1];\n    while (++lineMid < lineEnd) {\n      if (junctions.has(coordinates[lineMid])) {\n        next = {0: lineMid, 1: line[1]};\n        line[1] = lineMid;\n        line = line.next = next;\n      }\n    }\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0],\n        ringMid = ringStart,\n        ringEnd = ring[1],\n        ringFixed = junctions.has(coordinates[ringStart]);\n    while (++ringMid < ringEnd) {\n      if (junctions.has(coordinates[ringMid])) {\n        if (ringFixed) {\n          next = {0: ringMid, 1: ring[1]};\n          ring[1] = ringMid;\n          ring = ring.next = next;\n        } else { // For the first junction, we can rotate rather than cut.\n          rotateArray(coordinates, ringStart, ringEnd, ringEnd - ringMid);\n          coordinates[ringEnd] = coordinates[ringStart];\n          ringFixed = true;\n          ringMid = ringStart; // restart; we may have skipped junctions\n        }\n      }\n    }\n  }\n\n  return topology;\n};\n\nfunction rotateArray(array, start, end, offset) {\n  reverse$1(array, start, end);\n  reverse$1(array, start, start + offset);\n  reverse$1(array, start + offset, end);\n}\n\nfunction reverse$1(array, start, end) {\n  for (var mid = start + ((end-- - start) >> 1), t; start < mid; ++start, --end) {\n    t = array[start], array[start] = array[end], array[end] = t;\n  }\n}\n\n// Given a cut topology, combines duplicate arcs.\nvar dedup = function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines, line,\n      rings = topology.rings, ring,\n      arcCount = lines.length + rings.length,\n      i, n;\n\n  delete topology.lines;\n  delete topology.rings;\n\n  // Count the number of (non-unique) arcs to initialize the hashmap safely.\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i]; while (line = line.next) ++arcCount;\n  }\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i]; while (ring = ring.next) ++arcCount;\n  }\n\n  var arcsByEnd = hashmap(arcCount * 2 * 1.4, hashPoint, equalPoint),\n      arcs = topology.arcs = [];\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i];\n    do {\n      dedupLine(line);\n    } while (line = line.next);\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i];\n    if (ring.next) { // arc is no longer closed\n      do {\n        dedupLine(ring);\n      } while (ring = ring.next);\n    } else {\n      dedupRing(ring);\n    }\n  }\n\n  function dedupLine(arc) {\n    var startPoint,\n        endPoint,\n        startArcs, startArc,\n        endArcs, endArc,\n        i, n;\n\n    // Does this arc match an existing arc in order?\n    if (startArcs = arcsByEnd.get(startPoint = coordinates[arc[0]])) {\n      for (i = 0, n = startArcs.length; i < n; ++i) {\n        startArc = startArcs[i];\n        if (equalLine(startArc, arc)) {\n          arc[0] = startArc[0];\n          arc[1] = startArc[1];\n          return;\n        }\n      }\n    }\n\n    // Does this arc match an existing arc in reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[1]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (reverseEqualLine(endArc, arc)) {\n          arc[1] = endArc[0];\n          arc[0] = endArc[1];\n          return;\n        }\n      }\n    }\n\n    if (startArcs) startArcs.push(arc); else arcsByEnd.set(startPoint, [arc]);\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function dedupRing(arc) {\n    var endPoint,\n        endArcs,\n        endArc,\n        i, n;\n\n    // Does this arc match an existing line in order, or reverse order?\n    // Rings are closed, so their start point and end point is the same.\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    // Otherwise, does this arc match an existing ring in order, or reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function equalLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, ++ib) if (!equalPoint(coordinates[ia], coordinates[ib])) return false;\n    return true;\n  }\n\n  function reverseEqualLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, --jb) if (!equalPoint(coordinates[ia], coordinates[jb])) return false;\n    return true;\n  }\n\n  function equalRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[ib + (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  function reverseEqualRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = n - findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[jb - (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  // Rings are rotated to a consistent, but arbitrary, start point.\n  // This is necessary to detect when a ring and a rotated copy are dupes.\n  function findMinimumOffset(arc) {\n    var start = arc[0],\n        end = arc[1],\n        mid = start,\n        minimum = mid,\n        minimumPoint = coordinates[mid];\n    while (++mid < end) {\n      var point = coordinates[mid];\n      if (point[0] < minimumPoint[0] || point[0] === minimumPoint[0] && point[1] < minimumPoint[1]) {\n        minimum = mid;\n        minimumPoint = point;\n      }\n    }\n    return minimum - start;\n  }\n\n  return topology;\n};\n\n// Given an array of arcs in absolute (but already quantized!) coordinates,\n// converts to fixed-point delta encoding.\n// This is a destructive operation that modifies the given arcs!\nvar delta = function(arcs) {\n  var i = -1,\n      n = arcs.length;\n\n  while (++i < n) {\n    var arc = arcs[i],\n        j = 0,\n        k = 1,\n        m = arc.length,\n        point = arc[0],\n        x0 = point[0],\n        y0 = point[1],\n        x1,\n        y1;\n\n    while (++j < m) {\n      point = arc[j], x1 = point[0], y1 = point[1];\n      if (x1 !== x0 || y1 !== y0) arc[k++] = [x1 - x0, y1 - y0], x0 = x1, y0 = y1;\n    }\n\n    if (k === 1) arc[k++] = [0, 0]; // Each arc must be an array of two or more positions.\n\n    arc.length = k;\n  }\n\n  return arcs;\n};\n\n// Extracts the lines and rings from the specified hash of geometry objects.\n//\n// Returns an object with three properties:\n//\n// * coordinates - shared buffer of [x, y] coordinates\n// * lines - lines extracted from the hash, of the form [start, end]\n// * rings - rings extracted from the hash, of the form [start, end]\n//\n// For each ring or line, start and end represent inclusive indexes into the\n// coordinates buffer. For rings (and closed lines), coordinates[start] equals\n// coordinates[end].\n//\n// For each line or polygon geometry in the input hash, including nested\n// geometries as in geometry collections, the `coordinates` array is replaced\n// with an equivalent `arcs` array that, for each line (for line string\n// geometries) or ring (for polygon geometries), points to one of the above\n// lines or rings.\nvar extract = function(objects) {\n  var index = -1,\n      lines = [],\n      rings = [],\n      coordinates = [];\n\n  function extractGeometry(geometry) {\n    if (geometry && extractGeometryType.hasOwnProperty(geometry.type)) extractGeometryType[geometry.type](geometry);\n  }\n\n  var extractGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(extractGeometry); },\n    LineString: function(o) { o.arcs = extractLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(extractLine); },\n    Polygon: function(o) { o.arcs = o.arcs.map(extractRing); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(extractMultiRing); }\n  };\n\n  function extractLine(line) {\n    for (var i = 0, n = line.length; i < n; ++i) coordinates[++index] = line[i];\n    var arc = {0: index - n + 1, 1: index};\n    lines.push(arc);\n    return arc;\n  }\n\n  function extractRing(ring) {\n    for (var i = 0, n = ring.length; i < n; ++i) coordinates[++index] = ring[i];\n    var arc = {0: index - n + 1, 1: index};\n    rings.push(arc);\n    return arc;\n  }\n\n  function extractMultiRing(rings) {\n    return rings.map(extractRing);\n  }\n\n  for (var key in objects) {\n    extractGeometry(objects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    coordinates: coordinates,\n    lines: lines,\n    rings: rings,\n    objects: objects\n  };\n};\n\n// Given a hash of GeoJSON objects, returns a hash of GeoJSON geometry objects.\n// Any null input geometry objects are represented as {type: null} in the output.\n// Any feature.{id,properties,bbox} are transferred to the output geometry object.\n// Each output geometry object is a shallow copy of the input (e.g., properties, coordinates)!\nvar geometry = function(inputs) {\n  var outputs = {}, key;\n  for (key in inputs) outputs[key] = geomifyObject(inputs[key]);\n  return outputs;\n};\n\nfunction geomifyObject(input) {\n  return input == null ? {type: null}\n      : (input.type === \"FeatureCollection\" ? geomifyFeatureCollection\n      : input.type === \"Feature\" ? geomifyFeature\n      : geomifyGeometry)(input);\n}\n\nfunction geomifyFeatureCollection(input) {\n  var output = {type: \"GeometryCollection\", geometries: input.features.map(geomifyFeature)};\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nfunction geomifyFeature(input) {\n  var output = geomifyGeometry(input.geometry), key; // eslint-disable-line no-unused-vars\n  if (input.id != null) output.id = input.id;\n  if (input.bbox != null) output.bbox = input.bbox;\n  for (key in input.properties) { output.properties = input.properties; break; }\n  return output;\n}\n\nfunction geomifyGeometry(input) {\n  if (input == null) return {type: null};\n  var output = input.type === \"GeometryCollection\" ? {type: \"GeometryCollection\", geometries: input.geometries.map(geomifyGeometry)}\n      : input.type === \"Point\" || input.type === \"MultiPoint\" ? {type: input.type, coordinates: input.coordinates}\n      : {type: input.type, arcs: input.coordinates}; // TODO Check for unknown types?\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nvar prequantize = function(objects, bbox, n) {\n  var x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3],\n      kx = x1 - x0 ? (n - 1) / (x1 - x0) : 1,\n      ky = y1 - y0 ? (n - 1) / (y1 - y0) : 1;\n\n  function quantizePoint(input) {\n    return [Math.round((input[0] - x0) * kx), Math.round((input[1] - y0) * ky)];\n  }\n\n  function quantizePoints(input, m) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        pi,\n        px,\n        py,\n        x,\n        y;\n\n    while (++i < n) {\n      pi = input[i];\n      x = Math.round((pi[0] - x0) * kx);\n      y = Math.round((pi[1] - y0) * ky);\n      if (x !== px || y !== py) output[j++] = [px = x, py = y]; // non-coincident points\n    }\n\n    output.length = j;\n    while (j < m) j = output.push([output[0][0], output[0][1]]);\n    return output;\n  }\n\n  function quantizeLine(input) {\n    return quantizePoints(input, 2);\n  }\n\n  function quantizeRing(input) {\n    return quantizePoints(input, 4);\n  }\n\n  function quantizePolygon(input) {\n    return input.map(quantizeRing);\n  }\n\n  function quantizeGeometry(o) {\n    if (o != null && quantizeGeometryType.hasOwnProperty(o.type)) quantizeGeometryType[o.type](o);\n  }\n\n  var quantizeGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(quantizeGeometry); },\n    Point: function(o) { o.coordinates = quantizePoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates = o.coordinates.map(quantizePoint); },\n    LineString: function(o) { o.arcs = quantizeLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(quantizeLine); },\n    Polygon: function(o) { o.arcs = quantizePolygon(o.arcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(quantizePolygon); }\n  };\n\n  for (var key in objects) {\n    quantizeGeometry(objects[key]);\n  }\n\n  return {\n    scale: [1 / kx, 1 / ky],\n    translate: [x0, y0]\n  };\n};\n\n// Constructs the TopoJSON Topology for the specified hash of features.\n// Each object in the specified hash must be a GeoJSON object,\n// meaning FeatureCollection, a Feature or a geometry object.\nvar topology = function(objects, quantization) {\n  var bbox = bounds(objects = geometry(objects)),\n      transform = quantization > 0 && bbox && prequantize(objects, bbox, quantization),\n      topology = dedup(cut(extract(objects))),\n      coordinates = topology.coordinates,\n      indexByArc = hashmap(topology.arcs.length * 1.4, hashArc, equalArc);\n\n  objects = topology.objects; // for garbage collection\n  topology.bbox = bbox;\n  topology.arcs = topology.arcs.map(function(arc, i) {\n    indexByArc.set(arc, i);\n    return coordinates.slice(arc[0], arc[1] + 1);\n  });\n\n  delete topology.coordinates;\n  coordinates = null;\n\n  function indexGeometry(geometry$$1) {\n    if (geometry$$1 && indexGeometryType.hasOwnProperty(geometry$$1.type)) indexGeometryType[geometry$$1.type](geometry$$1);\n  }\n\n  var indexGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(indexGeometry); },\n    LineString: function(o) { o.arcs = indexArcs(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    Polygon: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(indexMultiArcs); }\n  };\n\n  function indexArcs(arc) {\n    var indexes = [];\n    do {\n      var index = indexByArc.get(arc);\n      indexes.push(arc[0] < arc[1] ? index : ~index);\n    } while (arc = arc.next);\n    return indexes;\n  }\n\n  function indexMultiArcs(arcs) {\n    return arcs.map(indexArcs);\n  }\n\n  for (var key in objects) {\n    indexGeometry(objects[key]);\n  }\n\n  if (transform) {\n    topology.transform = transform;\n    topology.arcs = delta(topology.arcs);\n  }\n\n  return topology;\n};\n\nfunction hashArc(arc) {\n  var i = arc[0], j = arc[1], t;\n  if (j < i) t = i, i = j, j = t;\n  return i + 31 * j;\n}\n\nfunction equalArc(arcA, arcB) {\n  var ia = arcA[0], ja = arcA[1],\n      ib = arcB[0], jb = arcB[1], t;\n  if (ja < ia) t = ia, ia = ja, ja = t;\n  if (jb < ib) t = ib, ib = jb, jb = t;\n  return ia === ib && ja === jb;\n}\n\nvar prune = function(topology) {\n  var oldObjects = topology.objects,\n      newObjects = {},\n      oldArcs = topology.arcs,\n      newArcs = [],\n      newArcIndex = -1,\n      newIndexByOldIndex = new Array(oldArcs.length),\n      key;\n\n  function pruneGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(pruneGeometry)}; break;\n      case \"LineString\": output = {type: \"LineString\", arcs: pruneArcs(input.arcs)}; break;\n      case \"MultiLineString\": output = {type: \"MultiLineString\", arcs: input.arcs.map(pruneArcs)}; break;\n      case \"Polygon\": output = {type: \"Polygon\", arcs: input.arcs.map(pruneArcs)}; break;\n      case \"MultiPolygon\": output = {type: \"MultiPolygon\", arcs: input.arcs.map(pruneMultiArcs)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function pruneArc(oldIndex) {\n    var oldReverse = oldIndex < 0 && (oldIndex = ~oldIndex, true), newIndex;\n\n    // If this is the first instance of this arc, record it under its new index.\n    if ((newIndex = newIndexByOldIndex[oldIndex]) == null) {\n      newIndexByOldIndex[oldIndex] = newIndex = ++newArcIndex;\n      newArcs[newIndex] = oldArcs[oldIndex];\n    }\n\n    return oldReverse ? ~newIndex : newIndex;\n  }\n\n  function pruneArcs(arcs) {\n    return arcs.map(pruneArc);\n  }\n\n  function pruneMultiArcs(arcs) {\n    return arcs.map(pruneArcs);\n  }\n\n  for (key in oldObjects) {\n    newObjects[key] = pruneGeometry(oldObjects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    bbox: topology.bbox,\n    transform: topology.transform,\n    objects: newObjects,\n    arcs: newArcs\n  };\n};\n\nvar filter = function(topology, filter) {\n  var oldObjects = topology.objects,\n      newObjects = {},\n      key;\n\n  if (filter == null) filter = filterTrue;\n\n  function filterGeometry(input) {\n    var output, arcs;\n    switch (input.type) {\n      case \"Polygon\": {\n        arcs = filterRings(input.arcs);\n        output = arcs ? {type: \"Polygon\", arcs: arcs} : {type: null};\n        break;\n      }\n      case \"MultiPolygon\": {\n        arcs = input.arcs.map(filterRings).filter(filterIdentity);\n        output = arcs.length ? {type: \"MultiPolygon\", arcs: arcs} : {type: null};\n        break;\n      }\n      case \"GeometryCollection\": {\n        arcs = input.geometries.map(filterGeometry).filter(filterNotNull);\n        output = arcs.length ? {type: \"GeometryCollection\", geometries: arcs} : {type: null};\n        break;\n      }\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function filterRings(arcs) {\n    return arcs.length && filterExteriorRing(arcs[0]) // if the exterior is small, ignore any holes\n        ? [arcs[0]].concat(arcs.slice(1).filter(filterInteriorRing))\n        : null;\n  }\n\n  function filterExteriorRing(ring) {\n    return filter(ring, false);\n  }\n\n  function filterInteriorRing(ring) {\n    return filter(ring, true);\n  }\n\n  for (key in oldObjects) {\n    newObjects[key] = filterGeometry(oldObjects[key]);\n  }\n\n  return prune({\n    type: \"Topology\",\n    bbox: topology.bbox,\n    transform: topology.transform,\n    objects: newObjects,\n    arcs: topology.arcs\n  });\n};\n\nfunction filterTrue() {\n  return true;\n}\n\nfunction filterIdentity(x) {\n  return x;\n}\n\nfunction filterNotNull(geometry) {\n  return geometry.type != null;\n}\n\nvar filterAttached = function(topology) {\n  var uniqueRingByArc = {}, // arc index -> index of unique associated ring, or -1 if used by multiple rings\n      ringIndex = 0,\n      name;\n\n  function testGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(testGeometry); break;\n      case \"Polygon\": testArcs(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(testArcs); break;\n    }\n  }\n\n  function testArcs(arcs) {\n    for (var i = 0, n = arcs.length; i < n; ++i, ++ringIndex) {\n      for (var ring = arcs[i], j = 0, m = ring.length; j < m; ++j) {\n        var arc = ring[j];\n        if (arc < 0) arc = ~arc;\n        var uniqueRing = uniqueRingByArc[arc];\n        if (uniqueRing >= 0 && uniqueRing !== ringIndex) uniqueRingByArc[arc] = -1;\n        else uniqueRingByArc[arc] = ringIndex;\n      }\n    }\n  }\n\n  for (name in topology.objects) {\n    testGeometry(topology.objects[name]);\n  }\n\n  return function(ring) {\n    for (var j = 0, m = ring.length, arc; j < m; ++j) {\n      if (arc = ring[j], uniqueRingByArc[arc < 0 ? ~arc : arc] < 0) {\n        return true;\n      }\n    }\n    return false;\n  };\n};\n\nfunction planarTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1])) / 2;\n}\n\nfunction planarRingArea$1(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area) / 2;\n}\n\nvar filterWeight = function(topology, minWeight, weight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\n  if (weight == null) weight = planarRingArea$1;\n\n  return function(ring, interior) {\n    return weight(feature(topology, {type: \"Polygon\", arcs: [ring]}).geometry.coordinates[0], interior) >= minWeight;\n  };\n};\n\nvar filterAttachedWeight = function(topology, minWeight, weight) {\n  var a = filterAttached(topology),\n      w = filterWeight(topology, minWeight, weight);\n  return function(ring, interior) {\n    return a(ring, interior) || w(ring, interior);\n  };\n};\n\nfunction compare(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nvar newHeap = function() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compare(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compare(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compare(array[l], child) < 0) child = array[j = l];\n      if (r < size && compare(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n};\n\nfunction copy(point) {\n  return [point[0], point[1], 0];\n}\n\nvar presimplify = function(topology, weight) {\n  var point = topology.transform ? transform(topology.transform) : copy,\n      heap = newHeap();\n\n  if (weight == null) weight = planarTriangleArea;\n\n  var arcs = topology.arcs.map(function(arc) {\n    var triangles = [],\n        maxWeight = 0,\n        triangle,\n        i,\n        n;\n\n    arc = arc.map(point);\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = [arc[i - 1], arc[i], arc[i + 1]];\n      triangle[1][2] = weight(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    // Always keep the arc endpoints!\n    arc[0][2] = arc[n][2] = Infinity;\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the weight of the current point is less than that of the previous\n      // point to be eliminated, use the latter’s weight instead. This ensures\n      // that the current point cannot be eliminated without eliminating\n      // previously- eliminated points.\n      if (triangle[1][2] < maxWeight) triangle[1][2] = maxWeight;\n      else maxWeight = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    return arc;\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = weight(triangle);\n    heap.push(triangle);\n  }\n\n  return {\n    type: \"Topology\",\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n};\n\nvar quantile = function(topology, p) {\n  var array = [];\n\n  topology.arcs.forEach(function(arc) {\n    arc.forEach(function(point) {\n      if (isFinite(point[2])) { // Ignore endpoints, whose weight is Infinity.\n        array.push(point[2]);\n      }\n    });\n  });\n\n  return array.length && quantile$1(array.sort(descending), p);\n};\n\nfunction quantile$1(array, p) {\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return array[0];\n  if (p >= 1) return array[n - 1];\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = array[i],\n      b = array[i + 1];\n  return a + (b - a) * (h - i);\n}\n\nfunction descending(a, b) {\n  return b - a;\n}\n\nvar simplify = function(topology, minWeight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\n  // Remove points whose weight is less than the minimum weight.\n  var arcs = topology.arcs.map(function(input) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        point;\n\n    while (++i < n) {\n      if ((point = input[i])[2] >= minWeight) {\n        output[j++] = [point[0], point[1]];\n      }\n    }\n\n    output.length = j;\n    return output;\n  });\n\n  return {\n    type: \"Topology\",\n    transform: topology.transform,\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n};\n\nvar pi = Math.PI;\nvar tau = 2 * pi;\nvar quarterPi = pi / 4;\nvar radians = pi / 180;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar sin = Math.sin;\n\nfunction halfArea(ring, closed) {\n  var i = 0,\n      n = ring.length,\n      sum = 0,\n      point = ring[closed ? i++ : n - 1],\n      lambda0, lambda1 = point[0] * radians,\n      phi1 = (point[1] * radians) / 2 + quarterPi,\n      cosPhi0, cosPhi1 = cos(phi1),\n      sinPhi0, sinPhi1 = sin(phi1);\n\n  for (; i < n; ++i) {\n    point = ring[i];\n    lambda0 = lambda1, lambda1 = point[0] * radians;\n    phi1 = (point[1] * radians) / 2 + quarterPi;\n    cosPhi0 = cosPhi1, cosPhi1 = cos(phi1);\n    sinPhi0 = sinPhi1, sinPhi1 = sin(phi1);\n\n    // Spherical excess E for a spherical triangle with vertices: south pole,\n    // previous point, current point.  Uses a formula derived from Cagnoli’s\n    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n    // See https://github.com/d3/d3-geo/blob/master/README.md#geoArea\n    var dLambda = lambda1 - lambda0,\n        sdLambda = dLambda >= 0 ? 1 : -1,\n        adLambda = sdLambda * dLambda,\n        k = sinPhi0 * sinPhi1,\n        u = cosPhi0 * cosPhi1 + k * cos(adLambda),\n        v = k * sdLambda * sin(adLambda);\n    sum += atan2(v, u);\n  }\n\n  return sum;\n}\n\nfunction sphericalRingArea(ring, interior) {\n  var sum = halfArea(ring, true);\n  if (interior) sum *= -1;\n  return (sum < 0 ? tau + sum : sum) * 2;\n}\n\nfunction sphericalTriangleArea(t) {\n  var sum = halfArea(t, false);\n  return (sum < 0 ? tau + sum : sum) * 2;\n}\n\nexports.bbox = bbox;\nexports.feature = feature;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.neighbors = neighbors;\nexports.quantize = quantize;\nexports.transform = transform;\nexports.untransform = untransform;\nexports.topology = topology;\nexports.filter = filter;\nexports.filterAttached = filterAttached;\nexports.filterAttachedWeight = filterAttachedWeight;\nexports.filterWeight = filterWeight;\nexports.planarRingArea = planarRingArea$1;\nexports.planarTriangleArea = planarTriangleArea;\nexports.presimplify = presimplify;\nexports.quantile = quantile;\nexports.simplify = simplify;\nexports.sphericalRingArea = sphericalRingArea;\nexports.sphericalTriangleArea = sphericalTriangleArea;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/dist/topojson.js\n// module id = 23\n// module chunks = 0"],"sourceRoot":""}